/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.rong.imlib.swig;

public class RcimNativeSendMessageCallback {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected RcimNativeSendMessageCallback(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RcimNativeSendMessageCallback obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(RcimNativeSendMessageCallback obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        rc_adapterJNI.delete_RcimNativeSendMessageCallback(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    rc_adapterJNI.RcimNativeSendMessageCallback_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    rc_adapterJNI.RcimNativeSendMessageCallback_change_ownership(this, swigCPtr, true);
  }

/**
 * delete() 方法名太过于普通，所以新增 swigDelete()
 * 使用该方法进行释放，不要使用 delete()
 * 方便进行代码释放的检查
 * */
public synchronized void swigDelete() {
    delete();
}

  public RcimNativeSendMessageCallback() {
    this(rc_adapterJNI.new_RcimNativeSendMessageCallback(), true);
    rc_adapterJNI.RcimNativeSendMessageCallback_director_connect(this, swigCPtr, true, true);
  }

  public void onSave(RcimMessageBox msg) {
    rc_adapterJNI.RcimNativeSendMessageCallback_onSave(swigCPtr, this, RcimMessageBox.getCPtr(msg), msg);
  }

  public void onResult(RcimNativeSendMessageCallback deleteThis, int code, RcimMessageBox msg) {
    rc_adapterJNI.RcimNativeSendMessageCallback_onResult(swigCPtr, this, RcimNativeSendMessageCallback.getCPtr(deleteThis), deleteThis, code, RcimMessageBox.getCPtr(msg), msg);
  }

}

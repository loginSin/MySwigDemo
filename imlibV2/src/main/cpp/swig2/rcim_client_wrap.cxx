/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


#define SWIG_VERSION 0x040101
#define SWIGJAVA

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1,
  SWIG_JavaIOException,
  SWIG_JavaRuntimeException,
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError,
  SWIG_JavaIllegalStateException,
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { SWIG_JavaIllegalStateException, "java/lang/IllegalStateException" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) do { if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } } while (0)


#ifdef __cplusplus
#include <utility>
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigSmartPointer {
    T *ptr;
    SwigSmartPointer(T *p) : ptr(p) { }
    ~SwigSmartPointer() { delete ptr; }
    SwigSmartPointer& operator=(SwigSmartPointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
    void reset(T *p) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = p; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigSmartPointer tmp(new T(t)); pointer = tmp; return *this; }
#if __cplusplus >=201103L
  SwigValueWrapper& operator=(T&& t) { SwigSmartPointer tmp(new T(std::move(t))); pointer = tmp; return *this; }
  operator T&&() const { return std::move(*pointer.ptr); }
#else
  operator T&() const { return *pointer.ptr; }
#endif
  T *operator&() const { return pointer.ptr; }
  static void reset(SwigValueWrapper& t, T *p) { t.pointer.reset(p); }
};

/*
 * SwigValueInit() is a generic initialisation solution as the following approach:
 * 
 *       T c_result = T();
 * 
 * doesn't compile for all types for example:
 * 
 *       unsigned int c_result = unsigned int();
 */
template <typename T> T SwigValueInit() {
  return T();
}

#if __cplusplus >=201103L
# define SWIG_STD_MOVE(OBJ) std::move(OBJ)
#else
# define SWIG_STD_MOVE(OBJ) OBJ
#endif

#endif


/* 包含原始 C 头文件（如有） */
#include "../libs/includes/rcim_client.h"


#include <stdint.h>		// Use the C99 official header


#include <string.h>


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAppState_1Foreground_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimAppState result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimAppState)RcimAppState_Foreground;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAppState_1Background_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimAppState result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimAppState)RcimAppState_Background;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAppState_1Hangup_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimAppState result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimAppState)RcimAppState_Hangup;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAppState_1Terminate_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimAppState result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimAppState)RcimAppState_Terminate;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAreaCode_1Bj_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimAreaCode result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimAreaCode)RcimAreaCode_Bj;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAreaCode_1Sg_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimAreaCode result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimAreaCode)RcimAreaCode_Sg;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAreaCode_1Na_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimAreaCode result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimAreaCode)RcimAreaCode_Na;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAreaCode_1SgB_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimAreaCode result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimAreaCode)RcimAreaCode_SgB;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAreaCode_1Sa_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimAreaCode result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimAreaCode)RcimAreaCode_Sa;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberActionType_1Quit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMemberActionType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberActionType)RcimChatroomMemberActionType_Quit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberActionType_1Join_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMemberActionType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberActionType)RcimChatroomMemberActionType_Join;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedEventType_1UnmuteUser_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMemberBannedEventType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberBannedEventType)RcimChatroomMemberBannedEventType_UnmuteUser;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedEventType_1MuteUsers_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMemberBannedEventType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberBannedEventType)RcimChatroomMemberBannedEventType_MuteUsers;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedEventType_1UnmuteAll_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMemberBannedEventType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberBannedEventType)RcimChatroomMemberBannedEventType_UnmuteAll;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedEventType_1MuteAll_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMemberBannedEventType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberBannedEventType)RcimChatroomMemberBannedEventType_MuteAll;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedEventType_1RemoveWhitelist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMemberBannedEventType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberBannedEventType)RcimChatroomMemberBannedEventType_RemoveWhitelist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedEventType_1AddWhitelist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMemberBannedEventType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberBannedEventType)RcimChatroomMemberBannedEventType_AddWhitelist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedEventType_1UnmuteGlobal_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMemberBannedEventType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberBannedEventType)RcimChatroomMemberBannedEventType_UnmuteGlobal;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedEventType_1MuteGlobal_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMemberBannedEventType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberBannedEventType)RcimChatroomMemberBannedEventType_MuteGlobal;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedEventType_1Unblock_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMemberBlockedEventType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberBlockedEventType)RcimChatroomMemberBlockedEventType_Unblock;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedEventType_1Block_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMemberBlockedEventType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberBlockedEventType)RcimChatroomMemberBlockedEventType_Block;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncEventType_1Quit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMultiClientSyncEventType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMultiClientSyncEventType)RcimChatroomMultiClientSyncEventType_Quit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncEventType_1Join_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMultiClientSyncEventType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMultiClientSyncEventType)RcimChatroomMultiClientSyncEventType_Join;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncQuitType_1Manual_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMultiClientSyncQuitType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMultiClientSyncQuitType)RcimChatroomMultiClientSyncQuitType_Manual;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncQuitType_1Kick_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomMultiClientSyncQuitType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMultiClientSyncQuitType)RcimChatroomMultiClientSyncQuitType_Kick;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomStatus_1Idle_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomStatus)RcimChatroomStatus_Idle;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomStatus_1Joining_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomStatus)RcimChatroomStatus_Joining;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomStatus_1Joined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomStatus)RcimChatroomStatus_Joined;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomStatus_1JoinFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomStatus)RcimChatroomStatus_JoinFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomStatus_1Leaving_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomStatus)RcimChatroomStatus_Leaving;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomStatus_1Left_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomStatus)RcimChatroomStatus_Left;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomStatus_1LeaveFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomStatus)RcimChatroomStatus_LeaveFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomStatus_1DestroyManually_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomStatus)RcimChatroomStatus_DestroyManually;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomStatus_1DestroyAuto_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimChatroomStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomStatus)RcimChatroomStatus_DestroyAuto;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimCloudType_1PublicCloud_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimCloudType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimCloudType)RcimCloudType_PublicCloud;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimCloudType_1PrivateCloud_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimCloudType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimCloudType)RcimCloudType_PrivateCloud;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1Idle_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_Idle;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1Connecting_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_Connecting;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1Connected_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_Connected;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1Disconnecting_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_Disconnecting;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectNetworkUnavailable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectNetworkUnavailable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectUserLogout_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectUserLogout;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectLicenseExpired_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectLicenseExpired;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectLicenseMismatch_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectLicenseMismatch;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectIllegalProtocolVersion_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectIllegalProtocolVersion;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectIdReject_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectIdReject;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectPlatformUnavailable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectPlatformUnavailable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectTokenIncorrect_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectTokenIncorrect;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectNotAuthorized_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectNotAuthorized;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectPackageNameInvalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectPackageNameInvalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectAppBlockOrDelete_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectAppBlockOrDelete;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectUserBlocked_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectUserBlocked;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectUserKicked_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectUserKicked;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectTokenExpired_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectTokenExpired;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectDeviceError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectDeviceError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectHostnameError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectHostnameError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectOtherDeviceLogin_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectOtherDeviceLogin;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectConcurrentLimitError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectConcurrentLimitError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectClusterError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectClusterError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectAppAuthFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectAppAuthFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectOneTimePasswordUsed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectOneTimePasswordUsed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectPlatformError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectPlatformError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectUserDeleteAccount_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectUserDeleteAccount;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectConnectionTimeout_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectConnectionTimeout;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConnectionStatus_1DisconnectDatabaseOpenFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConnectionStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConnectionStatus)RcimConnectionStatus_DisconnectDatabaseOpenFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1NotSupportedYet_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_NotSupportedYet;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1Private_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_Private;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1Discussion_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_Discussion;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1Group_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_Group;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1Chatroom_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_Chatroom;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1CustomerService_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_CustomerService;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1System_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_System;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1AppPublicService_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_AppPublicService;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1PublicService_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_PublicService;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1PushService_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_PushService;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1UltraGroup_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_UltraGroup;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1Encrypted_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_Encrypted;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationType_1RtcRoom_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationType)RcimConversationType_RtcRoom;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimDatabaseStatus_1Idle_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimDatabaseStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimDatabaseStatus)RcimDatabaseStatus_Idle;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimDatabaseStatus_1OpenSuccess_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimDatabaseStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimDatabaseStatus)RcimDatabaseStatus_OpenSuccess;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimDatabaseStatus_1OpenFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimDatabaseStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimDatabaseStatus)RcimDatabaseStatus_OpenFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimDatabaseStatus_1Upgrading_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimDatabaseStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimDatabaseStatus)RcimDatabaseStatus_Upgrading;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimDatabaseStatus_1UpgradeSuccess_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimDatabaseStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimDatabaseStatus)RcimDatabaseStatus_UpgradeSuccess;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimDatabaseStatus_1UpgradeFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimDatabaseStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimDatabaseStatus)RcimDatabaseStatus_UpgradeFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimDatabaseStatus_1Error_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimDatabaseStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimDatabaseStatus)RcimDatabaseStatus_Error;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimDisconnectMode_1KeepPush_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimDisconnectMode result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimDisconnectMode)RcimDisconnectMode_KeepPush;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimDisconnectMode_1NoPush_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimDisconnectMode result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimDisconnectMode)RcimDisconnectMode_NoPush;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1Success_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_Success;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1RejectedByBlackList_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_RejectedByBlackList;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NotWhitelisted_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NotWhitelisted;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ForbiddenInPrivateChat_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ForbiddenInPrivateChat;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConversationNotSupportMessage_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConversationNotSupportMessage;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageSendOverFrequency_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageSendOverFrequency;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1RequestOverFrequency_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_RequestOverFrequency;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageIncludeSensitiveWord_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageIncludeSensitiveWord;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageReplacedSensitiveWord_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageReplacedSensitiveWord;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NotInGroup_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NotInGroup;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ForbiddenInGroupChat_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ForbiddenInGroupChat;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ForbiddenInChatroom_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ForbiddenInChatroom;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKicked_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKicked;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomIsFull_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomIsFull;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NotInChatroom_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NotInChatroom;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GetUserError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GetUserError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomInvalidParameter_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomInvalidParameter;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1QueryChatroomHistoryError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_QueryChatroomHistoryError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1RoamingServiceUnavailableChatroom_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_RoamingServiceUnavailableChatroom;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKvCountExceed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKvCountExceed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKvOverwriteInvalidKey_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKvOverwriteInvalidKey;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKvCallAPIExceed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKvCallAPIExceed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKvStoreUnavailable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKvStoreUnavailable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKvNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKvNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKvNotAllSuccess_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKvNotAllSuccess;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKvLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKvLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKvConcurrentError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKvConcurrentError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1RecallParameterInvalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_RecallParameterInvalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageStorageServiceUnavailable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageStorageServiceUnavailable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1RecallMessageUserInvalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_RecallMessageUserInvalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1PushSettingParameterInvalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_PushSettingParameterInvalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1SettingSyncFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_SettingSyncFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentMessageUid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentMessageUid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1RequestUploadTokenSizeError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_RequestUploadTokenSizeError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidPublicService_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidPublicService;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ReadReceiptV5NotAvailable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ReadReceiptV5NotAvailable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NotSupportReadReadReceipt_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NotSupportReadReadReceipt;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ParamLengthOUt_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ParamLengthOUt;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NotSupportConversationType_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NotSupportConversationType;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NotSupportReadReceiptV5QueryType_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NotSupportReadReceiptV5QueryType;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NotMessageSender_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NotMessageSender;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CloudDataCenterInvalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CloudDataCenterInvalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1OperationNotSupport_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_OperationNotSupport;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NotInDiscussion_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NotInDiscussion;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1OriginalMessageNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_OriginalMessageNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1OriginalMessageCantExpand_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_OriginalMessageCantExpand;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageExpandFormatError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageExpandFormatError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageExpandNotAuthorized_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageExpandNotAuthorized;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomExtraSizeLimitExceed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomExtraSizeLimitExceed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UserProfileKeyNotAllowSdkSet_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UserProfileKeyNotAllowSdkSet;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UserProfileKeyNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UserProfileKeyNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UserProfileExtKeyNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UserProfileExtKeyNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UserProfileExtKvCountExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UserProfileExtKvCountExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UserProfileValueLengthExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UserProfileValueLengthExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UserProfileQueryCountExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UserProfileQueryCountExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UserProfileUserNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UserProfileUserNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UserProfileValueCanOnlyBeNumbers_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UserProfileValueCanOnlyBeNumbers;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UserProfileValueExceedRange_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UserProfileValueExceedRange;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UserProfileServiceUnavailable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UserProfileServiceUnavailable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UltraGroupDisabled_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UltraGroupDisabled;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UltraGroupServiceAbnormal_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UltraGroupServiceAbnormal;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UltraGroupParameterError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UltraGroupParameterError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UltraGroupUnknownError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UltraGroupUnknownError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NotInUltraGroup_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NotInUltraGroup;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ForbiddenInUltraGroup_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ForbiddenInUltraGroup;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UltraGroupNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UltraGroupNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UltraGroupNumberExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UltraGroupNumberExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UltraGroupChannelsExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UltraGroupChannelsExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UltraGroupChannelIdNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UltraGroupChannelIdNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UltraGroupMessageSentOverFrequency_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UltraGroupMessageSentOverFrequency;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UltraGroupUserNotInPrivateChannel_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UltraGroupUserNotInPrivateChannel;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ServerUnknownError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ServerUnknownError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1EntrustServerError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_EntrustServerError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1EntrustServerParameterError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_EntrustServerParameterError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupIllegalError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupIllegalError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupAuthorityError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupAuthorityError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupParameterLengthExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupParameterLengthExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupParameterFormatError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupParameterFormatError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupParameterValueCanOnlyBeNumbers_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupParameterValueCanOnlyBeNumbers;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupIdAlreadyExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupIdAlreadyExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupIdNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupIdNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupMembersCountExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupMembersCountExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupMembersAlreadyInGroup_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupMembersAlreadyInGroup;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupNotAllowSdkOperation_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupNotAllowSdkOperation;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupNotAllowJoin_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupNotAllowJoin;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupExtKeyNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupExtKeyNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupRequestOverFrequency_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupRequestOverFrequency;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupOwnerNotAllowQuitOrKick_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupOwnerNotAllowQuitOrKick;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupUserNotInGroup_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupUserNotInGroup;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupManagerOrFollowCountExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupManagerOrFollowCountExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupUserIsNotManagerInGroup_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupUserIsNotManagerInGroup;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupQueryGroupCountExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupQueryGroupCountExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupNameInvalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupNameInvalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupOwnerNotAllowBeManager_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupOwnerNotAllowBeManager;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupNoInvitePermission_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupNoInvitePermission;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupApplicationAlreadyHandle_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupApplicationAlreadyHandle;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupOldGroupNotEntrust_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupOldGroupNotEntrust;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupIdInvalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupIdInvalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1PageTokenParsingFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_PageTokenParsingFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupMuteWhitelistInvalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupMuteWhitelistInvalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendAlreadyFriend_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendAlreadyFriend;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendNeedAccept_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendNeedAccept;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendInOtherBlackList_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendInOtherBlackList;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendNotInOtherWhiteList_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendNotInOtherWhiteList;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendInMyBlackList_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendInMyBlackList;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendNotInMyWhiteList_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendNotInMyWhiteList;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendApplicationNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendApplicationNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendMyFriendCountExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendMyFriendCountExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendOtherFriendCountExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendOtherFriendCountExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendNotFriend_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendNotFriend;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendFieldsLengthExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendFieldsLengthExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendOtherNotAllowAddFriend_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendOtherNotAllowAddFriend;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FriendNotAllowAddSelf_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FriendNotAllowAddSelf;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ServiceInternalError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ServiceInternalError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1TagLimitExceed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_TagLimitExceed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ReadReceiptV4Invalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ReadReceiptV4Invalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ServerParameterMessageUidsConfused_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ServerParameterMessageUidsConfused;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ServerParameterInvalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ServerParameterInvalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1SubscribeOnlineServiceUnavailable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_SubscribeOnlineServiceUnavailable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1BeSubscribedUserIdsCountExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_BeSubscribedUserIdsCountExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1SubscribedUserIdsExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_SubscribedUserIdsExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FileSizeExceedLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FileSizeExceedLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1TranslationCodeSuccess_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_TranslationCodeSuccess;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1TranslationCodeAuthFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_TranslationCodeAuthFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1TranslationCodeServerAuthFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_TranslationCodeServerAuthFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1TranslationCodeTranslateFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_TranslationCodeTranslateFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1TranslationCodeServiceUnavailable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_TranslationCodeServiceUnavailable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1TranslationCodeCurrentLimiting_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_TranslationCodeCurrentLimiting;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1TranslationCodeServerInvalidAuthToken_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_TranslationCodeServerInvalidAuthToken;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1TranslationCodeServerInvalidExtractResult_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_TranslationCodeServerInvalidExtractResult;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1TranslationCodeServerInvalidLanguage_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_TranslationCodeServerInvalidLanguage;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1TranslationCodeServerInvalidEncodingType_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_TranslationCodeServerInvalidEncodingType;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageNotSupportReadReceipt_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageNotSupportReadReceipt;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectionClosed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectionClosed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectionClosing_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectionClosing;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1SocketRecvTimeout_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_SocketRecvTimeout;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NaviReqFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NaviReqFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NaviReqTimeout_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NaviReqTimeout;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MsgSizeOutOfLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MsgSizeOutOfLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1SocketSendTimeout_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_SocketSendTimeout;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NaviRespTokenIncorrect_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NaviRespTokenIncorrect;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NaviLicenseMismatch_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NaviLicenseMismatch;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1HttpReqFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_HttpReqFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1HttpReqTimeout_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_HttpReqTimeout;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectIllegalProtocolVersion_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectIllegalProtocolVersion;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectIdReject_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectIdReject;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectPlatformUnavailable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectPlatformUnavailable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectTokenIncorrect_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectTokenIncorrect;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectNotAuthorized_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectNotAuthorized;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectRedirect_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectRedirect;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectPackageNameInvalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectPackageNameInvalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectAppBlockOrDelete_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectAppBlockOrDelete;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectUserBlocked_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectUserBlocked;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1DisconnectUserKicked_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_DisconnectUserKicked;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1DisconnectUserBlocked_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_DisconnectUserBlocked;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1DisconnectUserLogout_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_DisconnectUserLogout;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1SocketConnectionFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_SocketConnectionFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1SocketShutdownFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_SocketShutdownFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectionCancel_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectionCancel;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectTokenExpired_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectTokenExpired;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectDeviceError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectDeviceError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectHostnameError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectHostnameError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectOtherDeviceLogin_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectOtherDeviceLogin;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectConcurrentLimitError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectConcurrentLimitError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectClusterError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectClusterError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectAppAuthFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectAppAuthFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectOneTimePasswordUsed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectOneTimePasswordUsed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectPlatformError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectPlatformError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectUserDeleteAccount_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectUserDeleteAccount;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectLicenseExpired_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectLicenseExpired;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1KvStoreNotOpened_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_KvStoreNotOpened;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1KvStoreOpenFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_KvStoreOpenFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1KvStoreIOError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_KvStoreIOError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1KvStoreSerializationError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_KvStoreSerializationError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1JsonParserFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_JsonParserFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ImageFormatError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ImageFormatError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1RequestUploadTokenError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_RequestUploadTokenError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GetUploadTokenError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GetUploadTokenError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1SightMessageCompressError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_SightMessageCompressError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1RequestCanceled_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_RequestCanceled;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1DownloadRequestExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_DownloadRequestExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1RequestPaused_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_RequestPaused;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1DownloadTaskNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_DownloadTaskNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UploadTaskNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UploadTaskNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MediaMessageHandlerError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MediaMessageHandlerError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1FileSizeError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_FileSizeError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1SendReadReceiptConfError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_SendReadReceiptConfError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1RealtimeConversationUnavailable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_RealtimeConversationUnavailable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectRefused_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectRefused;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageSavedError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageSavedError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectionInProcess_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectionInProcess;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CloudStorageForHistoryMessageDisable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CloudStorageForHistoryMessageDisable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectionExists_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectionExists;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GifMessageSizeOutOfLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GifMessageSizeOutOfLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ConnectionTimeout_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ConnectionTimeout;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageCantExpand_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageCantExpand;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageExpansionSizeLimitExceed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageExpansionSizeLimitExceed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UploadMediaFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UploadMediaFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ReadReceiptVersionNotSupport_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ReadReceiptVersionNotSupport;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1UserSettingUnavailable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_UserSettingUnavailable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageNotRegistered_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageNotRegistered;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageExpandConversationTypeNotMatch_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageExpandConversationTypeNotMatch;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentUltraGroupNotSupport_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentUltraGroupNotSupport;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentAppKey_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentAppKey;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentTimestamp_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentTimestamp;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentMessageContent_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentMessageContent;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentMessageVec_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentMessageVec;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentConversationType_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentConversationType;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentTargetId_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentTargetId;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidParameterMessageExpansion_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidParameterMessageExpansion;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentChannelId_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentChannelId;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentContentNotMedia_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentContentNotMedia;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentFileNameEmpty_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentFileNameEmpty;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentPageToken_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentPageToken;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentTimeString_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentTimeString;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidEnumOutOfRange_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidEnumOutOfRange;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentPushNotificationMuteLevel_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentPushNotificationMuteLevel;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentMessageIdVec_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentMessageIdVec;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentCount_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentCount;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentMediaLocalPath_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentMediaLocalPath;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentMediaUrl_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentMediaUrl;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentMessage_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentMessage;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentSentStatus_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentSentStatus;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKvInvalidKey_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKvInvalidKey;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKvInvalidKeyVec_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKvInvalidKeyVec;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKvInvalidValue_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKvInvalidValue;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1ChatroomKvInvalidKeyValueVec_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_ChatroomKvInvalidKeyValueVec;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentMessageDirectionEmpty_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentMessageDirectionEmpty;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentObjectName_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentObjectName;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentMessageDirection_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentMessageDirection;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentSpanMinutes_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentSpanMinutes;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentConversationTypeVec_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentConversationTypeVec;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentNaviUrl_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentNaviUrl;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentConversationIdentifierVec_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentConversationIdentifierVec;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1DirectionalMessageNotSupport_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_DirectionalMessageNotSupport;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageDestructing_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageDestructing;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1MessageNotDestructing_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_MessageNotDestructing;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidParameterReceivedStatus_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidParameterReceivedStatus;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidParameterUserId_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidParameterUserId;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidParameterUserList_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidParameterUserList;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1DatabaseNotOpened_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_DatabaseNotOpened;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1DatabaseOpenFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_DatabaseOpenFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1DatabaseIOError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_DatabaseIOError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1DatabaseTargetNotFound_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_DatabaseTargetNotFound;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NetDataParserFailed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NetDataParserFailed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1DatabaseThreadError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_DatabaseThreadError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1EngineDropped_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_EngineDropped;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1SightMsgDurationLimit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_SightMsgDurationLimit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentEngineSync_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentEngineSync;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentEngineBuilder_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentEngineBuilder;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentDeviceId_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentDeviceId;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentPackageName_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentPackageName;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentSdkVersion_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentSdkVersion;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentFileStoragePath_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentFileStoragePath;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentToken_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentToken;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentMessageId_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentMessageId;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentMessageType_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentMessageType;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentNotMediaMessage_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentNotMediaMessage;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentUserIdEmpty_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentUserIdEmpty;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentAudioDuration_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentAudioDuration;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentLogInfo_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentLogInfo;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentEngineBuilderParam_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentEngineBuilderParam;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentDeviceModel_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentDeviceModel;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentDeviceManufacturer_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentDeviceManufacturer;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentPushTokenVec_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentPushTokenVec;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentPushType_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentPushType;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentPushToken_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentPushToken;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentSenderId_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentSenderId;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentPushNotificationMuteLevelVec_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentPushNotificationMuteLevelVec;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentConnectionStatus_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentConnectionStatus;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentVersion_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentVersion;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentOsVersion_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentOsVersion;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentAppVersion_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentAppVersion;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentStatisticUrl_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentStatisticUrl;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentDraft_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentDraft;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentKeyword_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentKeyword;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentOffset_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentOffset;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentObjectNameVec_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentObjectNameVec;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentTimeInterval_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentTimeInterval;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentTimeoutSeconds_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentTimeoutSeconds;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentDestructDuration_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentDestructDuration;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentUniqueId_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentUniqueId;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentOutUniqueId_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentOutUniqueId;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentOutUserId_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentOutUserId;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentExtra_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentExtra;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentChatroomId_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentChatroomId;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentRtcMethodName_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentRtcMethodName;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentRtcKey_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentRtcKey;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentRtcValue_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentRtcValue;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentGroupInfo_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentGroupInfo;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentGroupId_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentGroupId;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentGroupName_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentGroupName;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentGroupIdList_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentGroupIdList;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentGroupMemberRole_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentGroupMemberRole;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentGroupRequestStatus_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentGroupRequestStatus;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentGroupRequestDirection_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentGroupRequestDirection;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentNickname_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentNickname;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentReason_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentReason;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1InvalidArgumentRemark_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_InvalidArgumentRemark;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1DataIsSyncing_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_DataIsSyncing;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupJoinNeedInviteeAccept_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupJoinNeedInviteeAccept;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupJoinNeedManagerAccept_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupJoinNeedManagerAccept;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1GroupRequestNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_GroupRequestNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallNotInRoom_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallNotInRoom;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallInternalError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallInternalError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallHasNoRoom_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallHasNoRoom;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallInvalidUserId_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallInvalidUserId;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallLimitError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallLimitError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallParamError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallParamError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallTokenError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallTokenError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallDbError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallDbError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallJsonError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallJsonError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallNotOpen_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallNotOpen;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallRoomTypeError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallRoomTypeError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallNoAuthUser_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallNoAuthUser;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallHasNoConfigMcuAddress_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallHasNoConfigMcuAddress;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallNotAllowVideoBroadcast_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallNotAllowVideoBroadcast;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallNotAllowAudioBroadcast_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallNotAllowAudioBroadcast;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallGetTokenError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallGetTokenError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallUserIsBlocked_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallUserIsBlocked;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallInviteRoomNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallInviteRoomNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallInviteUserNotInRoom_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallInviteUserNotInRoom;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallInviteInProgress_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallInviteInProgress;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallCancelInviteNotProgress_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallCancelInviteNotProgress;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallAnswerInviteNotProgress_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallAnswerInviteNotProgress;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallAnswerInviteTimeout_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallAnswerInviteTimeout;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallPingNotProgress_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallPingNotProgress;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallRoomAlreadyExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallRoomAlreadyExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallRoomTypeNotSupport_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallRoomTypeNotSupport;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallIdentityChangeTypeError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallIdentityChangeTypeError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallAlreadyJoinRoom_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallAlreadyJoinRoom;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallNotAllowCrossApp_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallNotAllowCrossApp;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallUserNotAllowedForRtc_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallUserNotAllowedForRtc;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallConcurrentLimitError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallConcurrentLimitError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallExpiredError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallExpiredError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusUnknownError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusUnknownError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusDbError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusDbError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusJsonError_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusJsonError;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusInvalidJsonFormat_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusInvalidJsonFormat;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusMissingParameters_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusMissingParameters;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusOperationNotPermitted_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusOperationNotPermitted;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusCircuitBreakerOpen_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusCircuitBreakerOpen;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusMethodNotImplement_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusMethodNotImplement;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusCallingUserNotRegistCallServer_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusCallingUserNotRegistCallServer;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusNotSupportNewCall_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusNotSupportNewCall;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusCallNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusCallNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusSingleCallOverload_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusSingleCallOverload;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusGroupCallOverload_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusGroupCallOverload;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusOperationHasExpired_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusOperationHasExpired;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusDeviceHasCalling_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusDeviceHasCalling;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusCallUserNotInCall_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusCallUserNotInCall;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusDataHasExpired_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusDataHasExpired;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusStreamReadyTimeInvalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusStreamReadyTimeInvalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusCallNotSelf_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusCallNotSelf;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusStateNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusStateNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusHangupNotAllowed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusHangupNotAllowed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusAcceptNotAllowed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusAcceptNotAllowed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusOperationNotAllowed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusOperationNotAllowed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusTransactionNotExist_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusTransactionNotExist;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusMediaTypeSwitching_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusMediaTypeSwitching;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusAudioToVideoCancel_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusAudioToVideoCancel;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusVideoToAudioNoRequired_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusVideoToAudioNoRequired;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusAudioToVideoNoRequired_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusAudioToVideoNoRequired;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1CallplusNoCompensationData_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_CallplusNoCompensationData;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineError_1NotSupportedYet_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineError)RcimEngineError_NotSupportedYet;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimFilterReadStatus_1Read_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimFilterReadStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimFilterReadStatus)RcimFilterReadStatus_Read;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimFilterReadStatus_1Unread_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimFilterReadStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimFilterReadStatus)RcimFilterReadStatus_Unread;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInviteHandlePermission_1Invalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupInviteHandlePermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupInviteHandlePermission)RcimGroupInviteHandlePermission_Invalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInviteHandlePermission_1Free_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupInviteHandlePermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupInviteHandlePermission)RcimGroupInviteHandlePermission_Free;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInviteHandlePermission_1InviteeVerify_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupInviteHandlePermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupInviteHandlePermission)RcimGroupInviteHandlePermission_InviteeVerify;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupJoinPermission_1Invalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupJoinPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupJoinPermission)RcimGroupJoinPermission_Invalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupJoinPermission_1OwnerVerify_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupJoinPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupJoinPermission)RcimGroupJoinPermission_OwnerVerify;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupJoinPermission_1Free_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupJoinPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupJoinPermission)RcimGroupJoinPermission_Free;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupJoinPermission_1OwnerOrManagerVerify_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupJoinPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupJoinPermission)RcimGroupJoinPermission_OwnerOrManagerVerify;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupJoinPermission_1NoOneAllowed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupJoinPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupJoinPermission)RcimGroupJoinPermission_NoOneAllowed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfoEditPermission_1Invalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberInfoEditPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberInfoEditPermission)RcimGroupMemberInfoEditPermission_Invalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfoEditPermission_1OwnerOrManagerOrSelf_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberInfoEditPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberInfoEditPermission)RcimGroupMemberInfoEditPermission_OwnerOrManagerOrSelf;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfoEditPermission_1OwnerOrSelf_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberInfoEditPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberInfoEditPermission)RcimGroupMemberInfoEditPermission_OwnerOrSelf;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfoEditPermission_1OnlySelf_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberInfoEditPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberInfoEditPermission)RcimGroupMemberInfoEditPermission_OnlySelf;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberJoinStatus_1UnJoin_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberJoinStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberJoinStatus)RcimGroupMemberJoinStatus_UnJoin;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberJoinStatus_1Joined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberJoinStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberJoinStatus)RcimGroupMemberJoinStatus_Joined;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberMuteType_1ForeverMute_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberMuteType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberMuteType)RcimGroupMemberMuteType_ForeverMute;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberMuteType_1DurationMute_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberMuteType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberMuteType)RcimGroupMemberMuteType_DurationMute;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberMuteType_1RemoveMute_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberMuteType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberMuteType)RcimGroupMemberMuteType_RemoveMute;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberRole_1Undef_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberRole result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberRole)RcimGroupMemberRole_Undef;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberRole_1Normal_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberRole result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberRole)RcimGroupMemberRole_Normal;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberRole_1Manager_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberRole result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberRole)RcimGroupMemberRole_Manager;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberRole_1Owner_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMemberRole result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberRole)RcimGroupMemberRole_Owner;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMuteType_1Invalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMuteType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMuteType)RcimGroupMuteType_Invalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMuteType_1SpecifiedMember_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMuteType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMuteType)RcimGroupMuteType_SpecifiedMember;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMuteType_1Normal_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMuteType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMuteType)RcimGroupMuteType_Normal;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMuteType_1NormalAndManager_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMuteType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMuteType)RcimGroupMuteType_NormalAndManager;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMuteType_1ALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupMuteType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMuteType)RcimGroupMuteType_ALL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationPermission_1Invalid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupOperationPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationPermission)RcimGroupOperationPermission_Invalid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationPermission_1Owner_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupOperationPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationPermission)RcimGroupOperationPermission_Owner;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationPermission_1OwnerOrManager_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupOperationPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationPermission)RcimGroupOperationPermission_OwnerOrManager;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationPermission_1Everyone_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupOperationPermission result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationPermission)RcimGroupOperationPermission_Everyone;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationType_1Create_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupOperationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationType)RcimGroupOperationType_Create;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationType_1Join_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupOperationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationType)RcimGroupOperationType_Join;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationType_1Kick_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupOperationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationType)RcimGroupOperationType_Kick;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationType_1Quit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupOperationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationType)RcimGroupOperationType_Quit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationType_1Dismiss_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupOperationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationType)RcimGroupOperationType_Dismiss;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationType_1AddManager_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupOperationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationType)RcimGroupOperationType_AddManager;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationType_1RemoveManager_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupOperationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationType)RcimGroupOperationType_RemoveManager;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationType_1TransferGroupOwner_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupOperationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationType)RcimGroupOperationType_TransferGroupOwner;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestDirection_1ApplicationSent_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupRequestDirection result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestDirection)RcimGroupRequestDirection_ApplicationSent;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestDirection_1InvitationSent_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupRequestDirection result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestDirection)RcimGroupRequestDirection_InvitationSent;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestDirection_1ApplicationReceived_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupRequestDirection result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestDirection)RcimGroupRequestDirection_ApplicationReceived;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestDirection_1InvitationReceived_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupRequestDirection result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestDirection)RcimGroupRequestDirection_InvitationReceived;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestStatus_1ManagerPending_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupRequestStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestStatus)RcimGroupRequestStatus_ManagerPending;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestStatus_1ManagerRejected_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupRequestStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestStatus)RcimGroupRequestStatus_ManagerRejected;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestStatus_1UserPending_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupRequestStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestStatus)RcimGroupRequestStatus_UserPending;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestStatus_1UserRejected_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupRequestStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestStatus)RcimGroupRequestStatus_UserRejected;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestStatus_1JoinedGroup_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupRequestStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestStatus)RcimGroupRequestStatus_JoinedGroup;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestStatus_1RequestExpired_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupRequestStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestStatus)RcimGroupRequestStatus_RequestExpired;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestType_1Apply_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupRequestType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestType)RcimGroupRequestType_Apply;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestType_1Invitation_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimGroupRequestType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestType)RcimGroupRequestType_Invitation;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogLevel_1None_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogLevel)RcimLogLevel_None;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogLevel_1Error_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogLevel)RcimLogLevel_Error;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogLevel_1Warn_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogLevel)RcimLogLevel_Warn;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogLevel_1Info_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogLevel)RcimLogLevel_Info;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogLevel_1Debug_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogLevel)RcimLogLevel_Debug;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogSource_1RUST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogSource result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogSource)RcimLogSource_RUST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogSource_1FFI_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogSource result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogSource)RcimLogSource_FFI;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogSource_1IMLib_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogSource result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogSource)RcimLogSource_IMLib;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogSource_1IMKit_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogSource result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogSource)RcimLogSource_IMKit;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogSource_1RTCLib_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogSource result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogSource)RcimLogSource_RTCLib;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogSource_1CallLib_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogSource result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogSource)RcimLogSource_CallLib;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogSource_1CallPlus_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogSource result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogSource)RcimLogSource_CallPlus;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogType_1IM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogType)RcimLogType_IM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogType_1RTC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimLogType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogType)RcimLogType_RTC;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMediaHandlerError_1Success_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMediaHandlerError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMediaHandlerError)RcimMediaHandlerError_Success;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMediaHandlerError_1Canceled_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMediaHandlerError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMediaHandlerError)RcimMediaHandlerError_Canceled;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMediaHandlerError_1Paused_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMediaHandlerError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMediaHandlerError)RcimMediaHandlerError_Paused;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMediaHandlerError_1Failed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMediaHandlerError result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMediaHandlerError)RcimMediaHandlerError_Failed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockSourceType_1Default_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageBlockSourceType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageBlockSourceType)RcimMessageBlockSourceType_Default;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockSourceType_1Extension_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageBlockSourceType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageBlockSourceType)RcimMessageBlockSourceType_Extension;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockSourceType_1Modification_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageBlockSourceType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageBlockSourceType)RcimMessageBlockSourceType_Modification;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockType_1None_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageBlockType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageBlockType)RcimMessageBlockType_None;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockType_1BlockGlobal_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageBlockType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageBlockType)RcimMessageBlockType_BlockGlobal;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockType_1BlockCustom_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageBlockType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageBlockType)RcimMessageBlockType_BlockCustom;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockType_1BlockThirdParty_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageBlockType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageBlockType)RcimMessageBlockType_BlockThirdParty;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageDirection_1Send_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageDirection result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageDirection)RcimMessageDirection_Send;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageDirection_1Receive_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageDirection result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageDirection)RcimMessageDirection_Receive;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageFlag_1None_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageFlag result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageFlag)RcimMessageFlag_None;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageFlag_1Save_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageFlag result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageFlag)RcimMessageFlag_Save;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageFlag_1Count_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageFlag result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageFlag)RcimMessageFlag_Count;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageFlag_1Status_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimMessageFlag result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageFlag)RcimMessageFlag_Status;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimNetworkType_1None_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimNetworkType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimNetworkType)RcimNetworkType_None;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimNetworkType_1Wifi_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimNetworkType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimNetworkType)RcimNetworkType_Wifi;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimNetworkType_1Wired_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimNetworkType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimNetworkType)RcimNetworkType_Wired;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimNetworkType_1Cellular2G_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimNetworkType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimNetworkType)RcimNetworkType_Cellular2G;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimNetworkType_1Cellular3G_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimNetworkType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimNetworkType)RcimNetworkType_Cellular3G;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimNetworkType_1Cellular4G_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimNetworkType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimNetworkType)RcimNetworkType_Cellular4G;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimNetworkType_1Cellular5G_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimNetworkType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimNetworkType)RcimNetworkType_Cellular5G;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimOrder_1Descending_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimOrder result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimOrder)RcimOrder_Descending;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimOrder_1Ascending_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimOrder result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimOrder)RcimOrder_Ascending;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPlatform_1Android_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPlatform result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPlatform)RcimPlatform_Android;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPlatform_1IOS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPlatform result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPlatform)RcimPlatform_IOS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPlatform_1HarmonyOS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPlatform result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPlatform)RcimPlatform_HarmonyOS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPlatform_1Windows_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPlatform result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPlatform)RcimPlatform_Windows;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPlatform_1MacOS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPlatform result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPlatform)RcimPlatform_MacOS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPlatform_1Linux_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPlatform result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPlatform)RcimPlatform_Linux;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPlatform_1Electron_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPlatform result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPlatform)RcimPlatform_Electron;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPlatform_1Web_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPlatform result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPlatform)RcimPlatform_Web;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPlatform_1Unknown_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPlatform result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPlatform)RcimPlatform_Unknown;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItemType_1Group_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPublicServiceMenuItemType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPublicServiceMenuItemType)RcimPublicServiceMenuItemType_Group;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItemType_1View_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPublicServiceMenuItemType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPublicServiceMenuItemType)RcimPublicServiceMenuItemType_View;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItemType_1Click_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPublicServiceMenuItemType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPublicServiceMenuItemType)RcimPublicServiceMenuItemType_Click;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushNotificationMuteLevel_1All_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPushNotificationMuteLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPushNotificationMuteLevel)RcimPushNotificationMuteLevel_All;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushNotificationMuteLevel_1Default_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPushNotificationMuteLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPushNotificationMuteLevel)RcimPushNotificationMuteLevel_Default;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushNotificationMuteLevel_1Mention_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPushNotificationMuteLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPushNotificationMuteLevel)RcimPushNotificationMuteLevel_Mention;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushNotificationMuteLevel_1MentionUsers_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPushNotificationMuteLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPushNotificationMuteLevel)RcimPushNotificationMuteLevel_MentionUsers;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushNotificationMuteLevel_1MentionAll_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPushNotificationMuteLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPushNotificationMuteLevel)RcimPushNotificationMuteLevel_MentionAll;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushNotificationMuteLevel_1Blocked_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimPushNotificationMuteLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPushNotificationMuteLevel)RcimPushNotificationMuteLevel_Blocked;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSentStatus_1SENDING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimSentStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimSentStatus)RcimSentStatus_SENDING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSentStatus_1FAILED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimSentStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimSentStatus)RcimSentStatus_FAILED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSentStatus_1SENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimSentStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimSentStatus)RcimSentStatus_SENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSentStatus_1RECEIVED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimSentStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimSentStatus)RcimSentStatus_RECEIVED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSentStatus_1READ_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimSentStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimSentStatus)RcimSentStatus_READ;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSentStatus_1DESTROYED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimSentStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimSentStatus)RcimSentStatus_DESTROYED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSentStatus_1CANCELED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimSentStatus result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimSentStatus)RcimSentStatus_CANCELED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimUserOperationType_1Add_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimUserOperationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimUserOperationType)RcimUserOperationType_Add;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimUserOperationType_1Remove_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  RcimUserOperationType result;
  
  (void)jenv;
  (void)jcls;
  result = (RcimUserOperationType)RcimUserOperationType_Remove;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSDKVersion_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimSDKVersion *arg1 = (RcimSDKVersion *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSDKVersion **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->name, (const char *)arg2);
    } else {
      arg1->name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSDKVersion_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimSDKVersion *arg1 = (RcimSDKVersion *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSDKVersion **)&jarg1; 
  result = (char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSDKVersion_1version_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimSDKVersion *arg1 = (RcimSDKVersion *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSDKVersion **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->version = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->version, (const char *)arg2);
    } else {
      arg1->version = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSDKVersion_1version_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimSDKVersion *arg1 = (RcimSDKVersion *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSDKVersion **)&jarg1; 
  result = (char *) ((arg1)->version);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimSDKVersion(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimSDKVersion *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimSDKVersion *)new RcimSDKVersion();
  *(RcimSDKVersion **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimSDKVersion(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimSDKVersion *arg1 = (RcimSDKVersion *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimSDKVersion **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1app_1key_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->app_key = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->app_key, (const char *)arg2);
    } else {
      arg1->app_key = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1app_1key_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  result = (char *) ((arg1)->app_key);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1platform_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  enum RcimPlatform arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  arg2 = (enum RcimPlatform)jarg2; 
  if (arg1) (arg1)->platform = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1platform_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  enum RcimPlatform result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  result = (enum RcimPlatform) ((arg1)->platform);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1device_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->device_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->device_id, (const char *)arg2);
    } else {
      arg1->device_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1device_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  result = (char *) ((arg1)->device_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1package_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->package_name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->package_name, (const char *)arg2);
    } else {
      arg1->package_name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1package_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  result = (char *) ((arg1)->package_name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1imlib_1version_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->imlib_version = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->imlib_version, (const char *)arg2);
    } else {
      arg1->imlib_version = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1imlib_1version_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  result = (char *) ((arg1)->imlib_version);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1device_1model_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->device_model = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->device_model, (const char *)arg2);
    } else {
      arg1->device_model = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1device_1model_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  result = (char *) ((arg1)->device_model);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1device_1manufacturer_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->device_manufacturer = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->device_manufacturer, (const char *)arg2);
    } else {
      arg1->device_manufacturer = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1device_1manufacturer_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  result = (char *) ((arg1)->device_manufacturer);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1os_1version_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->os_version = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->os_version, (const char *)arg2);
    } else {
      arg1->os_version = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1os_1version_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  result = (char *) ((arg1)->os_version);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1sdk_1version_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  RcimSDKVersion *arg2 = (RcimSDKVersion *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  arg2 = *(RcimSDKVersion **)&jarg2; 
  if (arg1) (arg1)->sdk_version_vec = (RcimSDKVersion const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1sdk_1version_1vec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  RcimSDKVersion *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  result = (RcimSDKVersion *) ((arg1)->sdk_version_vec);
  *(RcimSDKVersion **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1sdk_1version_1vec_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->sdk_version_vec_len = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1sdk_1version_1vec_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  result = (int32_t) ((arg1)->sdk_version_vec_len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1app_1version_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->app_version = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->app_version, (const char *)arg2);
    } else {
      arg1->app_version = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimEngineBuilderParam_1app_1version_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  result = (char *) ((arg1)->app_version);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimEngineBuilderParam(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimEngineBuilderParam *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineBuilderParam *)new RcimEngineBuilderParam();
  *(RcimEngineBuilderParam **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimEngineBuilderParam(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushTokenInfo_1push_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimPushTokenInfo *arg1 = (RcimPushTokenInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushTokenInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->push_type = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->push_type, (const char *)arg2);
    } else {
      arg1->push_type = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushTokenInfo_1push_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimPushTokenInfo *arg1 = (RcimPushTokenInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushTokenInfo **)&jarg1; 
  result = (char *) ((arg1)->push_type);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushTokenInfo_1push_1token_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimPushTokenInfo *arg1 = (RcimPushTokenInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushTokenInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->push_token = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->push_token, (const char *)arg2);
    } else {
      arg1->push_token = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushTokenInfo_1push_1token_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimPushTokenInfo *arg1 = (RcimPushTokenInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushTokenInfo **)&jarg1; 
  result = (char *) ((arg1)->push_token);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimPushTokenInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimPushTokenInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPushTokenInfo *)new RcimPushTokenInfo();
  *(RcimPushTokenInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimPushTokenInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimPushTokenInfo *arg1 = (RcimPushTokenInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimPushTokenInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedStatus_1is_1read_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimReceivedStatus *arg1 = (RcimReceivedStatus *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedStatus **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_read = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedStatus_1is_1read_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimReceivedStatus *arg1 = (RcimReceivedStatus *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedStatus **)&jarg1; 
  result = (bool) ((arg1)->is_read);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedStatus_1is_1listened_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimReceivedStatus *arg1 = (RcimReceivedStatus *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedStatus **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_listened = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedStatus_1is_1listened_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimReceivedStatus *arg1 = (RcimReceivedStatus *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedStatus **)&jarg1; 
  result = (bool) ((arg1)->is_listened);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedStatus_1is_1download_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimReceivedStatus *arg1 = (RcimReceivedStatus *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedStatus **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_download = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedStatus_1is_1download_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimReceivedStatus *arg1 = (RcimReceivedStatus *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedStatus **)&jarg1; 
  result = (bool) ((arg1)->is_download);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedStatus_1is_1retrieved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimReceivedStatus *arg1 = (RcimReceivedStatus *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedStatus **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_retrieved = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedStatus_1is_1retrieved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimReceivedStatus *arg1 = (RcimReceivedStatus *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedStatus **)&jarg1; 
  result = (bool) ((arg1)->is_retrieved);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedStatus_1is_1multiple_1received_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimReceivedStatus *arg1 = (RcimReceivedStatus *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedStatus **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_multiple_received = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedStatus_1is_1multiple_1received_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimReceivedStatus *arg1 = (RcimReceivedStatus *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedStatus **)&jarg1; 
  result = (bool) ((arg1)->is_multiple_received);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimReceivedStatus(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimReceivedStatus *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimReceivedStatus *)new RcimReceivedStatus();
  *(RcimReceivedStatus **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimReceivedStatus(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimReceivedStatus *arg1 = (RcimReceivedStatus *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimReceivedStatus **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptUserInfo_1sender_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimReadReceiptUserInfo *arg1 = (RcimReadReceiptUserInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptUserInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->sender_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->sender_id, (const char *)arg2);
    } else {
      arg1->sender_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptUserInfo_1sender_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimReadReceiptUserInfo *arg1 = (RcimReadReceiptUserInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptUserInfo **)&jarg1; 
  result = (char *) ((arg1)->sender_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptUserInfo_1timestamp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  RcimReadReceiptUserInfo *arg1 = (RcimReadReceiptUserInfo *) 0 ;
  uint64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptUserInfo **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->timestamp = arg2;
}


SWIGEXPORT jobject JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptUserInfo_1timestamp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  RcimReadReceiptUserInfo *arg1 = (RcimReadReceiptUserInfo *) 0 ;
  uint64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptUserInfo **)&jarg1; 
  result = (uint64_t) ((arg1)->timestamp);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptUserInfo_1mentioned_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimReadReceiptUserInfo *arg1 = (RcimReadReceiptUserInfo *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptUserInfo **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->mentioned = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptUserInfo_1mentioned_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimReadReceiptUserInfo *arg1 = (RcimReadReceiptUserInfo *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptUserInfo **)&jarg1; 
  result = (bool) ((arg1)->mentioned);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimReadReceiptUserInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimReadReceiptUserInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimReadReceiptUserInfo *)new RcimReadReceiptUserInfo();
  *(RcimReadReceiptUserInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimReadReceiptUserInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimReadReceiptUserInfo *arg1 = (RcimReadReceiptUserInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimReadReceiptUserInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfo_1is_1read_1receipt_1message_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimReadReceiptInfo *arg1 = (RcimReadReceiptInfo *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfo **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_read_receipt_message = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfo_1is_1read_1receipt_1message_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimReadReceiptInfo *arg1 = (RcimReadReceiptInfo *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfo **)&jarg1; 
  result = (bool) ((arg1)->is_read_receipt_message);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfo_1has_1respond_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimReadReceiptInfo *arg1 = (RcimReadReceiptInfo *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfo **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->has_respond = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfo_1has_1respond_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimReadReceiptInfo *arg1 = (RcimReadReceiptInfo *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfo **)&jarg1; 
  result = (bool) ((arg1)->has_respond);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfo_1respond_1user_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimReadReceiptInfo *arg1 = (RcimReadReceiptInfo *) 0 ;
  RcimReadReceiptUserInfo *arg2 = (RcimReadReceiptUserInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimReadReceiptInfo **)&jarg1; 
  arg2 = *(RcimReadReceiptUserInfo **)&jarg2; 
  if (arg1) (arg1)->respond_user_vec = (RcimReadReceiptUserInfo const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfo_1respond_1user_1vec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptInfo *arg1 = (RcimReadReceiptInfo *) 0 ;
  RcimReadReceiptUserInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfo **)&jarg1; 
  result = (RcimReadReceiptUserInfo *) ((arg1)->respond_user_vec);
  *(RcimReadReceiptUserInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfo_1respond_1user_1vec_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimReadReceiptInfo *arg1 = (RcimReadReceiptInfo *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfo **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->respond_user_vec_len = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfo_1respond_1user_1vec_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimReadReceiptInfo *arg1 = (RcimReadReceiptInfo *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfo **)&jarg1; 
  result = (int32_t) ((arg1)->respond_user_vec_len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimReadReceiptInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimReadReceiptInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimReadReceiptInfo *)new RcimReadReceiptInfo();
  *(RcimReadReceiptInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimReadReceiptInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimReadReceiptInfo *arg1 = (RcimReadReceiptInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimReadReceiptInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV2_1has_1respond_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimReadReceiptInfoV2 *arg1 = (RcimReadReceiptInfoV2 *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV2 **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->has_respond = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV2_1has_1respond_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimReadReceiptInfoV2 *arg1 = (RcimReadReceiptInfoV2 *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV2 **)&jarg1; 
  result = (bool) ((arg1)->has_respond);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV2_1respond_1user_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimReadReceiptInfoV2 *arg1 = (RcimReadReceiptInfoV2 *) 0 ;
  RcimReadReceiptUserInfo *arg2 = (RcimReadReceiptUserInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimReadReceiptInfoV2 **)&jarg1; 
  arg2 = *(RcimReadReceiptUserInfo **)&jarg2; 
  if (arg1) (arg1)->respond_user_vec = (RcimReadReceiptUserInfo const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV2_1respond_1user_1vec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptInfoV2 *arg1 = (RcimReadReceiptInfoV2 *) 0 ;
  RcimReadReceiptUserInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV2 **)&jarg1; 
  result = (RcimReadReceiptUserInfo *) ((arg1)->respond_user_vec);
  *(RcimReadReceiptUserInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV2_1respond_1user_1vec_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimReadReceiptInfoV2 *arg1 = (RcimReadReceiptInfoV2 *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV2 **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->respond_user_vec_len = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV2_1respond_1user_1vec_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimReadReceiptInfoV2 *arg1 = (RcimReadReceiptInfoV2 *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV2 **)&jarg1; 
  result = (int32_t) ((arg1)->respond_user_vec_len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV2_1read_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimReadReceiptInfoV2 *arg1 = (RcimReadReceiptInfoV2 *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV2 **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->read_count = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV2_1read_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptInfoV2 *arg1 = (RcimReadReceiptInfoV2 *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV2 **)&jarg1; 
  result = (uint32_t) ((arg1)->read_count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV2_1total_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimReadReceiptInfoV2 *arg1 = (RcimReadReceiptInfoV2 *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV2 **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->total_count = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV2_1total_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptInfoV2 *arg1 = (RcimReadReceiptInfoV2 *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV2 **)&jarg1; 
  result = (uint32_t) ((arg1)->total_count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimReadReceiptInfoV2(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimReadReceiptInfoV2 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimReadReceiptInfoV2 *)new RcimReadReceiptInfoV2();
  *(RcimReadReceiptInfoV2 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimReadReceiptInfoV2(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimReadReceiptInfoV2 *arg1 = (RcimReadReceiptInfoV2 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimReadReceiptInfoV2 **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimIosConfig_1thread_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimIosConfig *arg1 = (RcimIosConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimIosConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->thread_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->thread_id, (const char *)arg2);
    } else {
      arg1->thread_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimIosConfig_1thread_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimIosConfig *arg1 = (RcimIosConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimIosConfig **)&jarg1; 
  result = (char *) ((arg1)->thread_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimIosConfig_1category_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimIosConfig *arg1 = (RcimIosConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimIosConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->category = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->category, (const char *)arg2);
    } else {
      arg1->category = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimIosConfig_1category_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimIosConfig *arg1 = (RcimIosConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimIosConfig **)&jarg1; 
  result = (char *) ((arg1)->category);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimIosConfig_1apns_1collapse_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimIosConfig *arg1 = (RcimIosConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimIosConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->apns_collapse_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->apns_collapse_id, (const char *)arg2);
    } else {
      arg1->apns_collapse_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimIosConfig_1apns_1collapse_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimIosConfig *arg1 = (RcimIosConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimIosConfig **)&jarg1; 
  result = (char *) ((arg1)->apns_collapse_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimIosConfig_1rich_1media_1uri_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimIosConfig *arg1 = (RcimIosConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimIosConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->rich_media_uri = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->rich_media_uri, (const char *)arg2);
    } else {
      arg1->rich_media_uri = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimIosConfig_1rich_1media_1uri_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimIosConfig *arg1 = (RcimIosConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimIosConfig **)&jarg1; 
  result = (char *) ((arg1)->rich_media_uri);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimIosConfig_1interruption_1level_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimIosConfig *arg1 = (RcimIosConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimIosConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->interruption_level = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->interruption_level, (const char *)arg2);
    } else {
      arg1->interruption_level = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimIosConfig_1interruption_1level_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimIosConfig *arg1 = (RcimIosConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimIosConfig **)&jarg1; 
  result = (char *) ((arg1)->interruption_level);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimIosConfig(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimIosConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimIosConfig *)new RcimIosConfig();
  *(RcimIosConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimIosConfig(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimIosConfig *arg1 = (RcimIosConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimIosConfig **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1notification_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->notification_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->notification_id, (const char *)arg2);
    } else {
      arg1->notification_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1notification_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->notification_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1mi_1channel_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->mi_channel_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->mi_channel_id, (const char *)arg2);
    } else {
      arg1->mi_channel_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1mi_1channel_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->mi_channel_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1hw_1channel_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->hw_channel_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->hw_channel_id, (const char *)arg2);
    } else {
      arg1->hw_channel_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1hw_1channel_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->hw_channel_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1hw_1importance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->hw_importance = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->hw_importance, (const char *)arg2);
    } else {
      arg1->hw_importance = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1hw_1importance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->hw_importance);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1hw_1image_1url_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->hw_image_url = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->hw_image_url, (const char *)arg2);
    } else {
      arg1->hw_image_url = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1hw_1image_1url_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->hw_image_url);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1hw_1category_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->hw_category = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->hw_category, (const char *)arg2);
    } else {
      arg1->hw_category = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1hw_1category_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->hw_category);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1honor_1importance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->honor_importance = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->honor_importance, (const char *)arg2);
    } else {
      arg1->honor_importance = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1honor_1importance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->honor_importance);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1honor_1image_1url_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->honor_image_url = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->honor_image_url, (const char *)arg2);
    } else {
      arg1->honor_image_url = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1honor_1image_1url_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->honor_image_url);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1oppo_1channel_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->oppo_channel_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->oppo_channel_id, (const char *)arg2);
    } else {
      arg1->oppo_channel_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1oppo_1channel_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->oppo_channel_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1vivo_1category_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->vivo_category = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->vivo_category, (const char *)arg2);
    } else {
      arg1->vivo_category = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1vivo_1category_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->vivo_category);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1vivo_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->vivo_type = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->vivo_type, (const char *)arg2);
    } else {
      arg1->vivo_type = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1vivo_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->vivo_type);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1fcm_1channel_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->fcm_channel_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->fcm_channel_id, (const char *)arg2);
    } else {
      arg1->fcm_channel_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1fcm_1channel_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->fcm_channel_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1fcm_1collapse_1key_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->fcm_collapse_key = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->fcm_collapse_key, (const char *)arg2);
    } else {
      arg1->fcm_collapse_key = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1fcm_1collapse_1key_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->fcm_collapse_key);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1fcm_1image_1url_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->fcm_image_url = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->fcm_image_url, (const char *)arg2);
    } else {
      arg1->fcm_image_url = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimAndroidConfig_1fcm_1image_1url_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  result = (char *) ((arg1)->fcm_image_url);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimAndroidConfig(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimAndroidConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimAndroidConfig *)new RcimAndroidConfig();
  *(RcimAndroidConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimAndroidConfig(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimHarmonyConfig_1image_1url_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimHarmonyConfig *arg1 = (RcimHarmonyConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimHarmonyConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->image_url = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->image_url, (const char *)arg2);
    } else {
      arg1->image_url = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimHarmonyConfig_1image_1url_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimHarmonyConfig *arg1 = (RcimHarmonyConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimHarmonyConfig **)&jarg1; 
  result = (char *) ((arg1)->image_url);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimHarmonyConfig_1category_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimHarmonyConfig *arg1 = (RcimHarmonyConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimHarmonyConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->category = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->category, (const char *)arg2);
    } else {
      arg1->category = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimHarmonyConfig_1category_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimHarmonyConfig *arg1 = (RcimHarmonyConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimHarmonyConfig **)&jarg1; 
  result = (char *) ((arg1)->category);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimHarmonyConfig(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimHarmonyConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimHarmonyConfig *)new RcimHarmonyConfig();
  *(RcimHarmonyConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimHarmonyConfig(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimHarmonyConfig *arg1 = (RcimHarmonyConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimHarmonyConfig **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1disable_1push_1title_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->disable_push_title = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1disable_1push_1title_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  result = (bool) ((arg1)->disable_push_title);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1push_1title_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->push_title = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->push_title, (const char *)arg2);
    } else {
      arg1->push_title = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1push_1title_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  result = (char *) ((arg1)->push_title);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1push_1content_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->push_content = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->push_content, (const char *)arg2);
    } else {
      arg1->push_content = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1push_1content_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  result = (char *) ((arg1)->push_content);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1push_1data_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->push_data = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->push_data, (const char *)arg2);
    } else {
      arg1->push_data = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1push_1data_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  result = (char *) ((arg1)->push_data);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1force_1show_1detail_1content_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->force_show_detail_content = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1force_1show_1detail_1content_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  result = (bool) ((arg1)->force_show_detail_content);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1ios_1config_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  RcimIosConfig *arg2 = (RcimIosConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  arg2 = *(RcimIosConfig **)&jarg2; 
  if (arg1) (arg1)->ios_config = (RcimIosConfig const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1ios_1config_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  RcimIosConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  result = (RcimIosConfig *) ((arg1)->ios_config);
  *(RcimIosConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1android_1config_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  RcimAndroidConfig *arg2 = (RcimAndroidConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  arg2 = *(RcimAndroidConfig **)&jarg2; 
  if (arg1) (arg1)->android_config = (RcimAndroidConfig const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1android_1config_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  RcimAndroidConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  result = (RcimAndroidConfig *) ((arg1)->android_config);
  *(RcimAndroidConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1harmony_1config_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  RcimHarmonyConfig *arg2 = (RcimHarmonyConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  arg2 = *(RcimHarmonyConfig **)&jarg2; 
  if (arg1) (arg1)->harmony_config = (RcimHarmonyConfig const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPushConfig_1harmony_1config_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  RcimHarmonyConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  result = (RcimHarmonyConfig *) ((arg1)->harmony_config);
  *(RcimHarmonyConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimPushConfig(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimPushConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPushConfig *)new RcimPushConfig();
  *(RcimPushConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimPushConfig(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimPushConfig **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1conv_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  enum RcimConversationType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  if (arg1) (arg1)->conv_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1conv_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  enum RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (enum RcimConversationType) ((arg1)->conv_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1target_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->target_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->target_id, (const char *)arg2);
    } else {
      arg1->target_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1target_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (char *) ((arg1)->target_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1channel_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->channel_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->channel_id, (const char *)arg2);
    } else {
      arg1->channel_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1channel_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (char *) ((arg1)->channel_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1message_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->message_id = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1message_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (int64_t) ((arg1)->message_id);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1direction_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  enum RcimMessageDirection arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = (enum RcimMessageDirection)jarg2; 
  if (arg1) (arg1)->direction = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1direction_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  enum RcimMessageDirection result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (enum RcimMessageDirection) ((arg1)->direction);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1sender_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->sender_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->sender_id, (const char *)arg2);
    } else {
      arg1->sender_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1sender_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (char *) ((arg1)->sender_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1received_1status_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  RcimReceivedStatus *arg2 = (RcimReceivedStatus *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = *(RcimReceivedStatus **)&jarg2; 
  if (arg1) (arg1)->received_status = (RcimReceivedStatus const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1received_1status_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  RcimReceivedStatus *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (RcimReceivedStatus *) ((arg1)->received_status);
  *(RcimReceivedStatus **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1sent_1status_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  enum RcimSentStatus arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = (enum RcimSentStatus)jarg2; 
  if (arg1) (arg1)->sent_status = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1sent_1status_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  enum RcimSentStatus result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (enum RcimSentStatus) ((arg1)->sent_status);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1received_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->received_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1received_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (int64_t) ((arg1)->received_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1sent_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->sent_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1sent_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (int64_t) ((arg1)->sent_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1object_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->object_name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->object_name, (const char *)arg2);
    } else {
      arg1->object_name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1object_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (char *) ((arg1)->object_name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1content_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->content = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->content, (const char *)arg2);
    } else {
      arg1->content = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1content_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (char *) ((arg1)->content);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1searchable_1words_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->searchable_words = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->searchable_words, (const char *)arg2);
    } else {
      arg1->searchable_words = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1searchable_1words_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (char *) ((arg1)->searchable_words);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1uid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->uid = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->uid, (const char *)arg2);
    } else {
      arg1->uid = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1uid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (char *) ((arg1)->uid);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1extra_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->extra = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->extra, (const char *)arg2);
    } else {
      arg1->extra = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1extra_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (char *) ((arg1)->extra);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1read_1receipt_1info_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  RcimReadReceiptInfo *arg2 = (RcimReadReceiptInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = *(RcimReadReceiptInfo **)&jarg2; 
  if (arg1) (arg1)->read_receipt_info = (RcimReadReceiptInfo const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1read_1receipt_1info_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  RcimReadReceiptInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (RcimReadReceiptInfo *) ((arg1)->read_receipt_info);
  *(RcimReadReceiptInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1read_1receipt_1info_1v2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  RcimReadReceiptInfoV2 *arg2 = (RcimReadReceiptInfoV2 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = *(RcimReadReceiptInfoV2 **)&jarg2; 
  if (arg1) (arg1)->read_receipt_info_v2 = (RcimReadReceiptInfoV2 const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1read_1receipt_1info_1v2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  RcimReadReceiptInfoV2 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (RcimReadReceiptInfoV2 *) ((arg1)->read_receipt_info_v2);
  *(RcimReadReceiptInfoV2 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1is_1notification_1disabled_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_notification_disabled = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1is_1notification_1disabled_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (bool) ((arg1)->is_notification_disabled);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1push_1config_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  RcimPushConfig *arg2 = (RcimPushConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = *(RcimPushConfig **)&jarg2; 
  if (arg1) (arg1)->push_config = (RcimPushConfig const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1push_1config_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  RcimPushConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (RcimPushConfig *) ((arg1)->push_config);
  *(RcimPushConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1is_1offline_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_offline = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1is_1offline_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (bool) ((arg1)->is_offline);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1is_1ext_1supported_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_ext_supported = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1is_1ext_1supported_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (bool) ((arg1)->is_ext_supported);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1ext_1content_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->ext_content = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->ext_content, (const char *)arg2);
    } else {
      arg1->ext_content = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1ext_1content_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (char *) ((arg1)->ext_content);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1is_1need_1receipt_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_need_receipt = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1is_1need_1receipt_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (bool) ((arg1)->is_need_receipt);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1has_1sent_1receipt_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->has_sent_receipt = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBox_1has_1sent_1receipt_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  result = (bool) ((arg1)->has_sent_receipt);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimMessageBox(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimMessageBox *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageBox *)new RcimMessageBox();
  *(RcimMessageBox **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimMessageBox(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimMessageBox **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedInfo_1left_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimReceivedInfo *arg1 = (RcimReceivedInfo *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedInfo **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->left = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedInfo_1left_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimReceivedInfo *arg1 = (RcimReceivedInfo *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedInfo **)&jarg1; 
  result = (int32_t) ((arg1)->left);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedInfo_1has_1package_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimReceivedInfo *arg1 = (RcimReceivedInfo *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedInfo **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->has_package = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedInfo_1has_1package_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimReceivedInfo *arg1 = (RcimReceivedInfo *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedInfo **)&jarg1; 
  result = (bool) ((arg1)->has_package);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedInfo_1is_1offline_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimReceivedInfo *arg1 = (RcimReceivedInfo *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedInfo **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_offline = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReceivedInfo_1is_1offline_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimReceivedInfo *arg1 = (RcimReceivedInfo *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedInfo **)&jarg1; 
  result = (bool) ((arg1)->is_offline);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimReceivedInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimReceivedInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimReceivedInfo *)new RcimReceivedInfo();
  *(RcimReceivedInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimReceivedInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimReceivedInfo *arg1 = (RcimReceivedInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimReceivedInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1base_1info_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->base_info = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->base_info, (const char *)arg2);
    } else {
      arg1->base_info = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1base_1info_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  result = (char *) ((arg1)->base_info);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1operator_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->operator_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->operator_id, (const char *)arg2);
    } else {
      arg1->operator_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1operator_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  result = (char *) ((arg1)->operator_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1recall_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->recall_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1recall_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  result = (int64_t) ((arg1)->recall_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1original_1object_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->original_object_name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->original_object_name, (const char *)arg2);
    } else {
      arg1->original_object_name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1original_1object_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  result = (char *) ((arg1)->original_object_name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1original_1content_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->original_content = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->original_content, (const char *)arg2);
    } else {
      arg1->original_content = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1original_1content_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  result = (char *) ((arg1)->original_content);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1recall_1content_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->recall_content = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->recall_content, (const char *)arg2);
    } else {
      arg1->recall_content = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1recall_1content_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  result = (char *) ((arg1)->recall_content);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1action_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->action_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1action_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  result = (int64_t) ((arg1)->action_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1is_1admin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_admin = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1is_1admin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  result = (bool) ((arg1)->is_admin);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1is_1deleted_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_deleted = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRecallNotificationMessage_1is_1deleted_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  result = (bool) ((arg1)->is_deleted);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimRecallNotificationMessage(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimRecallNotificationMessage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimRecallNotificationMessage *)new RcimRecallNotificationMessage();
  *(RcimRecallNotificationMessage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimRecallNotificationMessage(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimRecallNotificationMessage *arg1 = (RcimRecallNotificationMessage *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimRecallNotificationMessage **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1conv_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  enum RcimConversationType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  if (arg1) (arg1)->conv_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1conv_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  enum RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  result = (enum RcimConversationType) ((arg1)->conv_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1target_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->target_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->target_id, (const char *)arg2);
    } else {
      arg1->target_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1target_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  result = (char *) ((arg1)->target_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1channel_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->channel_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->channel_id, (const char *)arg2);
    } else {
      arg1->channel_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1channel_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  result = (char *) ((arg1)->channel_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1uid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->uid = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->uid, (const char *)arg2);
    } else {
      arg1->uid = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1uid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  result = (char *) ((arg1)->uid);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1extra_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->extra = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->extra, (const char *)arg2);
    } else {
      arg1->extra = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1extra_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  result = (char *) ((arg1)->extra);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1block_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  enum RcimMessageBlockType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  arg2 = (enum RcimMessageBlockType)jarg2; 
  if (arg1) (arg1)->block_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1block_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  enum RcimMessageBlockType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  result = (enum RcimMessageBlockType) ((arg1)->block_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1source_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  enum RcimMessageBlockSourceType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  arg2 = (enum RcimMessageBlockSourceType)jarg2; 
  if (arg1) (arg1)->source_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1source_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  enum RcimMessageBlockSourceType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  result = (enum RcimMessageBlockSourceType) ((arg1)->source_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1source_1content_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->source_content = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->source_content, (const char *)arg2);
    } else {
      arg1->source_content = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageBlockInfo_1source_1content_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  result = (char *) ((arg1)->source_content);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimMessageBlockInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimMessageBlockInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageBlockInfo *)new RcimMessageBlockInfo();
  *(RcimMessageBlockInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimMessageBlockInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimMessageBlockInfo *arg1 = (RcimMessageBlockInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimMessageBlockInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSendMessageOption_1is_1voip_1push_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimSendMessageOption *arg1 = (RcimSendMessageOption *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSendMessageOption **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_voip_push = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSendMessageOption_1is_1voip_1push_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimSendMessageOption *arg1 = (RcimSendMessageOption *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSendMessageOption **)&jarg1; 
  result = (bool) ((arg1)->is_voip_push);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSendMessageOption_1user_1ids_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimSendMessageOption *arg1 = (RcimSendMessageOption *) 0 ;
  char **arg2 = (char **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSendMessageOption **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  if (arg1) (arg1)->user_ids = (char const *const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSendMessageOption_1user_1ids_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimSendMessageOption *arg1 = (RcimSendMessageOption *) 0 ;
  char **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSendMessageOption **)&jarg1; 
  result = (char **) ((arg1)->user_ids);
  *(char ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSendMessageOption_1user_1ids_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimSendMessageOption *arg1 = (RcimSendMessageOption *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSendMessageOption **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->user_ids_len = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSendMessageOption_1user_1ids_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimSendMessageOption *arg1 = (RcimSendMessageOption *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSendMessageOption **)&jarg1; 
  result = (int32_t) ((arg1)->user_ids_len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSendMessageOption_1encrypted_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimSendMessageOption *arg1 = (RcimSendMessageOption *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSendMessageOption **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->encrypted = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSendMessageOption_1encrypted_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimSendMessageOption *arg1 = (RcimSendMessageOption *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSendMessageOption **)&jarg1; 
  result = (bool) ((arg1)->encrypted);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimSendMessageOption(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimSendMessageOption *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimSendMessageOption *)new RcimSendMessageOption();
  *(RcimSendMessageOption **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimSendMessageOption(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimSendMessageOption *arg1 = (RcimSendMessageOption *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimSendMessageOption **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSendReadReceiptResponseMessageData_1sender_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimSendReadReceiptResponseMessageData *arg1 = (RcimSendReadReceiptResponseMessageData *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSendReadReceiptResponseMessageData **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->sender_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->sender_id, (const char *)arg2);
    } else {
      arg1->sender_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSendReadReceiptResponseMessageData_1sender_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimSendReadReceiptResponseMessageData *arg1 = (RcimSendReadReceiptResponseMessageData *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSendReadReceiptResponseMessageData **)&jarg1; 
  result = (char *) ((arg1)->sender_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSendReadReceiptResponseMessageData_1message_1uid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimSendReadReceiptResponseMessageData *arg1 = (RcimSendReadReceiptResponseMessageData *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSendReadReceiptResponseMessageData **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->message_uid = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->message_uid, (const char *)arg2);
    } else {
      arg1->message_uid = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimSendReadReceiptResponseMessageData_1message_1uid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimSendReadReceiptResponseMessageData *arg1 = (RcimSendReadReceiptResponseMessageData *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSendReadReceiptResponseMessageData **)&jarg1; 
  result = (char *) ((arg1)->message_uid);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimSendReadReceiptResponseMessageData(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimSendReadReceiptResponseMessageData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimSendReadReceiptResponseMessageData *)new RcimSendReadReceiptResponseMessageData();
  *(RcimSendReadReceiptResponseMessageData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimSendReadReceiptResponseMessageData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimSendReadReceiptResponseMessageData *arg1 = (RcimSendReadReceiptResponseMessageData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimSendReadReceiptResponseMessageData **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptV2ReaderInfo_1user_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimReadReceiptV2ReaderInfo *arg1 = (RcimReadReceiptV2ReaderInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptV2ReaderInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->user_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->user_id, (const char *)arg2);
    } else {
      arg1->user_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptV2ReaderInfo_1user_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimReadReceiptV2ReaderInfo *arg1 = (RcimReadReceiptV2ReaderInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptV2ReaderInfo **)&jarg1; 
  result = (char *) ((arg1)->user_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptV2ReaderInfo_1read_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimReadReceiptV2ReaderInfo *arg1 = (RcimReadReceiptV2ReaderInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptV2ReaderInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->read_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptV2ReaderInfo_1read_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptV2ReaderInfo *arg1 = (RcimReadReceiptV2ReaderInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptV2ReaderInfo **)&jarg1; 
  result = (int64_t) ((arg1)->read_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimReadReceiptV2ReaderInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimReadReceiptV2ReaderInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimReadReceiptV2ReaderInfo *)new RcimReadReceiptV2ReaderInfo();
  *(RcimReadReceiptV2ReaderInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimReadReceiptV2ReaderInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimReadReceiptV2ReaderInfo *arg1 = (RcimReadReceiptV2ReaderInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimReadReceiptV2ReaderInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageType_1object_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageType *arg1 = (RcimMessageType *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageType **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->object_name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->object_name, (const char *)arg2);
    } else {
      arg1->object_name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageType_1object_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageType *arg1 = (RcimMessageType *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageType **)&jarg1; 
  result = (char *) ((arg1)->object_name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageType_1flag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimMessageType *arg1 = (RcimMessageType *) 0 ;
  enum RcimMessageFlag arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageType **)&jarg1; 
  arg2 = (enum RcimMessageFlag)jarg2; 
  if (arg1) (arg1)->flag = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageType_1flag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimMessageType *arg1 = (RcimMessageType *) 0 ;
  enum RcimMessageFlag result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageType **)&jarg1; 
  result = (enum RcimMessageFlag) ((arg1)->flag);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageType_1is_1media_1message_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimMessageType *arg1 = (RcimMessageType *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageType **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_media_message = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageType_1is_1media_1message_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimMessageType *arg1 = (RcimMessageType *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageType **)&jarg1; 
  result = (bool) ((arg1)->is_media_message);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimMessageType(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimMessageType *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageType *)new RcimMessageType();
  *(RcimMessageType **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimMessageType(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimMessageType *arg1 = (RcimMessageType *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimMessageType **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageExpansionKvInfo_1key_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageExpansionKvInfo *arg1 = (RcimMessageExpansionKvInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageExpansionKvInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->key = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->key, (const char *)arg2);
    } else {
      arg1->key = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageExpansionKvInfo_1key_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageExpansionKvInfo *arg1 = (RcimMessageExpansionKvInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageExpansionKvInfo **)&jarg1; 
  result = (char *) ((arg1)->key);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageExpansionKvInfo_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageExpansionKvInfo *arg1 = (RcimMessageExpansionKvInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageExpansionKvInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->value = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->value, (const char *)arg2);
    } else {
      arg1->value = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageExpansionKvInfo_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageExpansionKvInfo *arg1 = (RcimMessageExpansionKvInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageExpansionKvInfo **)&jarg1; 
  result = (char *) ((arg1)->value);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimMessageExpansionKvInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimMessageExpansionKvInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageExpansionKvInfo *)new RcimMessageExpansionKvInfo();
  *(RcimMessageExpansionKvInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimMessageExpansionKvInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimMessageExpansionKvInfo *arg1 = (RcimMessageExpansionKvInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimMessageExpansionKvInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1conv_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  enum RcimConversationType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  if (arg1) (arg1)->conv_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1conv_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  enum RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  result = (enum RcimConversationType) ((arg1)->conv_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1target_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->target_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->target_id, (const char *)arg2);
    } else {
      arg1->target_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1target_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  result = (char *) ((arg1)->target_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1channel_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->channel_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->channel_id, (const char *)arg2);
    } else {
      arg1->channel_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1channel_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  result = (char *) ((arg1)->channel_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1update_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->update_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1update_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  result = (int64_t) ((arg1)->update_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1pin_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  int64_t *arg2 = (int64_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  arg2 = *(int64_t **)&jarg2; 
  if (arg1) (arg1)->pin_time = (int64_t const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1pin_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  int64_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  result = (int64_t *) ((arg1)->pin_time);
  *(int64_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1is_1pinned_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  bool *arg2 = (bool *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  arg2 = *(bool **)&jarg2; 
  if (arg1) (arg1)->is_pinned = (bool const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1is_1pinned_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  bool *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  result = (bool *) ((arg1)->is_pinned);
  *(bool **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1mute_1level_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  enum RcimPushNotificationMuteLevel *arg2 = (enum RcimPushNotificationMuteLevel *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  arg2 = *(enum RcimPushNotificationMuteLevel **)&jarg2; 
  if (arg1) (arg1)->mute_level = (enum RcimPushNotificationMuteLevel const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationStatusChangeItem_1mute_1level_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  enum RcimPushNotificationMuteLevel *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  result = (enum RcimPushNotificationMuteLevel *) ((arg1)->mute_level);
  *(enum RcimPushNotificationMuteLevel **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimConversationStatusChangeItem(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimConversationStatusChangeItem *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationStatusChangeItem *)new RcimConversationStatusChangeItem();
  *(RcimConversationStatusChangeItem **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimConversationStatusChangeItem(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimConversationStatusChangeItem *arg1 = (RcimConversationStatusChangeItem *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimConversationStatusChangeItem **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimTypingStatus_1user_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimTypingStatus *arg1 = (RcimTypingStatus *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimTypingStatus **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->user_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->user_id, (const char *)arg2);
    } else {
      arg1->user_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimTypingStatus_1user_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimTypingStatus *arg1 = (RcimTypingStatus *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimTypingStatus **)&jarg1; 
  result = (char *) ((arg1)->user_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimTypingStatus_1object_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimTypingStatus *arg1 = (RcimTypingStatus *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimTypingStatus **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->object_name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->object_name, (const char *)arg2);
    } else {
      arg1->object_name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimTypingStatus_1object_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimTypingStatus *arg1 = (RcimTypingStatus *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimTypingStatus **)&jarg1; 
  result = (char *) ((arg1)->object_name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimTypingStatus_1sent_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  RcimTypingStatus *arg1 = (RcimTypingStatus *) 0 ;
  uint64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimTypingStatus **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->sent_time = arg2;
}


SWIGEXPORT jobject JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimTypingStatus_1sent_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  RcimTypingStatus *arg1 = (RcimTypingStatus *) 0 ;
  uint64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimTypingStatus **)&jarg1; 
  result = (uint64_t) ((arg1)->sent_time);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimTypingStatus(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimTypingStatus *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimTypingStatus *)new RcimTypingStatus();
  *(RcimTypingStatus **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimTypingStatus(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimTypingStatus *arg1 = (RcimTypingStatus *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimTypingStatus **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1conv_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  enum RcimConversationType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  if (arg1) (arg1)->conv_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1conv_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  enum RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (enum RcimConversationType) ((arg1)->conv_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1target_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->target_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->target_id, (const char *)arg2);
    } else {
      arg1->target_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1target_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (char *) ((arg1)->target_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1channel_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->channel_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->channel_id, (const char *)arg2);
    } else {
      arg1->channel_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1channel_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (char *) ((arg1)->channel_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1unread_1message_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->unread_message_count = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1unread_1message_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (int32_t) ((arg1)->unread_message_count);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1is_1pinned_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_pinned = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1is_1pinned_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (bool) ((arg1)->is_pinned);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1last_1received_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->last_received_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1last_1received_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (int64_t) ((arg1)->last_received_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1last_1sent_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->last_sent_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1last_1sent_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (int64_t) ((arg1)->last_sent_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1last_1operate_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->last_operate_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1last_1operate_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (int64_t) ((arg1)->last_operate_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1object_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->object_name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->object_name, (const char *)arg2);
    } else {
      arg1->object_name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1object_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (char *) ((arg1)->object_name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1sender_1user_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->sender_user_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->sender_user_id, (const char *)arg2);
    } else {
      arg1->sender_user_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1sender_1user_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (char *) ((arg1)->sender_user_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1last_1message_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->last_message_id = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1last_1message_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (int64_t) ((arg1)->last_message_id);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1last_1message_1content_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->last_message_content = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->last_message_content, (const char *)arg2);
    } else {
      arg1->last_message_content = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1last_1message_1content_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (char *) ((arg1)->last_message_content);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1draft_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->draft = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->draft, (const char *)arg2);
    } else {
      arg1->draft = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1draft_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (char *) ((arg1)->draft);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1mute_1level_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  enum RcimPushNotificationMuteLevel arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = (enum RcimPushNotificationMuteLevel)jarg2; 
  if (arg1) (arg1)->mute_level = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1mute_1level_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  enum RcimPushNotificationMuteLevel result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (enum RcimPushNotificationMuteLevel) ((arg1)->mute_level);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1mentioned_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->mentioned_count = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1mentioned_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (int32_t) ((arg1)->mentioned_count);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1match_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->match_count = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversation_1match_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  result = (uint32_t) ((arg1)->match_count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimConversation(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimConversation *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversation *)new RcimConversation();
  *(RcimConversation **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimConversation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimConversation **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationIdentifier_1conv_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimConversationIdentifier *arg1 = (RcimConversationIdentifier *) 0 ;
  enum RcimConversationType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationIdentifier **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  if (arg1) (arg1)->conv_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationIdentifier_1conv_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimConversationIdentifier *arg1 = (RcimConversationIdentifier *) 0 ;
  enum RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationIdentifier **)&jarg1; 
  result = (enum RcimConversationType) ((arg1)->conv_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationIdentifier_1target_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimConversationIdentifier *arg1 = (RcimConversationIdentifier *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationIdentifier **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->target_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->target_id, (const char *)arg2);
    } else {
      arg1->target_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationIdentifier_1target_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimConversationIdentifier *arg1 = (RcimConversationIdentifier *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationIdentifier **)&jarg1; 
  result = (char *) ((arg1)->target_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationIdentifier_1channel_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimConversationIdentifier *arg1 = (RcimConversationIdentifier *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationIdentifier **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->channel_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->channel_id, (const char *)arg2);
    } else {
      arg1->channel_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimConversationIdentifier_1channel_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimConversationIdentifier *arg1 = (RcimConversationIdentifier *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationIdentifier **)&jarg1; 
  result = (char *) ((arg1)->channel_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimConversationIdentifier(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimConversationIdentifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationIdentifier *)new RcimConversationIdentifier();
  *(RcimConversationIdentifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimConversationIdentifier(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimConversationIdentifier *arg1 = (RcimConversationIdentifier *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimConversationIdentifier **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomJoinedInfo_1create_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->create_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomJoinedInfo_1create_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  result = (int64_t) ((arg1)->create_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomJoinedInfo_1member_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->member_count = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomJoinedInfo_1member_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  result = (int32_t) ((arg1)->member_count);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomJoinedInfo_1is_1all_1chatroom_1banned_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_all_chatroom_banned = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomJoinedInfo_1is_1all_1chatroom_1banned_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  result = (bool) ((arg1)->is_all_chatroom_banned);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomJoinedInfo_1is_1current_1user_1banned_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_current_user_banned = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomJoinedInfo_1is_1current_1user_1banned_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  result = (bool) ((arg1)->is_current_user_banned);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomJoinedInfo_1is_1current_1chatroom_1banned_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_current_chatroom_banned = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomJoinedInfo_1is_1current_1chatroom_1banned_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  result = (bool) ((arg1)->is_current_chatroom_banned);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomJoinedInfo_1is_1current_1chatroom_1in_1whitelist_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_current_chatroom_in_whitelist = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomJoinedInfo_1is_1current_1chatroom_1in_1whitelist_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  result = (bool) ((arg1)->is_current_chatroom_in_whitelist);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimChatroomJoinedInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimChatroomJoinedInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomJoinedInfo *)new RcimChatroomJoinedInfo();
  *(RcimChatroomJoinedInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimChatroomJoinedInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimChatroomJoinedInfo *arg1 = (RcimChatroomJoinedInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimChatroomJoinedInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberActionInfo_1user_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomMemberActionInfo *arg1 = (RcimChatroomMemberActionInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberActionInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->user_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->user_id, (const char *)arg2);
    } else {
      arg1->user_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberActionInfo_1user_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomMemberActionInfo *arg1 = (RcimChatroomMemberActionInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberActionInfo **)&jarg1; 
  result = (char *) ((arg1)->user_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberActionInfo_1action_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomMemberActionInfo *arg1 = (RcimChatroomMemberActionInfo *) 0 ;
  enum RcimChatroomMemberActionType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberActionInfo **)&jarg1; 
  arg2 = (enum RcimChatroomMemberActionType)jarg2; 
  if (arg1) (arg1)->action_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberActionInfo_1action_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomMemberActionInfo *arg1 = (RcimChatroomMemberActionInfo *) 0 ;
  enum RcimChatroomMemberActionType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberActionInfo **)&jarg1; 
  result = (enum RcimChatroomMemberActionType) ((arg1)->action_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimChatroomMemberActionInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimChatroomMemberActionInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberActionInfo *)new RcimChatroomMemberActionInfo();
  *(RcimChatroomMemberActionInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimChatroomMemberActionInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimChatroomMemberActionInfo *arg1 = (RcimChatroomMemberActionInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimChatroomMemberActionInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberChangeInfo_1room_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomMemberChangeInfo *arg1 = (RcimChatroomMemberChangeInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberChangeInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->room_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->room_id, (const char *)arg2);
    } else {
      arg1->room_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberChangeInfo_1room_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomMemberChangeInfo *arg1 = (RcimChatroomMemberChangeInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberChangeInfo **)&jarg1; 
  result = (char *) ((arg1)->room_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberChangeInfo_1member_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomMemberChangeInfo *arg1 = (RcimChatroomMemberChangeInfo *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberChangeInfo **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->member_count = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberChangeInfo_1member_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomMemberChangeInfo *arg1 = (RcimChatroomMemberChangeInfo *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberChangeInfo **)&jarg1; 
  result = (int32_t) ((arg1)->member_count);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberChangeInfo_1action_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimChatroomMemberChangeInfo *arg1 = (RcimChatroomMemberChangeInfo *) 0 ;
  RcimChatroomMemberActionInfo *arg2 = (RcimChatroomMemberActionInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimChatroomMemberChangeInfo **)&jarg1; 
  arg2 = *(RcimChatroomMemberActionInfo **)&jarg2; 
  if (arg1) (arg1)->action_vec = (RcimChatroomMemberActionInfo const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberChangeInfo_1action_1vec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimChatroomMemberChangeInfo *arg1 = (RcimChatroomMemberChangeInfo *) 0 ;
  RcimChatroomMemberActionInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberChangeInfo **)&jarg1; 
  result = (RcimChatroomMemberActionInfo *) ((arg1)->action_vec);
  *(RcimChatroomMemberActionInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberChangeInfo_1action_1vec_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomMemberChangeInfo *arg1 = (RcimChatroomMemberChangeInfo *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberChangeInfo **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->action_vec_len = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberChangeInfo_1action_1vec_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomMemberChangeInfo *arg1 = (RcimChatroomMemberChangeInfo *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberChangeInfo **)&jarg1; 
  result = (int32_t) ((arg1)->action_vec_len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimChatroomMemberChangeInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimChatroomMemberChangeInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberChangeInfo *)new RcimChatroomMemberChangeInfo();
  *(RcimChatroomMemberChangeInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimChatroomMemberChangeInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimChatroomMemberChangeInfo *arg1 = (RcimChatroomMemberChangeInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimChatroomMemberChangeInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1room_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->room_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->room_id, (const char *)arg2);
    } else {
      arg1->room_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1room_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  result = (char *) ((arg1)->room_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1event_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  enum RcimChatroomMemberBannedEventType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  arg2 = (enum RcimChatroomMemberBannedEventType)jarg2; 
  if (arg1) (arg1)->event_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1event_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  enum RcimChatroomMemberBannedEventType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  result = (enum RcimChatroomMemberBannedEventType) ((arg1)->event_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1duration_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->duration_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1duration_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  result = (int64_t) ((arg1)->duration_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1operate_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->operate_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1operate_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  result = (int64_t) ((arg1)->operate_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1user_1id_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  char **arg2 = (char **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  if (arg1) (arg1)->user_id_vec = (char const *const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1user_1id_1vec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  char **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  result = (char **) ((arg1)->user_id_vec);
  *(char ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1user_1id_1vec_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->user_id_vec_len = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1user_1id_1vec_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  result = (int32_t) ((arg1)->user_id_vec_len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1extra_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->extra = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->extra, (const char *)arg2);
    } else {
      arg1->extra = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBannedInfo_1extra_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  result = (char *) ((arg1)->extra);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimChatroomMemberBannedInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimChatroomMemberBannedInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberBannedInfo *)new RcimChatroomMemberBannedInfo();
  *(RcimChatroomMemberBannedInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimChatroomMemberBannedInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimChatroomMemberBannedInfo *arg1 = (RcimChatroomMemberBannedInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimChatroomMemberBannedInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1room_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->room_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->room_id, (const char *)arg2);
    } else {
      arg1->room_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1room_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  result = (char *) ((arg1)->room_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1event_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  enum RcimChatroomMemberBlockedEventType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  arg2 = (enum RcimChatroomMemberBlockedEventType)jarg2; 
  if (arg1) (arg1)->event_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1event_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  enum RcimChatroomMemberBlockedEventType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  result = (enum RcimChatroomMemberBlockedEventType) ((arg1)->event_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1duration_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->duration_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1duration_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  result = (int64_t) ((arg1)->duration_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1operate_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->operate_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1operate_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  result = (int64_t) ((arg1)->operate_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1user_1id_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  char **arg2 = (char **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  if (arg1) (arg1)->user_id_vec = (char const *const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1user_1id_1vec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  char **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  result = (char **) ((arg1)->user_id_vec);
  *(char ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1user_1id_1vec_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->user_id_vec_len = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1user_1id_1vec_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  result = (int32_t) ((arg1)->user_id_vec_len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1extra_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->extra = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->extra, (const char *)arg2);
    } else {
      arg1->extra = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMemberBlockedInfo_1extra_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  result = (char *) ((arg1)->extra);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimChatroomMemberBlockedInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimChatroomMemberBlockedInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMemberBlockedInfo *)new RcimChatroomMemberBlockedInfo();
  *(RcimChatroomMemberBlockedInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimChatroomMemberBlockedInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimChatroomMemberBlockedInfo *arg1 = (RcimChatroomMemberBlockedInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimChatroomMemberBlockedInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncInfo_1room_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomMultiClientSyncInfo *arg1 = (RcimChatroomMultiClientSyncInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMultiClientSyncInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->room_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->room_id, (const char *)arg2);
    } else {
      arg1->room_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncInfo_1room_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomMultiClientSyncInfo *arg1 = (RcimChatroomMultiClientSyncInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMultiClientSyncInfo **)&jarg1; 
  result = (char *) ((arg1)->room_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncInfo_1event_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomMultiClientSyncInfo *arg1 = (RcimChatroomMultiClientSyncInfo *) 0 ;
  enum RcimChatroomMultiClientSyncEventType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMultiClientSyncInfo **)&jarg1; 
  arg2 = (enum RcimChatroomMultiClientSyncEventType)jarg2; 
  if (arg1) (arg1)->event_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncInfo_1event_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomMultiClientSyncInfo *arg1 = (RcimChatroomMultiClientSyncInfo *) 0 ;
  enum RcimChatroomMultiClientSyncEventType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMultiClientSyncInfo **)&jarg1; 
  result = (enum RcimChatroomMultiClientSyncEventType) ((arg1)->event_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncInfo_1quit_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomMultiClientSyncInfo *arg1 = (RcimChatroomMultiClientSyncInfo *) 0 ;
  enum RcimChatroomMultiClientSyncQuitType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMultiClientSyncInfo **)&jarg1; 
  arg2 = (enum RcimChatroomMultiClientSyncQuitType)jarg2; 
  if (arg1) (arg1)->quit_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncInfo_1quit_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomMultiClientSyncInfo *arg1 = (RcimChatroomMultiClientSyncInfo *) 0 ;
  enum RcimChatroomMultiClientSyncQuitType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMultiClientSyncInfo **)&jarg1; 
  result = (enum RcimChatroomMultiClientSyncQuitType) ((arg1)->quit_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncInfo_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimChatroomMultiClientSyncInfo *arg1 = (RcimChatroomMultiClientSyncInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMultiClientSyncInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncInfo_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimChatroomMultiClientSyncInfo *arg1 = (RcimChatroomMultiClientSyncInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMultiClientSyncInfo **)&jarg1; 
  result = (int64_t) ((arg1)->time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncInfo_1extra_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomMultiClientSyncInfo *arg1 = (RcimChatroomMultiClientSyncInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMultiClientSyncInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->extra = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->extra, (const char *)arg2);
    } else {
      arg1->extra = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomMultiClientSyncInfo_1extra_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomMultiClientSyncInfo *arg1 = (RcimChatroomMultiClientSyncInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomMultiClientSyncInfo **)&jarg1; 
  result = (char *) ((arg1)->extra);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimChatroomMultiClientSyncInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimChatroomMultiClientSyncInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomMultiClientSyncInfo *)new RcimChatroomMultiClientSyncInfo();
  *(RcimChatroomMultiClientSyncInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimChatroomMultiClientSyncInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimChatroomMultiClientSyncInfo *arg1 = (RcimChatroomMultiClientSyncInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimChatroomMultiClientSyncInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomUserInfo_1user_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomUserInfo *arg1 = (RcimChatroomUserInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomUserInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->user_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->user_id, (const char *)arg2);
    } else {
      arg1->user_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomUserInfo_1user_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomUserInfo *arg1 = (RcimChatroomUserInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomUserInfo **)&jarg1; 
  result = (char *) ((arg1)->user_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomUserInfo_1join_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimChatroomUserInfo *arg1 = (RcimChatroomUserInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomUserInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->join_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomUserInfo_1join_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimChatroomUserInfo *arg1 = (RcimChatroomUserInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomUserInfo **)&jarg1; 
  result = (int64_t) ((arg1)->join_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimChatroomUserInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimChatroomUserInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomUserInfo *)new RcimChatroomUserInfo();
  *(RcimChatroomUserInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimChatroomUserInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimChatroomUserInfo *arg1 = (RcimChatroomUserInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimChatroomUserInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomInfo_1room_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomInfo *arg1 = (RcimChatroomInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->room_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->room_id, (const char *)arg2);
    } else {
      arg1->room_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomInfo_1room_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomInfo *arg1 = (RcimChatroomInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomInfo **)&jarg1; 
  result = (char *) ((arg1)->room_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomInfo_1total_1user_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomInfo *arg1 = (RcimChatroomInfo *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomInfo **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->total_user_count = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomInfo_1total_1user_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomInfo *arg1 = (RcimChatroomInfo *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomInfo **)&jarg1; 
  result = (int32_t) ((arg1)->total_user_count);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomInfo_1join_1order_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomInfo *arg1 = (RcimChatroomInfo *) 0 ;
  enum RcimOrder arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomInfo **)&jarg1; 
  arg2 = (enum RcimOrder)jarg2; 
  if (arg1) (arg1)->join_order = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomInfo_1join_1order_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomInfo *arg1 = (RcimChatroomInfo *) 0 ;
  enum RcimOrder result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomInfo **)&jarg1; 
  result = (enum RcimOrder) ((arg1)->join_order);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomInfo_1user_1info_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimChatroomInfo *arg1 = (RcimChatroomInfo *) 0 ;
  RcimChatroomUserInfo *arg2 = (RcimChatroomUserInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimChatroomInfo **)&jarg1; 
  arg2 = *(RcimChatroomUserInfo **)&jarg2; 
  if (arg1) (arg1)->user_info_vec = (RcimChatroomUserInfo const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomInfo_1user_1info_1vec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimChatroomInfo *arg1 = (RcimChatroomInfo *) 0 ;
  RcimChatroomUserInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomInfo **)&jarg1; 
  result = (RcimChatroomUserInfo *) ((arg1)->user_info_vec);
  *(RcimChatroomUserInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomInfo_1user_1info_1vec_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomInfo *arg1 = (RcimChatroomInfo *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomInfo **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->user_info_vec_len = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomInfo_1user_1info_1vec_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomInfo *arg1 = (RcimChatroomInfo *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomInfo **)&jarg1; 
  result = (int32_t) ((arg1)->user_info_vec_len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimChatroomInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimChatroomInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomInfo *)new RcimChatroomInfo();
  *(RcimChatroomInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimChatroomInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimChatroomInfo *arg1 = (RcimChatroomInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimChatroomInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomKvInfo_1key_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomKvInfo *arg1 = (RcimChatroomKvInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomKvInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->key = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->key, (const char *)arg2);
    } else {
      arg1->key = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomKvInfo_1key_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomKvInfo *arg1 = (RcimChatroomKvInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomKvInfo **)&jarg1; 
  result = (char *) ((arg1)->key);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomKvInfo_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomKvInfo *arg1 = (RcimChatroomKvInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomKvInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->value = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->value, (const char *)arg2);
    } else {
      arg1->value = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomKvInfo_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomKvInfo *arg1 = (RcimChatroomKvInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomKvInfo **)&jarg1; 
  result = (char *) ((arg1)->value);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimChatroomKvInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimChatroomKvInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomKvInfo *)new RcimChatroomKvInfo();
  *(RcimChatroomKvInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimChatroomKvInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimChatroomKvInfo *arg1 = (RcimChatroomKvInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimChatroomKvInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomKeyErrorInfo_1key_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimChatroomKeyErrorInfo *arg1 = (RcimChatroomKeyErrorInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomKeyErrorInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->key = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->key, (const char *)arg2);
    } else {
      arg1->key = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomKeyErrorInfo_1key_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimChatroomKeyErrorInfo *arg1 = (RcimChatroomKeyErrorInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomKeyErrorInfo **)&jarg1; 
  result = (char *) ((arg1)->key);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomKeyErrorInfo_1error_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimChatroomKeyErrorInfo *arg1 = (RcimChatroomKeyErrorInfo *) 0 ;
  enum RcimEngineError arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomKeyErrorInfo **)&jarg1; 
  arg2 = (enum RcimEngineError)jarg2; 
  if (arg1) (arg1)->error = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimChatroomKeyErrorInfo_1error_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimChatroomKeyErrorInfo *arg1 = (RcimChatroomKeyErrorInfo *) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimChatroomKeyErrorInfo **)&jarg1; 
  result = (enum RcimEngineError) ((arg1)->error);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimChatroomKeyErrorInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimChatroomKeyErrorInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimChatroomKeyErrorInfo *)new RcimChatroomKeyErrorInfo();
  *(RcimChatroomKeyErrorInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimChatroomKeyErrorInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimChatroomKeyErrorInfo *arg1 = (RcimChatroomKeyErrorInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimChatroomKeyErrorInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1session_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->session_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->session_id, (const char *)arg2);
    } else {
      arg1->session_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1session_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  result = (char *) ((arg1)->session_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1log_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  enum RcimLogType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  arg2 = (enum RcimLogType)jarg2; 
  if (arg1) (arg1)->log_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1log_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  enum RcimLogType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  result = (enum RcimLogType) ((arg1)->log_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1source_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  enum RcimLogSource arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  arg2 = (enum RcimLogSource)jarg2; 
  if (arg1) (arg1)->source = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1source_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  enum RcimLogSource result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  result = (enum RcimLogSource) ((arg1)->source);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1level_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  enum RcimLogLevel arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  arg2 = (enum RcimLogLevel)jarg2; 
  if (arg1) (arg1)->level = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1level_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  enum RcimLogLevel result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  result = (enum RcimLogLevel) ((arg1)->level);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1tag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->tag = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->tag, (const char *)arg2);
    } else {
      arg1->tag = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1tag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  result = (char *) ((arg1)->tag);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1content_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->content = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->content, (const char *)arg2);
    } else {
      arg1->content = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1content_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  result = (char *) ((arg1)->content);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1trace_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->trace_id = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1trace_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  result = (int64_t) ((arg1)->trace_id);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1create_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->create_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1create_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  result = (int64_t) ((arg1)->create_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1location_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->location = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->location, (const char *)arg2);
    } else {
      arg1->location = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimLogInfo_1location_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimLogInfo **)&jarg1; 
  result = (char *) ((arg1)->location);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimLogInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimLogInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimLogInfo *)new RcimLogInfo();
  *(RcimLogInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimLogInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimLogInfo *arg1 = (RcimLogInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimLogInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1log_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  enum RcimLogType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  arg2 = (enum RcimLogType)jarg2; 
  if (arg1) (arg1)->log_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1log_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  enum RcimLogType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  result = (enum RcimLogType) ((arg1)->log_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1source_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  enum RcimLogSource arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  arg2 = (enum RcimLogSource)jarg2; 
  if (arg1) (arg1)->source = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1source_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  enum RcimLogSource result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  result = (enum RcimLogSource) ((arg1)->source);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1level_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  enum RcimLogLevel arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  arg2 = (enum RcimLogLevel)jarg2; 
  if (arg1) (arg1)->level = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1level_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  enum RcimLogLevel result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  result = (enum RcimLogLevel) ((arg1)->level);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1tag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->tag = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->tag, (const char *)arg2);
    } else {
      arg1->tag = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1tag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  result = (char *) ((arg1)->tag);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1content_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->content = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->content, (const char *)arg2);
    } else {
      arg1->content = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1content_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  result = (char *) ((arg1)->content);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1trace_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->trace_id = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1trace_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  result = (int64_t) ((arg1)->trace_id);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1location_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->location = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->location, (const char *)arg2);
    } else {
      arg1->location = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimInsertLogInfo_1location_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  result = (char *) ((arg1)->location);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimInsertLogInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimInsertLogInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimInsertLogInfo *)new RcimInsertLogInfo();
  *(RcimInsertLogInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimInsertLogInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimInsertLogInfo *arg1 = (RcimInsertLogInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimInsertLogInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItem_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->id, (const char *)arg2);
    } else {
      arg1->id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItem_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  result = (char *) ((arg1)->id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItem_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->name, (const char *)arg2);
    } else {
      arg1->name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItem_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  result = (char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItem_1url_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->url = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->url, (const char *)arg2);
    } else {
      arg1->url = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItem_1url_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  result = (char *) ((arg1)->url);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItem_1menu_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  enum RcimPublicServiceMenuItemType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  arg2 = (enum RcimPublicServiceMenuItemType)jarg2; 
  if (arg1) (arg1)->menu_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItem_1menu_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  enum RcimPublicServiceMenuItemType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  result = (enum RcimPublicServiceMenuItemType) ((arg1)->menu_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItem_1sub_1menu_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  RcimPublicServiceMenuItem *arg2 = (RcimPublicServiceMenuItem *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  arg2 = *(RcimPublicServiceMenuItem **)&jarg2; 
  if (arg1) (arg1)->sub_menu_vec = (RcimPublicServiceMenuItem const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItem_1sub_1menu_1vec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  RcimPublicServiceMenuItem *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  result = (RcimPublicServiceMenuItem *) ((arg1)->sub_menu_vec);
  *(RcimPublicServiceMenuItem **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItem_1sub_1menu_1vec_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->sub_menu_vec_len = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceMenuItem_1sub_1menu_1vec_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  result = (int32_t) ((arg1)->sub_menu_vec_len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimPublicServiceMenuItem(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimPublicServiceMenuItem *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPublicServiceMenuItem *)new RcimPublicServiceMenuItem();
  *(RcimPublicServiceMenuItem **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimPublicServiceMenuItem(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimPublicServiceMenuItem *arg1 = (RcimPublicServiceMenuItem *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimPublicServiceMenuItem **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1target_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->target_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->target_id, (const char *)arg2);
    } else {
      arg1->target_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1target_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  result = (char *) ((arg1)->target_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1conv_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  enum RcimConversationType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  if (arg1) (arg1)->conv_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1conv_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  enum RcimConversationType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  result = (enum RcimConversationType) ((arg1)->conv_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->name, (const char *)arg2);
    } else {
      arg1->name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  result = (char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1portrait_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->portrait = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->portrait, (const char *)arg2);
    } else {
      arg1->portrait = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1portrait_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  result = (char *) ((arg1)->portrait);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1introduction_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->introduction = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->introduction, (const char *)arg2);
    } else {
      arg1->introduction = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1introduction_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  result = (char *) ((arg1)->introduction);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1is_1followed_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_followed = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1is_1followed_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  result = (bool) ((arg1)->is_followed);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1menu_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  RcimPublicServiceMenuItem *arg2 = (RcimPublicServiceMenuItem *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  arg2 = *(RcimPublicServiceMenuItem **)&jarg2; 
  if (arg1) (arg1)->menu_vec = (RcimPublicServiceMenuItem const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1menu_1vec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  RcimPublicServiceMenuItem *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  result = (RcimPublicServiceMenuItem *) ((arg1)->menu_vec);
  *(RcimPublicServiceMenuItem **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1menu_1vec_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->menu_vec_len = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1menu_1vec_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  result = (int32_t) ((arg1)->menu_vec_len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1is_1global_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_global = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimPublicServiceInfo_1is_1global_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  result = (bool) ((arg1)->is_global);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimPublicServiceInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimPublicServiceInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPublicServiceInfo *)new RcimPublicServiceInfo();
  *(RcimPublicServiceInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimPublicServiceInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimPublicServiceInfo *arg1 = (RcimPublicServiceInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimPublicServiceInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV5_1conversation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  RcimConversationIdentifier *arg2 = (RcimConversationIdentifier *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  arg2 = *(RcimConversationIdentifier **)&jarg2; 
  if (arg1) (arg1)->conversation = (RcimConversationIdentifier const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV5_1conversation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  RcimConversationIdentifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  result = (RcimConversationIdentifier *) ((arg1)->conversation);
  *(RcimConversationIdentifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV5_1message_1uid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->message_uid = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->message_uid, (const char *)arg2);
    } else {
      arg1->message_uid = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV5_1message_1uid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  result = (char *) ((arg1)->message_uid);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV5_1message_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->message_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV5_1message_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  result = (int64_t) ((arg1)->message_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV5_1read_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->read_count = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV5_1read_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  result = (uint32_t) ((arg1)->read_count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV5_1unread_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->unread_count = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV5_1unread_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  result = (uint32_t) ((arg1)->unread_count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV5_1total_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->total_count = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptInfoV5_1total_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  result = (uint32_t) ((arg1)->total_count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimReadReceiptInfoV5(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimReadReceiptInfoV5 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimReadReceiptInfoV5 *)new RcimReadReceiptInfoV5();
  *(RcimReadReceiptInfoV5 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimReadReceiptInfoV5(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimReadReceiptInfoV5 *arg1 = (RcimReadReceiptInfoV5 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimReadReceiptInfoV5 **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageIdentifier_1conversation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimMessageIdentifier *arg1 = (RcimMessageIdentifier *) 0 ;
  RcimConversationIdentifier *arg2 = (RcimConversationIdentifier *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimMessageIdentifier **)&jarg1; 
  arg2 = *(RcimConversationIdentifier **)&jarg2; 
  if (arg1) (arg1)->conversation = (RcimConversationIdentifier const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageIdentifier_1conversation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimMessageIdentifier *arg1 = (RcimMessageIdentifier *) 0 ;
  RcimConversationIdentifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageIdentifier **)&jarg1; 
  result = (RcimConversationIdentifier *) ((arg1)->conversation);
  *(RcimConversationIdentifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageIdentifier_1message_1uid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimMessageIdentifier *arg1 = (RcimMessageIdentifier *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageIdentifier **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->message_uid = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->message_uid, (const char *)arg2);
    } else {
      arg1->message_uid = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimMessageIdentifier_1message_1uid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimMessageIdentifier *arg1 = (RcimMessageIdentifier *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageIdentifier **)&jarg1; 
  result = (char *) ((arg1)->message_uid);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimMessageIdentifier(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimMessageIdentifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageIdentifier *)new RcimMessageIdentifier();
  *(RcimMessageIdentifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimMessageIdentifier(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimMessageIdentifier *arg1 = (RcimMessageIdentifier *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimMessageIdentifier **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1conversation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  RcimConversationIdentifier *arg2 = (RcimConversationIdentifier *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  arg2 = *(RcimConversationIdentifier **)&jarg2; 
  if (arg1) (arg1)->conversation = (RcimConversationIdentifier const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1conversation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  RcimConversationIdentifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  result = (RcimConversationIdentifier *) ((arg1)->conversation);
  *(RcimConversationIdentifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1message_1uid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->message_uid = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->message_uid, (const char *)arg2);
    } else {
      arg1->message_uid = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1message_1uid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  result = (char *) ((arg1)->message_uid);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1respond_1user_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  RcimReadReceiptUserInfo *arg2 = (RcimReadReceiptUserInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  arg2 = *(RcimReadReceiptUserInfo **)&jarg2; 
  if (arg1) (arg1)->respond_user_vec = (RcimReadReceiptUserInfo const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1respond_1user_1vec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  RcimReadReceiptUserInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  result = (RcimReadReceiptUserInfo *) ((arg1)->respond_user_vec);
  *(RcimReadReceiptUserInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1respond_1user_1vec_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->respond_user_vec_len = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1respond_1user_1vec_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  result = (int32_t) ((arg1)->respond_user_vec_len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1message_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->message_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1message_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  result = (int64_t) ((arg1)->message_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1read_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->read_count = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1read_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  result = (uint32_t) ((arg1)->read_count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1unread_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->unread_count = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1unread_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  result = (uint32_t) ((arg1)->unread_count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1total_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->total_count = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimReadReceiptNotifyV5_1total_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  result = (uint32_t) ((arg1)->total_count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimReadReceiptNotifyV5(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimReadReceiptNotifyV5 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimReadReceiptNotifyV5 *)new RcimReadReceiptNotifyV5();
  *(RcimReadReceiptNotifyV5 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimReadReceiptNotifyV5(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimReadReceiptNotifyV5 *arg1 = (RcimReadReceiptNotifyV5 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimReadReceiptNotifyV5 **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcConfig_1log_1server_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimRtcConfig *arg1 = (RcimRtcConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->log_server = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->log_server, (const char *)arg2);
    } else {
      arg1->log_server = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcConfig_1log_1server_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimRtcConfig *arg1 = (RcimRtcConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcConfig **)&jarg1; 
  result = (char *) ((arg1)->log_server);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcConfig_1data_1center_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimRtcConfig *arg1 = (RcimRtcConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->data_center = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->data_center, (const char *)arg2);
    } else {
      arg1->data_center = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcConfig_1data_1center_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimRtcConfig *arg1 = (RcimRtcConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcConfig **)&jarg1; 
  result = (char *) ((arg1)->data_center);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcConfig_1jwt_1token_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimRtcConfig *arg1 = (RcimRtcConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->jwt_token = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->jwt_token, (const char *)arg2);
    } else {
      arg1->jwt_token = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcConfig_1jwt_1token_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimRtcConfig *arg1 = (RcimRtcConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcConfig **)&jarg1; 
  result = (char *) ((arg1)->jwt_token);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcConfig_1open_1gzip_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimRtcConfig *arg1 = (RcimRtcConfig *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcConfig **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->open_gzip = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcConfig_1open_1gzip_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimRtcConfig *arg1 = (RcimRtcConfig *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcConfig **)&jarg1; 
  result = (bool) ((arg1)->open_gzip);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcConfig_1voip_1call_1info_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimRtcConfig *arg1 = (RcimRtcConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcConfig **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->voip_call_info = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->voip_call_info, (const char *)arg2);
    } else {
      arg1->voip_call_info = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcConfig_1voip_1call_1info_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimRtcConfig *arg1 = (RcimRtcConfig *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcConfig **)&jarg1; 
  result = (char *) ((arg1)->voip_call_info);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimRtcConfig(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimRtcConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimRtcConfig *)new RcimRtcConfig();
  *(RcimRtcConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimRtcConfig(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimRtcConfig *arg1 = (RcimRtcConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimRtcConfig **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcKvInfo_1key_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimRtcKvInfo *arg1 = (RcimRtcKvInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcKvInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->key = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->key, (const char *)arg2);
    } else {
      arg1->key = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcKvInfo_1key_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimRtcKvInfo *arg1 = (RcimRtcKvInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcKvInfo **)&jarg1; 
  result = (char *) ((arg1)->key);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcKvInfo_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimRtcKvInfo *arg1 = (RcimRtcKvInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcKvInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->value = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->value, (const char *)arg2);
    } else {
      arg1->value = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimRtcKvInfo_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimRtcKvInfo *arg1 = (RcimRtcKvInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimRtcKvInfo **)&jarg1; 
  result = (char *) ((arg1)->value);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimRtcKvInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimRtcKvInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimRtcKvInfo *)new RcimRtcKvInfo();
  *(RcimRtcKvInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimRtcKvInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimRtcKvInfo *arg1 = (RcimRtcKvInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimRtcKvInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupExtraInfo_1key_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupExtraInfo *arg1 = (RcimGroupExtraInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupExtraInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->key = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->key, (const char *)arg2);
    } else {
      arg1->key = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupExtraInfo_1key_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupExtraInfo *arg1 = (RcimGroupExtraInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupExtraInfo **)&jarg1; 
  result = (char *) ((arg1)->key);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupExtraInfo_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupExtraInfo *arg1 = (RcimGroupExtraInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupExtraInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->value = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->value, (const char *)arg2);
    } else {
      arg1->value = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupExtraInfo_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupExtraInfo *arg1 = (RcimGroupExtraInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupExtraInfo **)&jarg1; 
  result = (char *) ((arg1)->value);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimGroupExtraInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimGroupExtraInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupExtraInfo *)new RcimGroupExtraInfo();
  *(RcimGroupExtraInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimGroupExtraInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimGroupExtraInfo *arg1 = (RcimGroupExtraInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimGroupExtraInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->name, (const char *)arg2);
    } else {
      arg1->name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1portrait_1url_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->portrait_url = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->portrait_url, (const char *)arg2);
    } else {
      arg1->portrait_url = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1portrait_1url_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (char *) ((arg1)->portrait_url);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1introduction_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->introduction = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->introduction, (const char *)arg2);
    } else {
      arg1->introduction = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1introduction_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (char *) ((arg1)->introduction);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1announcement_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->announcement = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->announcement, (const char *)arg2);
    } else {
      arg1->announcement = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1announcement_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (char *) ((arg1)->announcement);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1join_1perm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupJoinPermission arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = (enum RcimGroupJoinPermission)jarg2; 
  if (arg1) (arg1)->join_perm = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1join_1perm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupJoinPermission result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (enum RcimGroupJoinPermission) ((arg1)->join_perm);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1remove_1perm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupOperationPermission arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = (enum RcimGroupOperationPermission)jarg2; 
  if (arg1) (arg1)->remove_perm = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1remove_1perm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupOperationPermission result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (enum RcimGroupOperationPermission) ((arg1)->remove_perm);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1invite_1member_1perm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupOperationPermission arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = (enum RcimGroupOperationPermission)jarg2; 
  if (arg1) (arg1)->invite_member_perm = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1invite_1member_1perm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupOperationPermission result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (enum RcimGroupOperationPermission) ((arg1)->invite_member_perm);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1invite_1handle_1perm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupInviteHandlePermission arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = (enum RcimGroupInviteHandlePermission)jarg2; 
  if (arg1) (arg1)->invite_handle_perm = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1invite_1handle_1perm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupInviteHandlePermission result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (enum RcimGroupInviteHandlePermission) ((arg1)->invite_handle_perm);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1group_1info_1edit_1perm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupOperationPermission arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = (enum RcimGroupOperationPermission)jarg2; 
  if (arg1) (arg1)->group_info_edit_perm = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1group_1info_1edit_1perm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupOperationPermission result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (enum RcimGroupOperationPermission) ((arg1)->group_info_edit_perm);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1member_1info_1edit_1perm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupMemberInfoEditPermission arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = (enum RcimGroupMemberInfoEditPermission)jarg2; 
  if (arg1) (arg1)->member_info_edit_perm = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1member_1info_1edit_1perm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupMemberInfoEditPermission result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (enum RcimGroupMemberInfoEditPermission) ((arg1)->member_info_edit_perm);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1member_1mute_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupMuteType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = (enum RcimGroupMuteType)jarg2; 
  if (arg1) (arg1)->member_mute_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1member_1mute_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  enum RcimGroupMuteType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (enum RcimGroupMuteType) ((arg1)->member_mute_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1ext_1info_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  RcimGroupExtraInfo *arg2 = (RcimGroupExtraInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = *(RcimGroupExtraInfo **)&jarg2; 
  if (arg1) (arg1)->ext_info_vec = (RcimGroupExtraInfo const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1ext_1info_1vec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  RcimGroupExtraInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (RcimGroupExtraInfo *) ((arg1)->ext_info_vec);
  *(RcimGroupExtraInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1ext_1info_1vec_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  if (arg1) (arg1)->ext_info_vec_len = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupOperationInfo_1ext_1info_1vec_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  result = (int32_t) ((arg1)->ext_info_vec_len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimGroupOperationInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimGroupOperationInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupOperationInfo *)new RcimGroupOperationInfo();
  *(RcimGroupOperationInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimGroupOperationInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimGroupOperationInfo *arg1 = (RcimGroupOperationInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimGroupOperationInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1group_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->group_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->group_id, (const char *)arg2);
    } else {
      arg1->group_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1group_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  result = (char *) ((arg1)->group_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1create_1user_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->create_user_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->create_user_id, (const char *)arg2);
    } else {
      arg1->create_user_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1create_1user_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  result = (char *) ((arg1)->create_user_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1owner_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->owner_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->owner_id, (const char *)arg2);
    } else {
      arg1->owner_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1owner_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  result = (char *) ((arg1)->owner_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1member_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->member_count = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1member_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  result = (uint32_t) ((arg1)->member_count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1role_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  enum RcimGroupMemberRole arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  arg2 = (enum RcimGroupMemberRole)jarg2; 
  if (arg1) (arg1)->role = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1role_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  enum RcimGroupMemberRole result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  result = (enum RcimGroupMemberRole) ((arg1)->role);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1join_1status_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  enum RcimGroupMemberJoinStatus arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  arg2 = (enum RcimGroupMemberJoinStatus)jarg2; 
  if (arg1) (arg1)->join_status = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1join_1status_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  enum RcimGroupMemberJoinStatus result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  result = (enum RcimGroupMemberJoinStatus) ((arg1)->join_status);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1remark_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->remark = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->remark, (const char *)arg2);
    } else {
      arg1->remark = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1remark_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  result = (char *) ((arg1)->remark);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1create_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->create_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1create_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  result = (int64_t) ((arg1)->create_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1join_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->join_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1join_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  result = (int64_t) ((arg1)->join_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1operation_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->operation_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1operation_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  result = (int64_t) ((arg1)->operation_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1operation_1info_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  RcimGroupOperationInfo *arg2 = (RcimGroupOperationInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  arg2 = *(RcimGroupOperationInfo **)&jarg2; 
  if (arg1) (arg1)->operation_info = (RcimGroupOperationInfo const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupInfo_1operation_1info_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  RcimGroupOperationInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  result = (RcimGroupOperationInfo *) ((arg1)->operation_info);
  *(RcimGroupOperationInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimGroupInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimGroupInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupInfo *)new RcimGroupInfo();
  *(RcimGroupInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimGroupInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimGroupInfo *arg1 = (RcimGroupInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimGroupInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1user_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->user_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->user_id, (const char *)arg2);
    } else {
      arg1->user_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1user_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  result = (char *) ((arg1)->user_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->name, (const char *)arg2);
    } else {
      arg1->name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  result = (char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1nickname_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->nickname = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->nickname, (const char *)arg2);
    } else {
      arg1->nickname = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1nickname_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  result = (char *) ((arg1)->nickname);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1portrait_1url_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->portrait_url = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->portrait_url, (const char *)arg2);
    } else {
      arg1->portrait_url = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1portrait_1url_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  result = (char *) ((arg1)->portrait_url);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1join_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->join_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1join_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  result = (int64_t) ((arg1)->join_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1follow_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->follow_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1follow_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  result = (int64_t) ((arg1)->follow_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1role_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  enum RcimGroupMemberRole arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  arg2 = (enum RcimGroupMemberRole)jarg2; 
  if (arg1) (arg1)->role = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1role_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  enum RcimGroupMemberRole result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  result = (enum RcimGroupMemberRole) ((arg1)->role);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1extra_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->extra = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->extra, (const char *)arg2);
    } else {
      arg1->extra = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1extra_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  result = (char *) ((arg1)->extra);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1is_1mute_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->is_mute = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1is_1mute_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  result = (bool) ((arg1)->is_mute);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1mute_1expire_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->mute_expire_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupMemberInfo_1mute_1expire_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  result = (int64_t) ((arg1)->mute_expire_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimGroupMemberInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimGroupMemberInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupMemberInfo *)new RcimGroupMemberInfo();
  *(RcimGroupMemberInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimGroupMemberInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimGroupMemberInfo *arg1 = (RcimGroupMemberInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimGroupMemberInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupQuitConfig_1remove_1mute_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimGroupQuitConfig *arg1 = (RcimGroupQuitConfig *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupQuitConfig **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->remove_mute = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupQuitConfig_1remove_1mute_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimGroupQuitConfig *arg1 = (RcimGroupQuitConfig *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupQuitConfig **)&jarg1; 
  result = (bool) ((arg1)->remove_mute);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupQuitConfig_1remove_1white_1list_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimGroupQuitConfig *arg1 = (RcimGroupQuitConfig *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupQuitConfig **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->remove_white_list = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupQuitConfig_1remove_1white_1list_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimGroupQuitConfig *arg1 = (RcimGroupQuitConfig *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupQuitConfig **)&jarg1; 
  result = (bool) ((arg1)->remove_white_list);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupQuitConfig_1remove_1favorite_1members_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  RcimGroupQuitConfig *arg1 = (RcimGroupQuitConfig *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupQuitConfig **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->remove_favorite_members = arg2;
}


SWIGEXPORT jboolean JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupQuitConfig_1remove_1favorite_1members_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  RcimGroupQuitConfig *arg1 = (RcimGroupQuitConfig *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupQuitConfig **)&jarg1; 
  result = (bool) ((arg1)->remove_favorite_members);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimGroupQuitConfig(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimGroupQuitConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupQuitConfig *)new RcimGroupQuitConfig();
  *(RcimGroupQuitConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimGroupQuitConfig(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimGroupQuitConfig *arg1 = (RcimGroupQuitConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimGroupQuitConfig **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupFavoriteMemberInfo_1user_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupFavoriteMemberInfo *arg1 = (RcimGroupFavoriteMemberInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupFavoriteMemberInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->user_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->user_id, (const char *)arg2);
    } else {
      arg1->user_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupFavoriteMemberInfo_1user_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupFavoriteMemberInfo *arg1 = (RcimGroupFavoriteMemberInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupFavoriteMemberInfo **)&jarg1; 
  result = (char *) ((arg1)->user_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupFavoriteMemberInfo_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimGroupFavoriteMemberInfo *arg1 = (RcimGroupFavoriteMemberInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupFavoriteMemberInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupFavoriteMemberInfo_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupFavoriteMemberInfo *arg1 = (RcimGroupFavoriteMemberInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupFavoriteMemberInfo **)&jarg1; 
  result = (int64_t) ((arg1)->time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimGroupFavoriteMemberInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimGroupFavoriteMemberInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupFavoriteMemberInfo *)new RcimGroupFavoriteMemberInfo();
  *(RcimGroupFavoriteMemberInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimGroupFavoriteMemberInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimGroupFavoriteMemberInfo *arg1 = (RcimGroupFavoriteMemberInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimGroupFavoriteMemberInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1group_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->group_id = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->group_id, (const char *)arg2);
    } else {
      arg1->group_id = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1group_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  result = (char *) ((arg1)->group_id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1join_1user_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  RcimGroupMemberInfo *arg2 = (RcimGroupMemberInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  arg2 = *(RcimGroupMemberInfo **)&jarg2; 
  if (arg1) (arg1)->join_user = (RcimGroupMemberInfo const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1join_1user_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  RcimGroupMemberInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  result = (RcimGroupMemberInfo *) ((arg1)->join_user);
  *(RcimGroupMemberInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1inviter_1user_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  RcimGroupMemberInfo *arg2 = (RcimGroupMemberInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  arg2 = *(RcimGroupMemberInfo **)&jarg2; 
  if (arg1) (arg1)->inviter_user = (RcimGroupMemberInfo const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1inviter_1user_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  RcimGroupMemberInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  result = (RcimGroupMemberInfo *) ((arg1)->inviter_user);
  *(RcimGroupMemberInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1approver_1user_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  RcimGroupMemberInfo *arg2 = (RcimGroupMemberInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  arg2 = *(RcimGroupMemberInfo **)&jarg2; 
  if (arg1) (arg1)->approver_user = (RcimGroupMemberInfo const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1approver_1user_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  RcimGroupMemberInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  result = (RcimGroupMemberInfo *) ((arg1)->approver_user);
  *(RcimGroupMemberInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1request_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  enum RcimGroupRequestType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  arg2 = (enum RcimGroupRequestType)jarg2; 
  if (arg1) (arg1)->request_type = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1request_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  enum RcimGroupRequestType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  result = (enum RcimGroupRequestType) ((arg1)->request_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1status_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  enum RcimGroupRequestStatus arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  arg2 = (enum RcimGroupRequestStatus)jarg2; 
  if (arg1) (arg1)->status = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1status_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  enum RcimGroupRequestStatus result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  result = (enum RcimGroupRequestStatus) ((arg1)->status);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1direction_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  enum RcimGroupRequestDirection arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  arg2 = (enum RcimGroupRequestDirection)jarg2; 
  if (arg1) (arg1)->direction = arg2;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1direction_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  enum RcimGroupRequestDirection result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  result = (enum RcimGroupRequestDirection) ((arg1)->direction);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1operation_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  int64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->operation_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1operation_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  int64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  result = (int64_t) ((arg1)->operation_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1remark_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->remark = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->remark, (const char *)arg2);
    } else {
      arg1->remark = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_RcimGroupRequestInfo_1remark_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  result = (char *) ((arg1)->remark);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_new_1RcimGroupRequestInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimGroupRequestInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimGroupRequestInfo *)new RcimGroupRequestInfo();
  *(RcimGroupRequestInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_delete_1RcimGroupRequestInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RcimGroupRequestInfo *arg1 = (RcimGroupRequestInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimGroupRequestInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1create_1engine_1builder(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  RcimEngineBuilder **arg2 = (RcimEngineBuilder **) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  arg2 = *(RcimEngineBuilder ***)&jarg2; 
  result = (enum RcimEngineError)rcim_create_engine_builder(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1destroy_1engine_1builder(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  RcimEngineBuilder *arg1 = (RcimEngineBuilder *) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilder **)&jarg1; 
  result = (enum RcimEngineError)rcim_destroy_engine_builder(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1builder_1set_1cloud_1type(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  RcimEngineBuilder *arg1 = (RcimEngineBuilder *) 0 ;
  enum RcimCloudType arg2 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilder **)&jarg1; 
  arg2 = (enum RcimCloudType)jarg2; 
  result = (enum RcimEngineError)rcim_engine_builder_set_cloud_type(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1builder_1set_1db_1encrypted(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2) {
  jint jresult = 0 ;
  RcimEngineBuilder *arg1 = (RcimEngineBuilder *) 0 ;
  bool arg2 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilder **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (enum RcimEngineError)rcim_engine_builder_set_db_encrypted(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1builder_1set_1enable_1group_1call(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2) {
  jint jresult = 0 ;
  RcimEngineBuilder *arg1 = (RcimEngineBuilder *) 0 ;
  bool arg2 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilder **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (enum RcimEngineError)rcim_engine_builder_set_enable_group_call(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1builder_1set_1enable_1reconnect_1kick(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2) {
  jint jresult = 0 ;
  RcimEngineBuilder *arg1 = (RcimEngineBuilder *) 0 ;
  bool arg2 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilder **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (enum RcimEngineError)rcim_engine_builder_set_enable_reconnect_kick(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1builder_1set_1store_1path(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
  jint jresult = 0 ;
  RcimEngineBuilder *arg1 = (RcimEngineBuilder *) 0 ;
  char *arg2 = (char *) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilder **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (enum RcimEngineError)rcim_engine_builder_set_store_path(arg1,(char const *)arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1builder_1set_1network_1env(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
  jint jresult = 0 ;
  RcimEngineBuilder *arg1 = (RcimEngineBuilder *) 0 ;
  char *arg2 = (char *) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilder **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (enum RcimEngineError)rcim_engine_builder_set_network_env(arg1,(char const *)arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1builder_1set_1file_1path(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
  jint jresult = 0 ;
  RcimEngineBuilder *arg1 = (RcimEngineBuilder *) 0 ;
  char *arg2 = (char *) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilder **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (enum RcimEngineError)rcim_engine_builder_set_file_path(arg1,(char const *)arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1builder_1set_1navi_1server(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  RcimEngineBuilder *arg1 = (RcimEngineBuilder *) 0 ;
  char **arg2 = (char **) 0 ;
  int32_t arg3 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilder **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  arg3 = (int32_t)jarg3; 
  result = (enum RcimEngineError)rcim_engine_builder_set_navi_server(arg1,(char const *const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1builder_1set_1statistic_1server(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
  jint jresult = 0 ;
  RcimEngineBuilder *arg1 = (RcimEngineBuilder *) 0 ;
  char *arg2 = (char *) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilder **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (enum RcimEngineError)rcim_engine_builder_set_statistic_server(arg1,(char const *)arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1builder_1set_1area_1code(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  RcimEngineBuilder *arg1 = (RcimEngineBuilder *) 0 ;
  enum RcimAreaCode arg2 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilder **)&jarg1; 
  arg2 = (enum RcimAreaCode)jarg2; 
  result = (enum RcimEngineError)rcim_engine_builder_set_area_code(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1builder_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  RcimEngineBuilder *arg1 = (RcimEngineBuilder *) 0 ;
  RcimEngineSync **arg2 = (RcimEngineSync **) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineBuilder **)&jarg1; 
  arg2 = *(RcimEngineSync ***)&jarg2; 
  result = (enum RcimEngineError)rcim_engine_builder_build(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1destroy_1engine(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  result = (enum RcimEngineError)rcim_destroy_engine(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1database_1status_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimDatabaseStatusLsr arg3 = (RcimDatabaseStatusLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimDatabaseStatusLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_database_status_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1sdk_1version(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char **arg2 = (char **) 0 ;
  char *temp2 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  {
    temp2 = NULL;
    arg2 = &temp2;
  }
  result = (enum RcimEngineError)rcim_engine_get_sdk_version((RcimEngineSync const *)arg1,arg2);
  jresult = (jint)result; 
  {
    if (*arg2) {
      jresult = SWIG_FromCharPtr(*arg2);
    } else {
      jresult = SWIG_Py_Void();
    }
  }
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1device_1id(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (enum RcimEngineError)rcim_engine_set_device_id((RcimEngineSync const *)arg1,(char const *)arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1push_1token(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimPushTokenInfo *arg2 = (RcimPushTokenInfo *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimEngineErrorCb arg5 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimPushTokenInfo **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimEngineErrorCb *)&jarg5; 
  rcim_engine_set_push_token((RcimEngineSync const *)arg1,(RcimPushTokenInfo const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1delta_1time(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int64_t *arg2 = (int64_t *) 0 ;
  int64_t temp2 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  {
    temp2 = 0;
    arg2 = &temp2;
  }
  result = (enum RcimEngineError)rcim_engine_get_delta_time((RcimEngineSync const *)arg1,arg2);
  jresult = (jint)result; 
  {
    jresult = SWIG_From_long_long(*arg2);
  }
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1user_1id(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char **arg2 = (char **) 0 ;
  char *temp2 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  {
    temp2 = NULL;
    arg2 = &temp2;
  }
  result = (enum RcimEngineError)rcim_engine_get_user_id((RcimEngineSync const *)arg1,arg2);
  jresult = (jint)result; 
  {
    if (*arg2) {
      jresult = SWIG_FromCharPtr(*arg2);
    } else {
      jresult = SWIG_Py_Void();
    }
  }
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1connection_1status_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimConnectionStatusLsr arg3 = (RcimConnectionStatusLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimConnectionStatusLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_connection_status_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1connection_1status(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConnectionStatus *arg2 = (enum RcimConnectionStatus *) 0 ;
  enum RcimConnectionStatus temp2 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  {
    temp2 = (enum RcimConnectionStatus)0;
    arg2 = &temp2;
  }
  result = (enum RcimEngineError)rcim_engine_get_connection_status((RcimEngineSync const *)arg1,arg2);
  jresult = (jint)result; 
  {
    jresult = SWIG_From_int(*arg2);
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1connect(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimConnectCb arg5 = (RcimConnectCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimConnectCb *)&jarg5; 
  rcim_engine_connect((RcimEngineSync const *)arg1,(char const *)arg2,arg3,(void const *)arg4,arg5);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1disconnect(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimDisconnectMode arg2 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimDisconnectMode)jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_disconnect((RcimEngineSync const *)arg1,arg2,(void const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1notify_1app_1state_1changed(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimAppState arg2 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimAppState)jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_notify_app_state_changed((RcimEngineSync const *)arg1,arg2,(void const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1notify_1network_1changed(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimNetworkType arg2 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimNetworkType)jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_notify_network_changed((RcimEngineSync const *)arg1,arg2,(void const *)arg3,arg4);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1message_1received_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimMessageReceivedLsr arg3 = (RcimMessageReceivedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimMessageReceivedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_message_received_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1offline_1message_1sync_1completed_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimOfflineMessageSyncCompletedLsr arg3 = (RcimOfflineMessageSyncCompletedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimOfflineMessageSyncCompletedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_offline_message_sync_completed_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1message_1searchable_1words_1callback_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimMessageSearchableWordsCbLsr arg3 = (RcimMessageSearchableWordsCbLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimMessageSearchableWordsCbLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_message_searchable_words_callback_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1sight_1compress_1callback_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimSightCompressCbLsr arg3 = (RcimSightCompressCbLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimSightCompressCbLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_sight_compress_callback_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1message_1recalled_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimRecallMessageLsr arg3 = (RcimRecallMessageLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimRecallMessageLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_message_recalled_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1message_1blocked_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimMessageBlockedLsr arg3 = (RcimMessageBlockedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimMessageBlockedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_message_blocked_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1send_1message(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimMessageBox *arg2 = (RcimMessageBox *) 0 ;
  RcimSendMessageOption *arg3 = (RcimSendMessageOption *) 0 ;
  void *arg4 = (void *) 0 ;
  RcimCodeMessageCb arg5 = (RcimCodeMessageCb) 0 ;
  RcimMessageCb arg6 = (RcimMessageCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimMessageBox **)&jarg2; 
  arg3 = *(RcimSendMessageOption **)&jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimCodeMessageCb *)&jarg5; 
  arg6 = *(RcimMessageCb *)&jarg6; 
  rcim_engine_send_message((RcimEngineSync const *)arg1,(RcimMessageBox const *)arg2,(RcimSendMessageOption const *)arg3,(void const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1send_1read_1receipt_1message(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int64_t arg5 ;
  void *arg6 = (void *) 0 ;
  RcimCodeMessageCb arg7 = (RcimCodeMessageCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = (int64_t)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimCodeMessageCb *)&jarg7; 
  rcim_engine_send_read_receipt_message((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(void const *)arg6,arg7);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1send_1read_1receipt_1request(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_send_read_receipt_request((RcimEngineSync const *)arg1,(char const *)arg2,(void const *)arg3,arg4);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1send_1read_1receipt_1response(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_, jint jarg6, jlong jarg7, jlong jarg8) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  RcimSendReadReceiptResponseMessageData *arg5 = (RcimSendReadReceiptResponseMessageData *) 0 ;
  int32_t arg6 ;
  void *arg7 = (void *) 0 ;
  RcimGetMessageListCb arg8 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(RcimSendReadReceiptResponseMessageData **)&jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = *(void **)&jarg7; 
  arg8 = *(RcimGetMessageListCb *)&jarg8; 
  rcim_engine_send_read_receipt_response((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(RcimSendReadReceiptResponseMessageData const *)arg5,arg6,(void const *)arg7,arg8);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1read_1receipt_1received_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimMessageNotifyLsr arg3 = (RcimMessageNotifyLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimMessageNotifyLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_read_receipt_received_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1read_1receipt_1request_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimReadReceiptRequestLsr arg3 = (RcimReadReceiptRequestLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimReadReceiptRequestLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_read_receipt_request_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1read_1receipt_1response_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimReadReceiptResponseLsr arg3 = (RcimReadReceiptResponseLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimReadReceiptResponseLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_read_receipt_response_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1send_1read_1receipt_1response_1v2(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jint jarg6, jlong jarg7, jlong jarg8) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char **arg5 = (char **) 0 ;
  int32_t arg6 ;
  void *arg7 = (void *) 0 ;
  RcimGetMessageListCb arg8 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(char ***)&jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = *(void **)&jarg7; 
  arg8 = *(RcimGetMessageListCb *)&jarg8; 
  rcim_engine_send_read_receipt_response_v2((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *const *)arg5,arg6,(void const *)arg7,arg8);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1read_1receipt_1v2_1readers(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *arg6 = (void *) 0 ;
  RcimGetReadReceiptV2ReaderListCb arg7 = (RcimGetReadReceiptV2ReaderListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimGetReadReceiptV2ReaderListCb *)&jarg7; 
  rcim_engine_get_read_receipt_v2_readers((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(void const *)arg6,arg7);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1read_1receipt_1response_1v2_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimReadReceiptResponseV2Lsr arg3 = (RcimReadReceiptResponseV2Lsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimReadReceiptResponseV2Lsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_read_receipt_response_v2_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1cancel_1send_1media_1message(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int64_t arg2 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_cancel_send_media_message((RcimEngineSync const *)arg1,arg2,(void const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1send_1media_1message(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jlong jarg8) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimMessageBox *arg2 = (RcimMessageBox *) 0 ;
  RcimSendMessageOption *arg3 = (RcimSendMessageOption *) 0 ;
  void *arg4 = (void *) 0 ;
  RcimCodeMessageCb arg5 = (RcimCodeMessageCb) 0 ;
  RcimMessageCb arg6 = (RcimMessageCb) 0 ;
  RcimSendMessageOnProgressCb arg7 = (RcimSendMessageOnProgressCb) 0 ;
  RcimMediaMessageHandlerCb arg8 = (RcimMediaMessageHandlerCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimMessageBox **)&jarg2; 
  arg3 = *(RcimSendMessageOption **)&jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimCodeMessageCb *)&jarg5; 
  arg6 = *(RcimMessageCb *)&jarg6; 
  arg7 = *(RcimSendMessageOnProgressCb *)&jarg7; 
  arg8 = *(RcimMediaMessageHandlerCb *)&jarg8; 
  rcim_engine_send_media_message((RcimEngineSync const *)arg1,(RcimMessageBox const *)arg2,(RcimSendMessageOption const *)arg3,(void const *)arg4,arg5,arg6,arg7,arg8);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1download_1media_1message(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int64_t arg2 ;
  void *arg3 = (void *) 0 ;
  RcimDownloadMediaCb arg4 = (RcimDownloadMediaCb) 0 ;
  RcimDownloadMessageProgressCb arg5 = (RcimDownloadMessageProgressCb) 0 ;
  RcimMediaMessageHandlerCb arg6 = (RcimMediaMessageHandlerCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimDownloadMediaCb *)&jarg4; 
  arg5 = *(RcimDownloadMessageProgressCb *)&jarg5; 
  arg6 = *(RcimMediaMessageHandlerCb *)&jarg6; 
  rcim_engine_download_media_message((RcimEngineSync const *)arg1,arg2,(void const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1cancel_1download_1media_1message(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int64_t arg2 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_cancel_download_media_message((RcimEngineSync const *)arg1,arg2,(void const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1pause_1download_1media_1message(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int64_t arg2 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_pause_download_media_message((RcimEngineSync const *)arg1,arg2,(void const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1download_1file_1with_1unique_1id(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = (void *) 0 ;
  RcimDownloadMediaCb arg6 = (RcimDownloadMediaCb) 0 ;
  RcimDownloadFileProgressCb arg7 = (RcimDownloadFileProgressCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimDownloadMediaCb *)&jarg6; 
  arg7 = *(RcimDownloadFileProgressCb *)&jarg7; 
  rcim_engine_download_file_with_unique_id((RcimEngineSync const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(void const *)arg5,arg6,arg7);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1cancel_1download_1file(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_cancel_download_file((RcimEngineSync const *)arg1,(char const *)arg2,(void const *)arg3,arg4);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1pause_1download_1file(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_pause_download_file((RcimEngineSync const *)arg1,(char const *)arg2,(void const *)arg3,arg4);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1recall_1message(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimMessageBox *arg2 = (RcimMessageBox *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimRecallMessageCb arg4 = (RcimRecallMessageCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimMessageBox **)&jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimRecallMessageCb *)&jarg4; 
  rcim_engine_recall_message((RcimEngineSync const *)arg1,(RcimMessageBox const *)arg2,(void const *)arg3,arg4);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1register_1message_1types(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimMessageType *arg2 = (RcimMessageType *) 0 ;
  int32_t arg3 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimMessageType **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  result = (enum RcimEngineError)rcim_engine_register_message_types((RcimEngineSync const *)arg1,(RcimMessageType const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1message_1by_1uid(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimCodeMessageCb arg4 = (RcimCodeMessageCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimCodeMessageCb *)&jarg4; 
  rcim_engine_get_local_message_by_uid((RcimEngineSync const *)arg1,(char const *)arg2,(void const *)arg3,arg4);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1message_1by_1id(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int64_t arg2 ;
  void *arg3 = (void *) 0 ;
  RcimCodeMessageCb arg4 = (RcimCodeMessageCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimCodeMessageCb *)&jarg4; 
  rcim_engine_get_local_message_by_id((RcimEngineSync const *)arg1,arg2,(void const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1history_1messages_1by_1time(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jint jarg9, jlong jarg10, jlong jarg11) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char **arg5 = (char **) 0 ;
  int32_t arg6 ;
  int64_t arg7 ;
  int32_t arg8 ;
  int32_t arg9 ;
  void *arg10 = (void *) 0 ;
  RcimGetMessageListCb arg11 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(char ***)&jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = (int64_t)jarg7; 
  arg8 = (int32_t)jarg8; 
  arg9 = (int32_t)jarg9; 
  arg10 = *(void **)&jarg10; 
  arg11 = *(RcimGetMessageListCb *)&jarg11; 
  rcim_engine_get_local_history_messages_by_time((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *const *)arg5,arg6,arg7,arg8,arg9,(void const *)arg10,arg11);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1history_1messages_1by_1senders(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jint jarg9, jlong jarg10, jint jarg11, jlong jarg12, jlong jarg13) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char **arg5 = (char **) 0 ;
  int32_t arg6 ;
  char **arg7 = (char **) 0 ;
  int32_t arg8 ;
  int32_t arg9 ;
  int64_t arg10 ;
  enum RcimOrder arg11 ;
  void *arg12 = (void *) 0 ;
  RcimGetMessageListCb arg13 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(char ***)&jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = *(char ***)&jarg7; 
  arg8 = (int32_t)jarg8; 
  arg9 = (int32_t)jarg9; 
  arg10 = (int64_t)jarg10; 
  arg11 = (enum RcimOrder)jarg11; 
  arg12 = *(void **)&jarg12; 
  arg13 = *(RcimGetMessageListCb *)&jarg13; 
  rcim_engine_get_local_history_messages_by_senders((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *const *)arg5,arg6,(char const *const *)arg7,arg8,arg9,arg10,arg11,(void const *)arg12,arg13);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1history_1messages_1by_1id(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jint jarg9, jlong jarg10, jlong jarg11) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char **arg5 = (char **) 0 ;
  int32_t arg6 ;
  int64_t arg7 ;
  int32_t arg8 ;
  int32_t arg9 ;
  void *arg10 = (void *) 0 ;
  RcimGetMessageListCb arg11 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(char ***)&jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = (int64_t)jarg7; 
  arg8 = (int32_t)jarg8; 
  arg9 = (int32_t)jarg9; 
  arg10 = *(void **)&jarg10; 
  arg11 = *(RcimGetMessageListCb *)&jarg11; 
  rcim_engine_get_local_history_messages_by_id((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *const *)arg5,arg6,arg7,arg8,arg9,(void const *)arg10,arg11);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1messages_1by_1object_1name(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jint jarg6, jint jarg7, jlong jarg8, jint jarg9, jlong jarg10, jlong jarg11) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char **arg5 = (char **) 0 ;
  int32_t arg6 ;
  int32_t arg7 ;
  int64_t arg8 ;
  enum RcimOrder arg9 ;
  void *arg10 = (void *) 0 ;
  RcimGetMessageListCb arg11 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(char ***)&jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = (int32_t)jarg7; 
  arg8 = (int64_t)jarg8; 
  arg9 = (enum RcimOrder)jarg9; 
  arg10 = *(void **)&jarg10; 
  arg11 = *(RcimGetMessageListCb *)&jarg11; 
  rcim_engine_get_local_messages_by_object_name((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *const *)arg5,arg6,arg7,arg8,arg9,(void const *)arg10,arg11);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1remote_1history_1messages(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jint jarg6, jint jarg7, jboolean jarg8, jlong jarg9, jlong jarg10) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int64_t arg5 ;
  int32_t arg6 ;
  enum RcimOrder arg7 ;
  bool arg8 ;
  void *arg9 = (void *) 0 ;
  RcimGetMessageListCb arg10 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = (int64_t)jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = (enum RcimOrder)jarg7; 
  arg8 = jarg8 ? true : false; 
  arg9 = *(void **)&jarg9; 
  arg10 = *(RcimGetMessageListCb *)&jarg10; 
  rcim_engine_get_remote_history_messages((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7,arg8,(void const *)arg9,arg10);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1messages(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jint jarg6, jint jarg7, jlong jarg8, jlong jarg9) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int64_t arg5 ;
  int32_t arg6 ;
  enum RcimOrder arg7 ;
  void *arg8 = (void *) 0 ;
  RcimGetMessagesCb arg9 = (RcimGetMessagesCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = (int64_t)jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = (enum RcimOrder)jarg7; 
  arg8 = *(void **)&jarg8; 
  arg9 = *(RcimGetMessagesCb *)&jarg9; 
  rcim_engine_get_messages((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,arg7,(void const *)arg8,arg9);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1clean_1local_1history_1messages(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int64_t arg5 ;
  void *arg6 = (void *) 0 ;
  RcimEngineErrorCb arg7 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = (int64_t)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimEngineErrorCb *)&jarg7; 
  rcim_engine_clean_local_history_messages((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(void const *)arg6,arg7);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1clean_1remote_1history_1messages(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int64_t arg5 ;
  void *arg6 = (void *) 0 ;
  RcimEngineErrorCb arg7 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = (int64_t)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimEngineErrorCb *)&jarg7; 
  rcim_engine_clean_remote_history_messages((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(void const *)arg6,arg7);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1insert_1local_1messages(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimMessageBox *arg2 = (RcimMessageBox *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimEngineErrorCb arg5 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimMessageBox **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimEngineErrorCb *)&jarg5; 
  rcim_engine_insert_local_messages((RcimEngineSync const *)arg1,(RcimMessageBox const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1insert_1local_1message(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimMessageBox *arg2 = (RcimMessageBox *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimCodeMessageCb arg4 = (RcimCodeMessageCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimMessageBox **)&jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimCodeMessageCb *)&jarg4; 
  rcim_engine_insert_local_message((RcimEngineSync const *)arg1,(RcimMessageBox const *)arg2,(void const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1delete_1local_1messages(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = (void *) 0 ;
  RcimEngineErrorCb arg6 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimEngineErrorCb *)&jarg6; 
  rcim_engine_delete_local_messages((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(void const *)arg5,arg6);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1delete_1local_1messages_1by_1ids(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int64_t *arg2 = (int64_t *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimEngineErrorCb arg5 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(int64_t **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimEngineErrorCb *)&jarg5; 
  rcim_engine_delete_local_messages_by_ids((RcimEngineSync const *)arg1,(long long const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1delete_1remote_1messages(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_, jint jarg6, jboolean jarg7, jlong jarg8, jlong jarg9) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  RcimMessageBox *arg5 = (RcimMessageBox *) 0 ;
  int32_t arg6 ;
  bool arg7 ;
  void *arg8 = (void *) 0 ;
  RcimEngineErrorCb arg9 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(RcimMessageBox **)&jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = jarg7 ? true : false; 
  arg8 = *(void **)&jarg8; 
  arg9 = *(RcimEngineErrorCb *)&jarg9; 
  rcim_engine_delete_remote_messages((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(RcimMessageBox const *)arg5,arg6,arg7,(void const *)arg8,arg9);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1search_1local_1messages(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jint jarg6, jlong jarg7, jlong jarg8, jlong jarg9) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int32_t arg6 ;
  int64_t arg7 ;
  void *arg8 = (void *) 0 ;
  RcimGetMessageListCb arg9 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = (int32_t)jarg6; 
  arg7 = (int64_t)jarg7; 
  arg8 = *(void **)&jarg8; 
  arg9 = *(RcimGetMessageListCb *)&jarg9; 
  rcim_engine_search_local_messages((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,(void const *)arg8,arg9);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1search_1local_1messages_1by_1object_1name(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jlong jarg6, jint jarg7, jint jarg8, jlong jarg9, jlong jarg10, jlong jarg11) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char **arg6 = (char **) 0 ;
  int32_t arg7 ;
  int32_t arg8 ;
  int64_t arg9 ;
  void *arg10 = (void *) 0 ;
  RcimGetMessageListCb arg11 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = *(char ***)&jarg6; 
  arg7 = (int32_t)jarg7; 
  arg8 = (int32_t)jarg8; 
  arg9 = (int64_t)jarg9; 
  arg10 = *(void **)&jarg10; 
  arg11 = *(RcimGetMessageListCb *)&jarg11; 
  rcim_engine_search_local_messages_by_object_name((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *const *)arg6,arg7,arg8,arg9,(void const *)arg10,arg11);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1search_1local_1messages_1by_1time(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jint jarg6, jlong jarg7, jlong jarg8, jlong jarg9, jlong jarg10, jlong jarg11) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int32_t arg6 ;
  int64_t arg7 ;
  int64_t arg8 ;
  int64_t arg9 ;
  void *arg10 = (void *) 0 ;
  RcimGetMessageListCb arg11 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = (int32_t)jarg6; 
  arg7 = (int64_t)jarg7; 
  arg8 = (int64_t)jarg8; 
  arg9 = (int64_t)jarg9; 
  arg10 = *(void **)&jarg10; 
  arg11 = *(RcimGetMessageListCb *)&jarg11; 
  rcim_engine_search_local_messages_by_time((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8,arg9,(void const *)arg10,arg11);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1search_1local_1messages_1by_1user_1id(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jint jarg6, jlong jarg7, jlong jarg8, jlong jarg9) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int32_t arg6 ;
  int64_t arg7 ;
  void *arg8 = (void *) 0 ;
  RcimGetMessageListCb arg9 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = (int32_t)jarg6; 
  arg7 = (int64_t)jarg7; 
  arg8 = *(void **)&jarg8; 
  arg9 = *(RcimGetMessageListCb *)&jarg9; 
  rcim_engine_search_local_messages_by_user_id((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,(void const *)arg8,arg9);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1search_1local_1messages_1by_1multiple_1conversations(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jint jarg9, jstring jarg10, jint jarg11, jlong jarg12, jint jarg13, jlong jarg14, jlong jarg15) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType *arg2 = (enum RcimConversationType *) 0 ;
  int32_t arg3 ;
  char **arg4 = (char **) 0 ;
  int32_t arg5 ;
  char **arg6 = (char **) 0 ;
  int32_t arg7 ;
  char **arg8 = (char **) 0 ;
  int32_t arg9 ;
  char *arg10 = (char *) 0 ;
  int32_t arg11 ;
  int64_t arg12 ;
  enum RcimOrder arg13 ;
  void *arg14 = (void *) 0 ;
  RcimGetMessageListCb arg15 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(enum RcimConversationType **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(char ***)&jarg4; 
  arg5 = (int32_t)jarg5; 
  arg6 = *(char ***)&jarg6; 
  arg7 = (int32_t)jarg7; 
  arg8 = *(char ***)&jarg8; 
  arg9 = (int32_t)jarg9; 
  arg10 = 0;
  if (jarg10) {
    arg10 = (char *)jenv->GetStringUTFChars(jarg10, 0);
    if (!arg10) return ;
  }
  arg11 = (int32_t)jarg11; 
  arg12 = (int64_t)jarg12; 
  arg13 = (enum RcimOrder)jarg13; 
  arg14 = *(void **)&jarg14; 
  arg15 = *(RcimGetMessageListCb *)&jarg15; 
  rcim_engine_search_local_messages_by_multiple_conversations((RcimEngineSync const *)arg1,(enum RcimConversationType const *)arg2,arg3,(char const *const *)arg4,arg5,(char const *const *)arg6,arg7,(char const *const *)arg8,arg9,(char const *)arg10,arg11,arg12,arg13,(void const *)arg14,arg15);
  if (arg10) jenv->ReleaseStringUTFChars(jarg10, (const char *)arg10);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1message_1expansion_1update_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimMessageExpansionKvUpdateLsr arg3 = (RcimMessageExpansionKvUpdateLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimMessageExpansionKvUpdateLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_message_expansion_update_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1message_1expansion_1remove_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimMessageExpansionKvRemoveLsr arg3 = (RcimMessageExpansionKvRemoveLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimMessageExpansionKvRemoveLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_message_expansion_remove_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1update_1message_1expansion(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jstring jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimMessageExpansionKvInfo *arg2 = (RcimMessageExpansionKvInfo *) 0 ;
  int32_t arg3 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = (void *) 0 ;
  RcimEngineErrorCb arg6 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimMessageExpansionKvInfo **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimEngineErrorCb *)&jarg6; 
  rcim_engine_update_message_expansion((RcimEngineSync const *)arg1,(RcimMessageExpansionKvInfo const *)arg2,arg3,(char const *)arg4,(void const *)arg5,arg6);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1remove_1message_1expansion(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jstring jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char **arg2 = (char **) 0 ;
  int32_t arg3 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = (void *) 0 ;
  RcimEngineErrorCb arg6 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimEngineErrorCb *)&jarg6; 
  rcim_engine_remove_message_expansion((RcimEngineSync const *)arg1,(char const *const *)arg2,arg3,(char const *)arg4,(void const *)arg5,arg6);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1message_1sent_1status(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int64_t arg2 ;
  enum RcimSentStatus arg3 ;
  void *arg4 = (void *) 0 ;
  RcimEngineErrorCb arg5 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  arg3 = (enum RcimSentStatus)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimEngineErrorCb *)&jarg5; 
  rcim_engine_set_message_sent_status((RcimEngineSync const *)arg1,arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1message_1received_1status(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int64_t arg2 ;
  RcimReceivedStatus *arg3 = (RcimReceivedStatus *) 0 ;
  void *arg4 = (void *) 0 ;
  RcimEngineErrorCb arg5 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  arg3 = *(RcimReceivedStatus **)&jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimEngineErrorCb *)&jarg5; 
  rcim_engine_set_message_received_status((RcimEngineSync const *)arg1,arg2,(RcimReceivedStatus const *)arg3,(void const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1message_1content(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int64_t arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *arg6 = (void *) 0 ;
  RcimEngineErrorCb arg7 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimEngineErrorCb *)&jarg7; 
  rcim_engine_set_message_content((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(void const *)arg6,arg7);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1message_1extra(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jstring jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int64_t arg2 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = (void *) 0 ;
  RcimEngineErrorCb arg5 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (int64_t)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimEngineErrorCb *)&jarg5; 
  rcim_engine_set_message_extra((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(void const *)arg4,arg5);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1push_1content_1show_1status(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  bool arg2 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_set_push_content_show_status((RcimEngineSync const *)arg1,arg2,(void const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1push_1content_1show_1status(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimGetBoolCb arg3 = (RcimGetBoolCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimGetBoolCb *)&jarg3; 
  rcim_engine_get_push_content_show_status((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1push_1receive_1status(JNIEnv *jenv, jclass jcls, jlong jarg1, jboolean jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  bool arg2 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_set_push_receive_status((RcimEngineSync const *)arg1,arg2,(void const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1push_1receive_1status(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimGetBoolCb arg3 = (RcimGetBoolCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimGetBoolCb *)&jarg3; 
  rcim_engine_get_push_receive_status((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1message_1destructing_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimMessageDestructingLsr arg3 = (RcimMessageDestructingLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimMessageDestructingLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_message_destructing_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1message_1destruction_1stop_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimMessageDestructionStopLsr arg3 = (RcimMessageDestructionStopLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimMessageDestructionStopLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_message_destruction_stop_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1message_1begin_1destruct(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimMessageBox *arg2 = (RcimMessageBox *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimMessageBox **)&jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_message_begin_destruct((RcimEngineSync const *)arg1,(RcimMessageBox const *)arg2,(void const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1message_1stop_1destruct(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimMessageBox *arg2 = (RcimMessageBox *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimMessageBox **)&jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_message_stop_destruct((RcimEngineSync const *)arg1,(RcimMessageBox const *)arg2,(void const *)arg3,arg4);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1conversation_1status_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimConversationStatusLsr arg3 = (RcimConversationStatusLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimConversationStatusLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_conversation_status_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1typing_1status_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimTypingStatusLsr arg3 = (RcimTypingStatusLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimTypingStatusLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_typing_status_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1send_1typing_1status(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *arg6 = (void *) 0 ;
  RcimEngineErrorCb arg7 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimEngineErrorCb *)&jarg7; 
  rcim_engine_send_typing_status((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(void const *)arg6,arg7);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1typing_1status_1interval(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int32_t arg2 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_set_typing_status_interval((RcimEngineSync const *)arg1,arg2,(void const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1conversation(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = (void *) 0 ;
  RcimGetConversationCb arg6 = (RcimGetConversationCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimGetConversationCb *)&jarg6; 
  rcim_engine_get_local_conversation((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(void const *)arg5,arg6);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1conversations_1by_1page(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType *arg2 = (enum RcimConversationType *) 0 ;
  int32_t arg3 ;
  int64_t arg4 ;
  int32_t arg5 ;
  void *arg6 = (void *) 0 ;
  RcimGetConversationListCb arg7 = (RcimGetConversationListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(enum RcimConversationType **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = (int64_t)jarg4; 
  arg5 = (int32_t)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimGetConversationListCb *)&jarg7; 
  rcim_engine_get_local_conversations_by_page((RcimEngineSync const *)arg1,(enum RcimConversationType const *)arg2,arg3,arg4,arg5,(void const *)arg6,arg7);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1pin_1conversations_1by_1page(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jboolean jarg6, jlong jarg7, jlong jarg8) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType *arg2 = (enum RcimConversationType *) 0 ;
  int32_t arg3 ;
  int64_t arg4 ;
  int32_t arg5 ;
  bool arg6 ;
  void *arg7 = (void *) 0 ;
  RcimGetConversationListCb arg8 = (RcimGetConversationListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(enum RcimConversationType **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = (int64_t)jarg4; 
  arg5 = (int32_t)jarg5; 
  arg6 = jarg6 ? true : false; 
  arg7 = *(void **)&jarg7; 
  arg8 = *(RcimGetConversationListCb *)&jarg8; 
  rcim_engine_get_local_pin_conversations_by_page((RcimEngineSync const *)arg1,(enum RcimConversationType const *)arg2,arg3,arg4,arg5,arg6,(void const *)arg7,arg8);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1muted_1conversations_1by_1page(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jlong jarg9) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType *arg2 = (enum RcimConversationType *) 0 ;
  int32_t arg3 ;
  int64_t arg4 ;
  int32_t arg5 ;
  enum RcimPushNotificationMuteLevel *arg6 = (enum RcimPushNotificationMuteLevel *) 0 ;
  int32_t arg7 ;
  void *arg8 = (void *) 0 ;
  RcimGetConversationListCb arg9 = (RcimGetConversationListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(enum RcimConversationType **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = (int64_t)jarg4; 
  arg5 = (int32_t)jarg5; 
  arg6 = *(enum RcimPushNotificationMuteLevel **)&jarg6; 
  arg7 = (int32_t)jarg7; 
  arg8 = *(void **)&jarg8; 
  arg9 = *(RcimGetConversationListCb *)&jarg9; 
  rcim_engine_get_local_muted_conversations_by_page((RcimEngineSync const *)arg1,(enum RcimConversationType const *)arg2,arg3,arg4,arg5,(enum RcimPushNotificationMuteLevel const *)arg6,arg7,(void const *)arg8,arg9);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1clear_1local_1conversations(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType *arg2 = (enum RcimConversationType *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimEngineErrorCb arg5 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(enum RcimConversationType **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimEngineErrorCb *)&jarg5; 
  rcim_engine_clear_local_conversations((RcimEngineSync const *)arg1,(enum RcimConversationType const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1remove_1remote_1conversations(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimConversationIdentifier *arg2 = (RcimConversationIdentifier *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimEngineErrorCb arg5 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimConversationIdentifier **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimEngineErrorCb *)&jarg5; 
  rcim_engine_remove_remote_conversations((RcimEngineSync const *)arg1,(RcimConversationIdentifier const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1remove_1conversations(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimConversationIdentifier *arg2 = (RcimConversationIdentifier *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimEngineErrorCb arg5 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimConversationIdentifier **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimEngineErrorCb *)&jarg5; 
  rcim_engine_remove_conversations((RcimEngineSync const *)arg1,(RcimConversationIdentifier const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1pin_1conversations(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jboolean jarg4, jboolean jarg5, jboolean jarg6, jlong jarg7, jlong jarg8) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimConversationIdentifier *arg2 = (RcimConversationIdentifier *) 0 ;
  int32_t arg3 ;
  bool arg4 ;
  bool arg5 ;
  bool arg6 ;
  void *arg7 = (void *) 0 ;
  RcimEngineErrorCb arg8 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimConversationIdentifier **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = jarg4 ? true : false; 
  arg5 = jarg5 ? true : false; 
  arg6 = jarg6 ? true : false; 
  arg7 = *(void **)&jarg7; 
  arg8 = *(RcimEngineErrorCb *)&jarg8; 
  rcim_engine_pin_conversations((RcimEngineSync const *)arg1,(RcimConversationIdentifier const *)arg2,arg3,arg4,arg5,arg6,(void const *)arg7,arg8);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1conversation_1pin_1status(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = (void *) 0 ;
  RcimGetBoolCb arg6 = (RcimGetBoolCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimGetBoolCb *)&jarg6; 
  rcim_engine_get_local_conversation_pin_status((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(void const *)arg5,arg6);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1mute_1conversations(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimConversationIdentifier *arg2 = (RcimConversationIdentifier *) 0 ;
  int32_t arg3 ;
  enum RcimPushNotificationMuteLevel arg4 ;
  void *arg5 = (void *) 0 ;
  RcimEngineErrorCb arg6 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimConversationIdentifier **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = (enum RcimPushNotificationMuteLevel)jarg4; 
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimEngineErrorCb *)&jarg6; 
  rcim_engine_mute_conversations((RcimEngineSync const *)arg1,(RcimConversationIdentifier const *)arg2,arg3,arg4,(void const *)arg5,arg6);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1conversation_1mute_1level(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = (void *) 0 ;
  RcimGetLocalConversationMuteLevelCb arg6 = (RcimGetLocalConversationMuteLevelCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimGetLocalConversationMuteLevelCb *)&jarg6; 
  rcim_engine_get_local_conversation_mute_level((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(void const *)arg5,arg6);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1unread_1conversation(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType *arg2 = (enum RcimConversationType *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimGetConversationListCb arg5 = (RcimGetConversationListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(enum RcimConversationType **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimGetConversationListCb *)&jarg5; 
  rcim_engine_get_local_unread_conversation((RcimEngineSync const *)arg1,(enum RcimConversationType const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1search_1local_1conversations(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jstring jarg4, jlong jarg5, jint jarg6, jstring jarg7, jlong jarg8, jlong jarg9) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType *arg2 = (enum RcimConversationType *) 0 ;
  int32_t arg3 ;
  char *arg4 = (char *) 0 ;
  char **arg5 = (char **) 0 ;
  int32_t arg6 ;
  char *arg7 = (char *) 0 ;
  void *arg8 = (void *) 0 ;
  RcimGetConversationListCb arg9 = (RcimGetConversationListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(enum RcimConversationType **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(char ***)&jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = 0;
  if (jarg7) {
    arg7 = (char *)jenv->GetStringUTFChars(jarg7, 0);
    if (!arg7) return ;
  }
  arg8 = *(void **)&jarg8; 
  arg9 = *(RcimGetConversationListCb *)&jarg9; 
  rcim_engine_search_local_conversations((RcimEngineSync const *)arg1,(enum RcimConversationType const *)arg2,arg3,(char const *)arg4,(char const *const *)arg5,arg6,(char const *)arg7,(void const *)arg8,arg9);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg7) jenv->ReleaseStringUTFChars(jarg7, (const char *)arg7);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1no_1disturbing(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3, jint jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  int32_t arg3 ;
  enum RcimPushNotificationMuteLevel arg4 ;
  void *arg5 = (void *) 0 ;
  RcimEngineErrorCb arg6 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = (int32_t)jarg3; 
  arg4 = (enum RcimPushNotificationMuteLevel)jarg4; 
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimEngineErrorCb *)&jarg6; 
  rcim_engine_set_no_disturbing((RcimEngineSync const *)arg1,(char const *)arg2,arg3,arg4,(void const *)arg5,arg6);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1unset_1no_1disturbing(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimEngineErrorCb arg3 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimEngineErrorCb *)&jarg3; 
  rcim_engine_unset_no_disturbing((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1no_1disturbing(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimGetNoDisturbingCb arg3 = (RcimGetNoDisturbingCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimGetNoDisturbingCb *)&jarg3; 
  rcim_engine_get_no_disturbing((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1save_1text_1message_1draft(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *arg6 = (void *) 0 ;
  RcimEngineErrorCb arg7 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimEngineErrorCb *)&jarg7; 
  rcim_engine_save_text_message_draft((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(void const *)arg6,arg7);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1text_1message_1draft(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = (void *) 0 ;
  RcimGetTextMessageDraftCb arg6 = (RcimGetTextMessageDraftCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimGetTextMessageDraftCb *)&jarg6; 
  rcim_engine_get_text_message_draft((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(void const *)arg5,arg6);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1total_1unread_1count(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimGetCountCb arg3 = (RcimGetCountCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimGetCountCb *)&jarg3; 
  rcim_engine_get_total_unread_count((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1unread_1count_1by_1conversations(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimConversationIdentifier *arg2 = (RcimConversationIdentifier *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimGetCountCb arg5 = (RcimGetCountCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimConversationIdentifier **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimGetCountCb *)&jarg5; 
  rcim_engine_get_unread_count_by_conversations((RcimEngineSync const *)arg1,(RcimConversationIdentifier const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1unread_1count(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = (void *) 0 ;
  RcimGetCountCb arg6 = (RcimGetCountCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimGetCountCb *)&jarg6; 
  rcim_engine_get_unread_count((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(void const *)arg5,arg6);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1unread_1count_1by_1conversation_1types(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jboolean jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType *arg2 = (enum RcimConversationType *) 0 ;
  int32_t arg3 ;
  bool arg4 ;
  void *arg5 = (void *) 0 ;
  RcimGetCountCb arg6 = (RcimGetCountCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(enum RcimConversationType **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = jarg4 ? true : false; 
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimGetCountCb *)&jarg6; 
  rcim_engine_get_unread_count_by_conversation_types((RcimEngineSync const *)arg1,(enum RcimConversationType const *)arg2,arg3,arg4,(void const *)arg5,arg6);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1unread_1count_1by_1levels(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType *arg2 = (enum RcimConversationType *) 0 ;
  int32_t arg3 ;
  enum RcimPushNotificationMuteLevel *arg4 = (enum RcimPushNotificationMuteLevel *) 0 ;
  int32_t arg5 ;
  void *arg6 = (void *) 0 ;
  RcimGetCountCb arg7 = (RcimGetCountCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(enum RcimConversationType **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(enum RcimPushNotificationMuteLevel **)&jarg4; 
  arg5 = (int32_t)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimGetCountCb *)&jarg7; 
  rcim_engine_get_unread_count_by_levels((RcimEngineSync const *)arg1,(enum RcimConversationType const *)arg2,arg3,(enum RcimPushNotificationMuteLevel const *)arg4,arg5,(void const *)arg6,arg7);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1clear_1messages_1unread_1status(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = (void *) 0 ;
  RcimEngineErrorCb arg6 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimEngineErrorCb *)&jarg6; 
  rcim_engine_clear_messages_unread_status((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(void const *)arg5,arg6);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1clear_1messages_1unread_1status_1by_1send_1time(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int64_t arg5 ;
  void *arg6 = (void *) 0 ;
  RcimEngineErrorCb arg7 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = (int64_t)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimEngineErrorCb *)&jarg7; 
  rcim_engine_clear_messages_unread_status_by_send_time((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(void const *)arg6,arg7);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1sync_1conversation_1read_1status(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int64_t arg5 ;
  void *arg6 = (void *) 0 ;
  RcimEngineErrorCb arg7 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = (int64_t)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimEngineErrorCb *)&jarg7; 
  rcim_engine_sync_conversation_read_status((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(void const *)arg6,arg7);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1sync_1conversation_1read_1status_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimConversationReadStatusLsr arg3 = (RcimConversationReadStatusLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimConversationReadStatusLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_sync_conversation_read_status_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1unread_1mentioned_1messages(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jint jarg5, jint jarg6, jlong jarg7, jlong jarg8) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int32_t arg5 ;
  enum RcimOrder arg6 ;
  void *arg7 = (void *) 0 ;
  RcimGetMessageListCb arg8 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = (int32_t)jarg5; 
  arg6 = (enum RcimOrder)jarg6; 
  arg7 = *(void **)&jarg7; 
  arg8 = *(RcimGetMessageListCb *)&jarg8; 
  rcim_engine_get_unread_mentioned_messages((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,(void const *)arg7,arg8);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1first_1unread_1message(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = (void *) 0 ;
  RcimCodeMessageCb arg6 = (RcimCodeMessageCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimCodeMessageCb *)&jarg6; 
  rcim_engine_get_first_unread_message((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(void const *)arg5,arg6);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1create_1local_1conversation(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimConversationIdentifier *arg2 = (RcimConversationIdentifier *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimEngineErrorCb arg5 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimConversationIdentifier **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimEngineErrorCb *)&jarg5; 
  rcim_engine_create_local_conversation((RcimEngineSync const *)arg1,(RcimConversationIdentifier const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1read_1timestamp(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int64_t arg5 ;
  void *arg6 = (void *) 0 ;
  RcimEngineErrorCb arg7 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = (int64_t)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimEngineErrorCb *)&jarg7; 
  rcim_engine_set_read_timestamp((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(void const *)arg6,arg7);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1chatroom_1status_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimChatroomStatusLsr arg3 = (RcimChatroomStatusLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimChatroomStatusLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_chatroom_status_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1chatroom_1member_1changed_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimChatroomMemberChangedLsr arg3 = (RcimChatroomMemberChangedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimChatroomMemberChangedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_chatroom_member_changed_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1chatroom_1member_1banned_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimChatroomMemberBannedLsr arg3 = (RcimChatroomMemberBannedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimChatroomMemberBannedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_chatroom_member_banned_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1chatroom_1member_1blocked_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimChatroomMemberBlockedLsr arg3 = (RcimChatroomMemberBlockedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimChatroomMemberBlockedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_chatroom_member_blocked_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1chatroom_1multi_1client_1sync_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimChatroomMultiClientSyncLsr arg3 = (RcimChatroomMultiClientSyncLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimChatroomMultiClientSyncLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_chatroom_multi_client_sync_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1join_1chatroom(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimJoinChatroomCb arg5 = (RcimJoinChatroomCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimJoinChatroomCb *)&jarg5; 
  rcim_engine_join_chatroom((RcimEngineSync const *)arg1,(char const *)arg2,arg3,(void const *)arg4,arg5);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1join_1existing_1chatroom(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimJoinExistingChatroomCb arg5 = (RcimJoinExistingChatroomCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimJoinExistingChatroomCb *)&jarg5; 
  rcim_engine_join_existing_chatroom((RcimEngineSync const *)arg1,(char const *)arg2,arg3,(void const *)arg4,arg5);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1quit_1chatroom(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_quit_chatroom((RcimEngineSync const *)arg1,(char const *)arg2,(void const *)arg3,arg4);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1chatroom_1info(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3, jint jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  int32_t arg3 ;
  enum RcimOrder arg4 ;
  void *arg5 = (void *) 0 ;
  RcimGetChatroomInfoCb arg6 = (RcimGetChatroomInfoCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = (int32_t)jarg3; 
  arg4 = (enum RcimOrder)jarg4; 
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimGetChatroomInfoCb *)&jarg6; 
  rcim_engine_get_chatroom_info((RcimEngineSync const *)arg1,(char const *)arg2,arg3,arg4,(void const *)arg5,arg6);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1chatroom_1kv_1sync_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimChatroomKvSyncLsr arg3 = (RcimChatroomKvSyncLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimChatroomKvSyncLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_chatroom_kv_sync_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1chatroom_1kv_1changed_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimChatroomKvChangedLsr arg3 = (RcimChatroomKvChangedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimChatroomKvChangedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_chatroom_kv_changed_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1chatroom_1kv_1delete_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimChatroomKvDeleteLsr arg3 = (RcimChatroomKvDeleteLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimChatroomKvDeleteLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_chatroom_kv_delete_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1chatroom_1kvs(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jboolean jarg5, jboolean jarg6, jlong jarg7, jlong jarg8) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  RcimChatroomKvInfo *arg3 = (RcimChatroomKvInfo *) 0 ;
  int32_t arg4 ;
  bool arg5 ;
  bool arg6 ;
  void *arg7 = (void *) 0 ;
  RcimChatroomKvCb arg8 = (RcimChatroomKvCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(RcimChatroomKvInfo **)&jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = jarg5 ? true : false; 
  arg6 = jarg6 ? true : false; 
  arg7 = *(void **)&jarg7; 
  arg8 = *(RcimChatroomKvCb *)&jarg8; 
  rcim_engine_set_chatroom_kvs((RcimEngineSync const *)arg1,(char const *)arg2,(RcimChatroomKvInfo const *)arg3,arg4,arg5,arg6,(void const *)arg7,arg8);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1delete_1chatroom_1kvs(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jint jarg4, jboolean jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int32_t arg4 ;
  bool arg5 ;
  void *arg6 = (void *) 0 ;
  RcimChatroomKvCb arg7 = (RcimChatroomKvCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(char ***)&jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = jarg5 ? true : false; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimChatroomKvCb *)&jarg7; 
  rcim_engine_delete_chatroom_kvs((RcimEngineSync const *)arg1,(char const *)arg2,(char const *const *)arg3,arg4,arg5,(void const *)arg6,arg7);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1chatroom_1kv_1by_1keys(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jint jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int32_t arg4 ;
  void *arg5 = (void *) 0 ;
  RcimChatroomGetKvCb arg6 = (RcimChatroomGetKvCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(char ***)&jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimChatroomGetKvCb *)&jarg6; 
  rcim_engine_get_local_chatroom_kv_by_keys((RcimEngineSync const *)arg1,(char const *)arg2,(char const *const *)arg3,arg4,(void const *)arg5,arg6);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1chatroom_1all_1kvs(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimChatroomGetKvCb arg4 = (RcimChatroomGetKvCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimChatroomGetKvCb *)&jarg4; 
  rcim_engine_get_chatroom_all_kvs((RcimEngineSync const *)arg1,(char const *)arg2,(void const *)arg3,arg4);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1log_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimLogLsr arg3 = (RcimLogLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimLogLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_log_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1log_1filter(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimLogLevel arg2 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimLogLevel)jarg2; 
  result = (enum RcimEngineError)rcim_engine_set_log_filter((RcimEngineSync const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1insert_1log(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimInsertLogInfo *arg2 = (RcimInsertLogInfo *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimEngineErrorCb arg4 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimInsertLogInfo **)&jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimEngineErrorCb *)&jarg4; 
  rcim_engine_insert_log((RcimEngineSync const *)arg1,(RcimInsertLogInfo const *)arg2,(void const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1public_1service(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimGetPublicServiceCb arg4 = (RcimGetPublicServiceCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimGetPublicServiceCb *)&jarg4; 
  rcim_engine_get_local_public_service((RcimEngineSync const *)arg1,(char const *)arg2,(void const *)arg3,arg4);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1local_1all_1public_1services(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimGetLocalPublicServiceListCb arg3 = (RcimGetLocalPublicServiceListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimGetLocalPublicServiceListCb *)&jarg3; 
  rcim_engine_get_local_all_public_services((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1send_1read_1receipt_1response_1v5(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jint jarg6, jlong jarg7, jlong jarg8) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char **arg5 = (char **) 0 ;
  int32_t arg6 ;
  void *arg7 = (void *) 0 ;
  RcimGetMessageListCb arg8 = (RcimGetMessageListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(char ***)&jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = *(void **)&jarg7; 
  arg8 = *(RcimGetMessageListCb *)&jarg8; 
  rcim_engine_send_read_receipt_response_v5((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *const *)arg5,arg6,(void const *)arg7,arg8);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1message_1read_1receipt_1users_1v5(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *arg6 = (void *) 0 ;
  RcimGetMessageReadReceiptUsersCb arg7 = (RcimGetMessageReadReceiptUsersCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimGetMessageReadReceiptUsersCb *)&jarg7; 
  rcim_engine_get_message_read_receipt_users_v5((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(void const *)arg6,arg7);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1message_1read_1receipt_1users_1by_1page_1v5(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jint jarg7, jint jarg8, jint jarg9, jlong jarg10, jlong jarg11) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  int32_t arg7 ;
  enum RcimFilterReadStatus arg8 ;
  enum RcimOrder arg9 ;
  void *arg10 = (void *) 0 ;
  RcimGetMessageReadReceiptUsersByPageV5Cb arg11 = (RcimGetMessageReadReceiptUsersByPageV5Cb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = 0;
  if (jarg6) {
    arg6 = (char *)jenv->GetStringUTFChars(jarg6, 0);
    if (!arg6) return ;
  }
  arg7 = (int32_t)jarg7; 
  arg8 = (enum RcimFilterReadStatus)jarg8; 
  arg9 = (enum RcimOrder)jarg9; 
  arg10 = *(void **)&jarg10; 
  arg11 = *(RcimGetMessageReadReceiptUsersByPageV5Cb *)&jarg11; 
  rcim_engine_get_message_read_receipt_users_by_page_v5((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6,arg7,arg8,arg9,(void const *)arg10,arg11);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
  if (arg6) jenv->ReleaseStringUTFChars(jarg6, (const char *)arg6);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1message_1read_1receipt_1users_1by_1users_1v5(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jlong jarg6, jint jarg7, jlong jarg8, jlong jarg9) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char **arg6 = (char **) 0 ;
  int32_t arg7 ;
  void *arg8 = (void *) 0 ;
  RcimGetMessageReadReceiptUsersCb arg9 = (RcimGetMessageReadReceiptUsersCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = *(char ***)&jarg6; 
  arg7 = (int32_t)jarg7; 
  arg8 = *(void **)&jarg8; 
  arg9 = *(RcimGetMessageReadReceiptUsersCb *)&jarg9; 
  rcim_engine_get_message_read_receipt_users_by_users_v5((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *const *)arg6,arg7,(void const *)arg8,arg9);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1message_1read_1receipt_1info_1v5(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jint jarg6, jlong jarg7, jlong jarg8) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimConversationType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char **arg5 = (char **) 0 ;
  int32_t arg6 ;
  void *arg7 = (void *) 0 ;
  RcimGetMessageReadReceiptInfoCb arg8 = (RcimGetMessageReadReceiptInfoCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = (enum RcimConversationType)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(char ***)&jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = *(void **)&jarg7; 
  arg8 = *(RcimGetMessageReadReceiptInfoCb *)&jarg8; 
  rcim_engine_get_message_read_receipt_info_v5((RcimEngineSync const *)arg1,arg2,(char const *)arg3,(char const *)arg4,(char const *const *)arg5,arg6,(void const *)arg7,arg8);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1message_1read_1receipt_1info_1by_1identifier_1v5(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  RcimMessageIdentifier *arg2 = (RcimMessageIdentifier *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimGetMessageReadReceiptInfoCb arg5 = (RcimGetMessageReadReceiptInfoCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(RcimMessageIdentifier **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimGetMessageReadReceiptInfoCb *)&jarg5; 
  rcim_engine_get_message_read_receipt_info_by_identifier_v5((RcimEngineSync const *)arg1,(RcimMessageIdentifier const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1read_1receipt_1v5_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimReadReceiptV5Lsr arg3 = (RcimReadReceiptV5Lsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimReadReceiptV5Lsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_read_receipt_v5_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1voip_1call_1info_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimVoipCallInfoLsr arg3 = (RcimVoipCallInfoLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimVoipCallInfoLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_voip_call_info_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1send_1rtc_1signaling(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3, jboolean jarg4, jlong jarg5, jint jarg6, jint jarg7, jlong jarg8, jlong jarg9, jlong jarg10) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  uint8_t *arg5 = (uint8_t *) 0 ;
  int32_t arg6 ;
  int32_t arg7 ;
  void *arg8 = (void *) 0 ;
  RcimI64Cb arg9 = (RcimI64Cb) 0 ;
  RcimSendRtcSignalingCb arg10 = (RcimSendRtcSignalingCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = jarg4 ? true : false; 
  arg5 = *(uint8_t **)&jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = (int32_t)jarg7; 
  arg8 = *(void **)&jarg8; 
  arg9 = *(RcimI64Cb *)&jarg9; 
  arg10 = *(RcimSendRtcSignalingCb *)&jarg10; 
  rcim_engine_send_rtc_signaling((RcimEngineSync const *)arg1,(char const *)arg2,(char const *)arg3,arg4,(unsigned char const *)arg5,arg6,arg7,(void const *)arg8,arg9,arg10);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1cancel_1rtc_1signaling(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  int64_t *arg2 = (int64_t *) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimEngineErrorCb arg5 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(int64_t **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimEngineErrorCb *)&jarg5; 
  rcim_engine_cancel_rtc_signaling((RcimEngineSync const *)arg1,(long long const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1rtc_1heartbeat_1send_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimRtcHeartBeatSendLsr arg3 = (RcimRtcHeartBeatSendLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimRtcHeartBeatSendLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_rtc_heartbeat_send_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1rtc_1heartbeat_1send_1result_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimRtcHeartBeatResultLsr arg3 = (RcimRtcHeartBeatResultLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimRtcHeartBeatResultLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_rtc_heartbeat_send_result_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1rtc_1room_1event_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimRtcRoomEventLsr arg3 = (RcimRtcRoomEventLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimRtcRoomEventLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_rtc_room_event_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1send_1rtc_1heartbeat(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char **arg2 = (char **) 0 ;
  int32_t arg3 ;
  int32_t arg4 ;
  void *arg5 = (void *) 0 ;
  RcimEngineErrorCb arg6 = (RcimEngineErrorCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimEngineErrorCb *)&jarg6; 
  rcim_engine_send_rtc_heartbeat((RcimEngineSync const *)arg1,(char const *const *)arg2,arg3,arg4,(void const *)arg5,arg6);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1rtc_1set_1kv_1signaling(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = (void *) 0 ;
  RcimRtcSetKVSignalingCb arg6 = (RcimRtcSetKVSignalingCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimRtcSetKVSignalingCb *)&jarg6; 
  rcim_engine_rtc_set_kv_signaling((RcimEngineSync const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(void const *)arg5,arg6);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1rtc_1kv_1signaling_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimRtcKvSignalingLsr arg3 = (RcimRtcKvSignalingLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimRtcKvSignalingLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_rtc_kv_signaling_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1create(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  RcimGroupOperationInfo *arg3 = (RcimGroupOperationInfo *) 0 ;
  char **arg4 = (char **) 0 ;
  int32_t arg5 ;
  void *arg6 = (void *) 0 ;
  RcimGroupOperateCb arg7 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(RcimGroupOperationInfo **)&jarg3; 
  arg4 = *(char ***)&jarg4; 
  arg5 = (int32_t)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimGroupOperateCb *)&jarg7; 
  rcim_engine_group_create((RcimEngineSync const *)arg1,(char const *)arg2,(RcimGroupOperationInfo const *)arg3,(char const *const *)arg4,arg5,(void const *)arg6,arg7);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1update_1info(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  RcimGroupOperationInfo *arg3 = (RcimGroupOperationInfo *) 0 ;
  void *arg4 = (void *) 0 ;
  RcimGroupOperateCb arg5 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(RcimGroupOperationInfo **)&jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimGroupOperateCb *)&jarg5; 
  rcim_engine_group_update_info((RcimEngineSync const *)arg1,(char const *)arg2,(RcimGroupOperationInfo const *)arg3,(void const *)arg4,arg5);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1groups_1info_1by_1ids(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char **arg2 = (char **) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimGetGroupInfoListCb arg5 = (RcimGetGroupInfoListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimGetGroupInfoListCb *)&jarg5; 
  rcim_engine_get_groups_info_by_ids((RcimEngineSync const *)arg1,(char const *const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1group_1members_1by_1role(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jint jarg4, jstring jarg5, jint jarg6, jint jarg7, jlong jarg8, jlong jarg9) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  enum RcimGroupMemberRole *arg3 = (enum RcimGroupMemberRole *) 0 ;
  int32_t arg4 ;
  char *arg5 = (char *) 0 ;
  int32_t arg6 ;
  enum RcimOrder arg7 ;
  void *arg8 = (void *) 0 ;
  RcimGetPagedGroupMemberInfoListCb arg9 = (RcimGetPagedGroupMemberInfoListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(enum RcimGroupMemberRole **)&jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = (int32_t)jarg6; 
  arg7 = (enum RcimOrder)jarg7; 
  arg8 = *(void **)&jarg8; 
  arg9 = *(RcimGetPagedGroupMemberInfoListCb *)&jarg9; 
  rcim_engine_get_group_members_by_role((RcimEngineSync const *)arg1,(char const *)arg2,(enum RcimGroupMemberRole const *)arg3,arg4,(char const *)arg5,arg6,arg7,(void const *)arg8,arg9);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1group_1members_1by_1ids(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jint jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int32_t arg4 ;
  void *arg5 = (void *) 0 ;
  RcimGetGroupMemberInfoListCb arg6 = (RcimGetGroupMemberInfoListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(char ***)&jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimGetGroupMemberInfoListCb *)&jarg6; 
  rcim_engine_get_group_members_by_ids((RcimEngineSync const *)arg1,(char const *)arg2,(char const *const *)arg3,arg4,(void const *)arg5,arg6);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1search_1group_1members(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jint jarg5, jint jarg6, jlong jarg7, jlong jarg8) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int32_t arg5 ;
  enum RcimOrder arg6 ;
  void *arg7 = (void *) 0 ;
  RcimGetPagedGroupMemberInfoListCb arg8 = (RcimGetPagedGroupMemberInfoListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = (int32_t)jarg5; 
  arg6 = (enum RcimOrder)jarg6; 
  arg7 = *(void **)&jarg7; 
  arg8 = *(RcimGetPagedGroupMemberInfoListCb *)&jarg8; 
  rcim_engine_search_group_members((RcimEngineSync const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,(void const *)arg7,arg8);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1check_1user_1id_1in_1group(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jint jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int32_t arg4 ;
  void *arg5 = (void *) 0 ;
  RcimGetGroupMemberIdListCb arg6 = (RcimGetGroupMemberIdListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(char ***)&jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimGetGroupMemberIdListCb *)&jarg6; 
  rcim_engine_check_user_id_in_group((RcimEngineSync const *)arg1,(char const *)arg2,(char const *const *)arg3,arg4,(void const *)arg5,arg6);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1kick_1members(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int32_t arg4 ;
  RcimGroupQuitConfig *arg5 = (RcimGroupQuitConfig *) 0 ;
  void *arg6 = (void *) 0 ;
  RcimGroupOperateCb arg7 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(char ***)&jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = *(RcimGroupQuitConfig **)&jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimGroupOperateCb *)&jarg7; 
  rcim_engine_group_kick_members((RcimEngineSync const *)arg1,(char const *)arg2,(char const *const *)arg3,arg4,(RcimGroupQuitConfig const *)arg5,(void const *)arg6,arg7);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1quit(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  RcimGroupQuitConfig *arg3 = (RcimGroupQuitConfig *) 0 ;
  void *arg4 = (void *) 0 ;
  RcimGroupOperateCb arg5 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(RcimGroupQuitConfig **)&jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimGroupOperateCb *)&jarg5; 
  rcim_engine_group_quit((RcimEngineSync const *)arg1,(char const *)arg2,(RcimGroupQuitConfig const *)arg3,(void const *)arg4,arg5);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1disband(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimGroupOperateCb arg4 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimGroupOperateCb *)&jarg4; 
  rcim_engine_group_disband((RcimEngineSync const *)arg1,(char const *)arg2,(void const *)arg3,arg4);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1transfer(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3, jboolean jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  RcimGroupQuitConfig *arg5 = (RcimGroupQuitConfig *) 0 ;
  void *arg6 = (void *) 0 ;
  RcimGroupOperateCb arg7 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = jarg4 ? true : false; 
  arg5 = *(RcimGroupQuitConfig **)&jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimGroupOperateCb *)&jarg7; 
  rcim_engine_group_transfer((RcimEngineSync const *)arg1,(char const *)arg2,(char const *)arg3,arg4,(RcimGroupQuitConfig const *)arg5,(void const *)arg6,arg7);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1update_1manager(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jint jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int32_t arg4 ;
  enum RcimUserOperationType arg5 ;
  void *arg6 = (void *) 0 ;
  RcimGroupOperateCb arg7 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(char ***)&jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = (enum RcimUserOperationType)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimGroupOperateCb *)&jarg7; 
  rcim_engine_group_update_manager((RcimEngineSync const *)arg1,(char const *)arg2,(char const *const *)arg3,arg4,arg5,(void const *)arg6,arg7);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1update_1member_1info(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *arg6 = (void *) 0 ;
  RcimGroupOperateCb arg7 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimGroupOperateCb *)&jarg7; 
  rcim_engine_group_update_member_info((RcimEngineSync const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(void const *)arg6,arg7);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1update_1remark(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = (void *) 0 ;
  RcimGroupOperateCb arg5 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimGroupOperateCb *)&jarg5; 
  rcim_engine_group_update_remark((RcimEngineSync const *)arg1,(char const *)arg2,(char const *)arg3,(void const *)arg4,arg5);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1join(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimGroupOperateCb arg4 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimGroupOperateCb *)&jarg4; 
  rcim_engine_group_join((RcimEngineSync const *)arg1,(char const *)arg2,(void const *)arg3,arg4);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1invite_1users(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jint jarg4, jlong jarg5, jlong jarg6) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int32_t arg4 ;
  void *arg5 = (void *) 0 ;
  RcimGroupOperateCb arg6 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(char ***)&jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = *(void **)&jarg5; 
  arg6 = *(RcimGroupOperateCb *)&jarg6; 
  rcim_engine_group_invite_users((RcimEngineSync const *)arg1,(char const *)arg2,(char const *const *)arg3,arg4,(void const *)arg5,arg6);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1handle_1invite(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jboolean jarg6, jboolean jarg7, jlong jarg8, jlong jarg9) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  bool arg7 ;
  void *arg8 = (void *) 0 ;
  RcimGroupOperateCb arg9 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return ;
  }
  arg6 = jarg6 ? true : false; 
  arg7 = jarg7 ? true : false; 
  arg8 = *(void **)&jarg8; 
  arg9 = *(RcimGroupOperateCb *)&jarg9; 
  rcim_engine_group_handle_invite((RcimEngineSync const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,(void const *)arg8,arg9);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1update_1favorite_1members(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jint jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int32_t arg4 ;
  enum RcimUserOperationType arg5 ;
  void *arg6 = (void *) 0 ;
  RcimGroupOperateCb arg7 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(char ***)&jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = (enum RcimUserOperationType)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimGroupOperateCb *)&jarg7; 
  rcim_engine_group_update_favorite_members((RcimEngineSync const *)arg1,(char const *)arg2,(char const *const *)arg3,arg4,arg5,(void const *)arg6,arg7);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1group_1favorite_1members(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimGetGroupFavoriteMemberListCb arg4 = (RcimGetGroupFavoriteMemberListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimGetGroupFavoriteMemberListCb *)&jarg4; 
  rcim_engine_get_group_favorite_members((RcimEngineSync const *)arg1,(char const *)arg2,(void const *)arg3,arg4);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1group_1request_1list(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jstring jarg6, jint jarg7, jint jarg8, jlong jarg9, jlong jarg10) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimGroupRequestDirection *arg2 = (enum RcimGroupRequestDirection *) 0 ;
  int32_t arg3 ;
  enum RcimGroupRequestStatus *arg4 = (enum RcimGroupRequestStatus *) 0 ;
  int32_t arg5 ;
  char *arg6 = (char *) 0 ;
  int32_t arg7 ;
  enum RcimOrder arg8 ;
  void *arg9 = (void *) 0 ;
  RcimGetGroupRequestListCb arg10 = (RcimGetGroupRequestListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(enum RcimGroupRequestDirection **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(enum RcimGroupRequestStatus **)&jarg4; 
  arg5 = (int32_t)jarg5; 
  arg6 = 0;
  if (jarg6) {
    arg6 = (char *)jenv->GetStringUTFChars(jarg6, 0);
    if (!arg6) return ;
  }
  arg7 = (int32_t)jarg7; 
  arg8 = (enum RcimOrder)jarg8; 
  arg9 = *(void **)&jarg9; 
  arg10 = *(RcimGetGroupRequestListCb *)&jarg10; 
  rcim_engine_get_group_request_list((RcimEngineSync const *)arg1,(enum RcimGroupRequestDirection const *)arg2,arg3,(enum RcimGroupRequestStatus const *)arg4,arg5,(char const *)arg6,arg7,arg8,(void const *)arg9,arg10);
  if (arg6) jenv->ReleaseStringUTFChars(jarg6, (const char *)arg6);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1joined_1group_1by_1roles(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jstring jarg4, jint jarg5, jint jarg6, jlong jarg7, jlong jarg8) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  enum RcimGroupMemberRole *arg2 = (enum RcimGroupMemberRole *) 0 ;
  int32_t arg3 ;
  char *arg4 = (char *) 0 ;
  int32_t arg5 ;
  enum RcimOrder arg6 ;
  void *arg7 = (void *) 0 ;
  RcimPaginatedGroupInfoListCb arg8 = (RcimPaginatedGroupInfoListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(enum RcimGroupMemberRole **)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  arg5 = (int32_t)jarg5; 
  arg6 = (enum RcimOrder)jarg6; 
  arg7 = *(void **)&jarg7; 
  arg8 = *(RcimPaginatedGroupInfoListCb *)&jarg8; 
  rcim_engine_get_joined_group_by_roles((RcimEngineSync const *)arg1,(enum RcimGroupMemberRole const *)arg2,arg3,(char const *)arg4,arg5,arg6,(void const *)arg7,arg8);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1joined_1group_1by_1name(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3, jint jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int32_t arg4 ;
  enum RcimOrder arg5 ;
  void *arg6 = (void *) 0 ;
  RcimPaginatedGroupInfoListCb arg7 = (RcimPaginatedGroupInfoListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = (int32_t)jarg4; 
  arg5 = (enum RcimOrder)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimPaginatedGroupInfoListCb *)&jarg7; 
  rcim_engine_get_joined_group_by_name((RcimEngineSync const *)arg1,(char const *)arg2,(char const *)arg3,arg4,arg5,(void const *)arg6,arg7);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1joined_1group_1by_1ids(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char **arg2 = (char **) 0 ;
  int32_t arg3 ;
  void *arg4 = (void *) 0 ;
  RcimGetGroupInfoListCb arg5 = (RcimGetGroupInfoListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(RcimGetGroupInfoListCb *)&jarg5; 
  rcim_engine_get_joined_group_by_ids((RcimEngineSync const *)arg1,(char const *const *)arg2,arg3,(void const *)arg4,arg5);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1on_1group_1operation_1changed_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimOnGroupOperationChangedLsr arg3 = (RcimOnGroupOperationChangedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimOnGroupOperationChangedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_on_group_operation_changed_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1on_1group_1info_1changed_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimOnGroupInfoChangedLsr arg3 = (RcimOnGroupInfoChangedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimOnGroupInfoChangedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_on_group_info_changed_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1on_1group_1request_1changed_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimOnGroupRequestChangedLsr arg3 = (RcimOnGroupRequestChangedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimOnGroupRequestChangedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_on_group_request_changed_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1on_1group_1member_1info_1changed_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimOnGroupMemberInfoChangedLsr arg3 = (RcimOnGroupMemberInfoChangedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimOnGroupMemberInfoChangedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_on_group_member_info_changed_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1on_1group_1remark_1changed_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimOnGroupRemarkChangedLsr arg3 = (RcimOnGroupRemarkChangedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimOnGroupRemarkChangedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_on_group_remark_changed_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1on_1group_1favorite_1member_1changed_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimOnGroupFavoriteMemberChangedLsr arg3 = (RcimOnGroupFavoriteMemberChangedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimOnGroupFavoriteMemberChangedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_on_group_favorite_member_changed_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1update_1mute_1whitelist(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jint jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int32_t arg4 ;
  enum RcimUserOperationType arg5 ;
  void *arg6 = (void *) 0 ;
  RcimGroupOperateCb arg7 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(char ***)&jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = (enum RcimUserOperationType)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimGroupOperateCb *)&jarg7; 
  rcim_engine_group_update_mute_whitelist((RcimEngineSync const *)arg1,(char const *)arg2,(char const *const *)arg3,arg4,arg5,(void const *)arg6,arg7);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1group_1mute_1whitelist(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  RcimGetGroupMemberInfoListCb arg4 = (RcimGetGroupMemberInfoListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = *(void **)&jarg3; 
  arg4 = *(RcimGetGroupMemberInfoListCb *)&jarg4; 
  rcim_engine_get_group_mute_whitelist((RcimEngineSync const *)arg1,(char const *)arg2,(void const *)arg3,arg4);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1on_1group_1mute_1whitelist_1changed_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimOnGroupMuteWhitelistChangedLsr arg3 = (RcimOnGroupMuteWhitelistChangedLsr) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimOnGroupMuteWhitelistChangedLsr *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_on_group_mute_whitelist_changed_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1group_1update_1mute_1members(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jlong jarg8) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  enum RcimGroupMemberMuteType arg3 ;
  int32_t arg4 ;
  char **arg5 = (char **) 0 ;
  int32_t arg6 ;
  void *arg7 = (void *) 0 ;
  RcimGroupOperateCb arg8 = (RcimGroupOperateCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = (enum RcimGroupMemberMuteType)jarg3; 
  arg4 = (int32_t)jarg4; 
  arg5 = *(char ***)&jarg5; 
  arg6 = (int32_t)jarg6; 
  arg7 = *(void **)&jarg7; 
  arg8 = *(RcimGroupOperateCb *)&jarg8; 
  rcim_engine_group_update_mute_members((RcimEngineSync const *)arg1,(char const *)arg2,arg3,arg4,(char const *const *)arg5,arg6,(void const *)arg7,arg8);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1get_1group_1mute_1members(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3, jint jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int32_t arg4 ;
  enum RcimOrder arg5 ;
  void *arg6 = (void *) 0 ;
  RcimGetPagedGroupMemberInfoListCb arg7 = (RcimGetPagedGroupMemberInfoListCb) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = (int32_t)jarg4; 
  arg5 = (enum RcimOrder)jarg5; 
  arg6 = *(void **)&jarg6; 
  arg7 = *(RcimGetPagedGroupMemberInfoListCb *)&jarg7; 
  rcim_engine_get_group_mute_members((RcimEngineSync const *)arg1,(char const *)arg2,(char const *)arg3,arg4,arg5,(void const *)arg6,arg7);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1message_1box(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimMessageBox *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageBox *)rcim_malloc_message_box();
  *(RcimMessageBox **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1message_1box(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  rcim_free_message_box(arg1);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1message_1box_1vec(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int32_t arg1 ;
  RcimMessageBox *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int32_t)jarg1; 
  result = (RcimMessageBox *)rcim_malloc_message_box_vec(arg1);
  *(RcimMessageBox **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1message_1box_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimMessageBox *arg1 = (RcimMessageBox *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageBox **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  rcim_free_message_box_vec(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1receive_1status(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimReceivedStatus *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimReceivedStatus *)rcim_malloc_receive_status();
  *(RcimReceivedStatus **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1receive_1status(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RcimReceivedStatus *arg1 = (RcimReceivedStatus *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimReceivedStatus **)&jarg1; 
  rcim_free_receive_status(arg1);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1push_1config(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimPushConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimPushConfig *)rcim_malloc_push_config();
  *(RcimPushConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1push_1config(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RcimPushConfig *arg1 = (RcimPushConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushConfig **)&jarg1; 
  rcim_free_push_config(arg1);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1ios_1config(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimIosConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimIosConfig *)rcim_malloc_ios_config();
  *(RcimIosConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1ios_1config(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RcimIosConfig *arg1 = (RcimIosConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimIosConfig **)&jarg1; 
  rcim_free_ios_config(arg1);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1android_1config(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimAndroidConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimAndroidConfig *)rcim_malloc_android_config();
  *(RcimAndroidConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1android_1config(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RcimAndroidConfig *arg1 = (RcimAndroidConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimAndroidConfig **)&jarg1; 
  rcim_free_android_config(arg1);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1harmony_1config(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimHarmonyConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimHarmonyConfig *)rcim_malloc_harmony_config();
  *(RcimHarmonyConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1harmony_1config(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RcimHarmonyConfig *arg1 = (RcimHarmonyConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimHarmonyConfig **)&jarg1; 
  rcim_free_harmony_config(arg1);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1msg_1type(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimMessageType *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimMessageType *)rcim_malloc_msg_type();
  *(RcimMessageType **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1msg_1type(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RcimMessageType *arg1 = (RcimMessageType *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimMessageType **)&jarg1; 
  rcim_free_msg_type(arg1);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1conversation(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimConversation *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversation *)rcim_malloc_conversation();
  *(RcimConversation **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1conversation(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RcimConversation *arg1 = (RcimConversation *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversation **)&jarg1; 
  rcim_free_conversation(arg1);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1conversation_1identifier(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimConversationIdentifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimConversationIdentifier *)rcim_malloc_conversation_identifier();
  *(RcimConversationIdentifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1conversation_1identifier_1c(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RcimConversationIdentifier *arg1 = (RcimConversationIdentifier *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationIdentifier **)&jarg1; 
  rcim_free_conversation_identifier_c(arg1);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1conversation_1identifier_1vec(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int32_t arg1 ;
  RcimConversationIdentifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int32_t)jarg1; 
  result = (RcimConversationIdentifier *)rcim_malloc_conversation_identifier_vec(arg1);
  *(RcimConversationIdentifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1conversation_1identifier_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimConversationIdentifier *arg1 = (RcimConversationIdentifier *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimConversationIdentifier **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  rcim_free_conversation_identifier_vec(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1sdk_1version(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimSDKVersion *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimSDKVersion *)rcim_malloc_sdk_version();
  *(RcimSDKVersion **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1sdk_1version(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RcimSDKVersion *arg1 = (RcimSDKVersion *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimSDKVersion **)&jarg1; 
  rcim_free_sdk_version(arg1);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1engine_1builder_1param(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RcimEngineBuilderParam *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RcimEngineBuilderParam *)rcim_malloc_engine_builder_param();
  *(RcimEngineBuilderParam **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1engine_1builder_1param(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RcimEngineBuilderParam *arg1 = (RcimEngineBuilderParam *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimEngineBuilderParam **)&jarg1; 
  rcim_free_engine_builder_param(arg1);
}


SWIGEXPORT jlong JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1malloc_1push_1token_1info_1vec(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int32_t arg1 ;
  RcimPushTokenInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int32_t)jarg1; 
  result = (RcimPushTokenInfo *)rcim_malloc_push_token_info_vec(arg1);
  *(RcimPushTokenInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1push_1token_1info_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RcimPushTokenInfo *arg1 = (RcimPushTokenInfo *) 0 ;
  int32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RcimPushTokenInfo **)&jarg1; 
  arg2 = (int32_t)jarg2; 
  rcim_free_push_token_info_vec(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1free_1char(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  char *arg1 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return ;
  }
  rcim_free_char((char const *)arg1);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
}


SWIGEXPORT jint JNICALL Java_io_rong_imlib_swig_native_1engine2JNI_rcim_1engine_1set_1cmp_1send_1listener(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  RcimEngineSync *arg1 = (RcimEngineSync *) 0 ;
  void *arg2 = (void *) 0 ;
  RcimCmpSendCb arg3 = (RcimCmpSendCb) 0 ;
  enum RcimEngineError result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RcimEngineSync **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(RcimCmpSendCb *)&jarg3; 
  result = (enum RcimEngineError)rcim_engine_set_cmp_send_listener((RcimEngineSync const *)arg1,(void const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


#ifdef __cplusplus
}
#endif

